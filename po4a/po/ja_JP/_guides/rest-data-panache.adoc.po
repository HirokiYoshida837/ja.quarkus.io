# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-26 18:44+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/rest-data-panache.adoc:6
#, no-wrap
msgid "Quarkus - Generating JAX-RS resources with Panache"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:13
msgid ""
"A lot of web applications are monotonous CRUD applications with REST APIs "
"that are tedious to write.  To streamline this task, REST Data with Panache "
"extension can generate the basic CRUD endpoints for your entities and "
"repositories."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:16
msgid ""
"While this extension is still experimental and provides a limited feature "
"set, we hope to get an early feedback for it.  Currently this extension "
"supports Hibernate ORM with Panache and can generate CRUD resources that "
"work with `application/json` and `application/hal+json` content."
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-data-panache.adoc:19
#, no-wrap
msgid "Setting up REST Data with Panache"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:22
msgid "To begin with:"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:24
msgid "Add the required dependencies to your `pom.xml`"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:25
msgid ""
"Hibernate ORM REST Data with Panache extension "
"(`quarkus-hibernate-orm-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:26
msgid ""
"A JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, "
"`quarkus-jdbc-mariadb`, ...)"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:27
msgid ""
"One of the RESTEasy JSON serialization extensions "
"(`quarkus-resteasy-jackson` or `quarkus-resteasy-jsonb`)"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:44
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-hibernate-orm-rest-data-panache</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-jdbc-postgresql</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:47
msgid ""
"Implement the Panache entities and/or repositories as explained in the "
"link:hibernate-orm-panache[Hibernate ORM with Panache guide]."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:48
msgid "Define the interfaces for generation as explained in the sections below."
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-data-panache.adoc:49
#, no-wrap
msgid "Generating resources"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:54
msgid ""
"REST Data with Panache generates JAX-RS resources based on the interfaces "
"available in your application.  For each entity and repository that you want "
"to generate, provide an interface that extends either "
"`PanacheEntityResource` or `PanacheRepositoryResource` interface.  _Do not "
"implement these interfaces and don't provide custom methods because they "
"will be ignored._ You can, however, override the methods from the extended "
"interface in order to customize them (see the section at the end)."
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:55
#, no-wrap
msgid "PanacheEntityResource"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:58
msgid ""
"If your application has an entity (e.g. `Person`) that extends either "
"`PanacheEntity` or `PanacheEntityBase` class, you could instruct REST Data "
"with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:63
#, no-wrap
msgid ""
"public interface PeopleResource extends PanacheEntityResource<Person, Long> "
"{\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:65
#, no-wrap
msgid "PanacheRepositoryResource"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:68
msgid ""
"If your application has a simple entity (e.g. `Person`) and a repository "
"(e.g. `PersonRepository`) that implements either `PanacheRepository` or "
"`PanacheRepositoryBase` interface, you could instruct REST Data with Panache "
"to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:73
#, no-wrap
msgid ""
"public interface PeopleResource extends "
"PanacheRepositoryResource<PersonRepository, Person, Long> {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:75
#, no-wrap
msgid "The generated resource"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:79
msgid ""
"The generated resources will be functionally equivalent for both entities "
"and repositories.  The only difference being the particular data access "
"pattern in use."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:82
msgid ""
"If you have defined one of the `PeopleResource` interfaces mentioned above, "
"this extension will generate its implementation using a particular data "
"access strategy.  The implemented class then will be used by a generated "
"JAX-RS resource, which will look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:88
#, no-wrap
msgid ""
"public class PeopleResourceJaxRs { // The actual class name is going to be "
"unique\n"
"    @Inject\n"
"    PeopleResource resource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:99
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(\"application/json\")\n"
"    public Person get(@PathParam(\"id\") Long id){\n"
"        Person person = resource.get(id);\n"
"        if (person == null) {\n"
"            throw new WebApplicationException(404);\n"
"        }\n"
"        return person;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:110
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(\"application/json\")\n"
"    public Response list(@QueryParam(\"sort\") List<String> sortQuery,\n"
"            @QueryParam(\"page\") @DefaultValue(\"0\") int pageIndex,\n"
"            @QueryParam(\"size\") @DefaultValue(\"20\") int pageSize) {\n"
"        Page page = Page.of(pageIndex, pageSize);\n"
"        Sort sort = getSortFromQuery(sortQuery);\n"
"        List<Person> people = resource.list(page, sort);\n"
"        // ... build a response with page links and return a 200 response "
"with a list\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:119
#, no-wrap
msgid ""
"    @Transactional\n"
"    @POST\n"
"    @Consumes(\"application/json\")\n"
"    @Produces(\"application/json\")\n"
"    public Response add(Person personToSave) {\n"
"        Person person = resource.add(person);\n"
"        // ... build a new location URL and return 201 response with an "
"entity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:133
#, no-wrap
msgid ""
"    @Transactional\n"
"    @PUT\n"
"    @Path(\"{id}\")\n"
"    @Consumes(\"application/json\")\n"
"    @Produces(\"application/json\")\n"
"    public Response update(@PathParam(\"id\") Long id, Person personToSave) "
"{\n"
"        if (resource.get(id) == null) {\n"
"            Person person = resource.update(id, personToSave);\n"
"            return Response.status(204).build();\n"
"        }\n"
"        Person person = resource.update(id, personToSave);\n"
"        // ... build a new location URL and return 201 response with an "
"entity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:143
#, no-wrap
msgid ""
"    @Transactional\n"
"    @DELETE\n"
"    @Path(\"{id}\")\n"
"    public void delete(@PathParam(\"id\") Long id) {\n"
"        if (!resource.delete(id)) {\n"
"            throw new WebApplicationException(404);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-data-panache.adoc:145
#, no-wrap
msgid "Resource customisation"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:149
msgid ""
"REST Data with Panache provides a `@ResourceProperties` and "
"`@MethodProperties` annotations that can be used to customize certain "
"features of the resource.  It can be used in your resource interface:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:156
#, no-wrap
msgid ""
"@ResourceProperties(hal = true, path = \"my-people\")\n"
"public interface PeopleResource extends PanacheEntityResource<Person, Long> "
"{\n"
"    @MethodProperties(path = \"all\")\n"
"    List<Person> list(Page page, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:160
#, no-wrap
msgid ""
"    @MethodProperties(exposed = false)\n"
"    boolean delete(Long id);\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:162
#, no-wrap
msgid "Available options"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:165
msgid "`@ResourceProperties`"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:168
msgid ""
"`hal` - in addition to the standard `application/json` responses, generates "
"additional methods that can return `application/hal+json` responses if "
"requested via an `Accept` header.  Default is `false`."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:169
msgid ""
"`path` - resource base path. Default path is a hyphenated lowercase resource "
"name without a suffix of `resource` or `controller`."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:173
msgid ""
"`paged` - whether collection responses should be paged or not.  First, last, "
"previous and next page URIs are included in the response headers if they "
"exist.  Request page index and size are taken from the `page` and `size` "
"query parameters that default to `0` and `20` respectively.  Default is "
"`true`."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:175
msgid "`@MethodProperties`"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:177
msgid ""
"`exposed` - does not expose a particular HTTP verb when set to "
"`false`. Default is `true`."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:178
msgid ""
"`path` - operation path (this is appended to the resource base "
"path). Default is an empty string."
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-data-panache.adoc:179
#, no-wrap
msgid "Query parameters"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:182
msgid ""
"REST Data with Panache supports the following query parameters with the "
"generated resources."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:185
msgid ""
"`page` - a page number which should be returned by a list operation.  It "
"applies to the paged resources only and is a number starting with 0. Default "
"is 0."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:187
msgid ""
"`size` - a page size which should be returned by a list operation.  It "
"applies to the paged resources only and is a number starting with 1. Default "
"is 20."
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:190
msgid ""
"`sort` - a comma separated list of fields which should be used for sorting a "
"result of a list operation.  Fields are sorted in the ascending order unless "
"they're prefixed with a `-`.  E.g. `?sort=name,-age` will sort the result by "
"the name ascending by the age descending."
msgstr ""

#. type: Title ==
#: upstream/_guides/rest-data-panache.adoc:191
#, no-wrap
msgid "Response body examples"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:195
msgid ""
"As mentioned above REST Data with Panache supports the `application/json` "
"and `application/hal+json` response content types.  Here are a couple of "
"examples of how a response body would look like for the `get` and `list` "
"operations assuming there are five `Person` records in a database."
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:196
#, no-wrap
msgid "GET /people/1"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:199 upstream/_guides/rest-data-panache.adoc:240
msgid "`Accept: application/json`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:207
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"name\": \"John Johnson\",\n"
"  \"birth\": \"1988-01-10\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:210 upstream/_guides/rest-data-panache.adoc:259
msgid "`Accept: application/hal+json`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:235
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"name\": \"John Johnson\",\n"
"  \"birth\": \"1988-01-10\",\n"
"  \"_links\": {\n"
"    \"self\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"remove\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"update\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"add\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"list\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/rest-data-panache.adoc:237
#, no-wrap
msgid "GET /people?page=0&size=2"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:255
#, no-wrap
msgid ""
"[\n"
"  {\n"
"    \"id\": 1,\n"
"    \"name\": \"John Johnson\",\n"
"    \"birth\": \"1988-01-10\"\n"
"  },\n"
"  {\n"
"    \"id\": 2,\n"
"    \"name\": \"Peter Peterson\",\n"
"    \"birth\": \"1986-11-20\"\n"
"  }\n"
"]\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/rest-data-panache.adoc:327
#, no-wrap
msgid ""
"{\n"
"  \"_embedded\": [\n"
"    {\n"
"      \"id\": 1,\n"
"      \"name\": \"John Johnson\",\n"
"      \"birth\": \"1988-01-10\",\n"
"      \"_links\": {\n"
"        \"self\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"remove\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"update\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"add\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        },\n"
"        \"list\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        }\n"
"      }\n"
"    },\n"
"    {\n"
"      \"id\": 2,\n"
"      \"name\": \"Peter Peterson\",\n"
"      \"birth\": \"1986-11-20\",\n"
"      \"_links\": {\n"
"        \"self\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"remove\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"update\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"add\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        },\n"
"        \"list\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        }\n"
"      }\n"
"    }\n"
"  ],\n"
"  \"_links\": {\n"
"    \"add\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"list\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"first\": {\n"
"      \"href\": \"http://example.com/people?page=0&size=2\"\n"
"    },\n"
"    \"last\": {\n"
"      \"href\": \"http://example.com/people?page=2&size=2\"\n"
"    },\n"
"    \"next\": {\n"
"      \"href\": \"http://example.com/people?page=1&size=2\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:330
msgid "Both responses would also contain these headers:"
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:332
msgid "Link: < http://example.com/people?page=0&size=2 >; rel=\"first\""
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:333
msgid "Link: < http://example.com/people?page=2&size=2 >; rel=\"last\""
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:334
msgid "Link: < http://example.com/people?page=1&size=2 >; rel=\"next\""
msgstr ""

#. type: Plain text
#: upstream/_guides/rest-data-panache.adoc:335
msgid ""
"A `previous` link header (and hal link) would not be included, because the "
"previous page does not exist."
msgstr ""

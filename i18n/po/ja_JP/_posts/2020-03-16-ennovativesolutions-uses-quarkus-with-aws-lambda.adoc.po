# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-04 15:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:1
#, fuzzy, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:7
#, fuzzy, no-wrap
msgid ""
"layout: post\n"
"title: Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR\n"
"date: 2020-03-14\n"
"tags: user-story\n"
"author: cesarsaavedra\n"
"---\n"
msgstr ""
"layout: post\n"
"title: Ennovative SolutionsがQuarkusとAWS Lambdaを使用して、新製品PURQRでより良い顧客体験を提供しています。\n"
"date: 2020-03-14\n"
"tags: user-story\n"
"author: cesarsaavedra\n"
"---\n"

#. type: Title =
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:10
#, fuzzy, no-wrap
msgid "Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR"
msgstr "Ennovative SolutionsがQuarkusとAWS Lambdaを使用して、新製品PURQRでより良い顧客体験を提供しています。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:13
#, fuzzy, no-wrap
msgid "EnnovativeSolutions logo"
msgstr "EnnovativeSolutionsのロゴ"

#. type: Target for macro image
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:13
#, no-wrap
msgid "ennovativesolutions-purqr.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:16
#, fuzzy
msgid ""
"https://www.ennovative-solutions.be/[Ennovative Solutions] is an IT "
"Consulting and Services company out of Diepenbeek, Belgium. By working with "
"many customers, including ones in retail, they identified that many of them "
"were suffering low sales due to poor customer experience. As a result, in "
"2019, they created a new application called https://www.purqr.com/?"
"fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] "
"(Purchasing via QR codes), which is a new cloud platform that comes with "
"both a backend application and a mobile application to manage retailers’ "
"physical store showrooms. By using the mobile app, one can perform in store "
"analytics, e.g. popular products & categories, best performing salespersons, "
"etc., and deliver a more personalized experience to end customers. The "
"platform also manages appointments and customer data so when they leave the "
"showroom they can receive an overview of what they liked via mail. In "
"addition, PURQR integrates to customers’ quoting systems. For example, one "
"of its goals is to provide customers with a more personalized follow-up "
"quote to turn it into a sale. The solution also keeps customer information "
"for further communication and possible co-sale and up-sale opportunities. "
"Because one scans the products as part of its processes, one can get "
"insights into popular products that the company can then stock up on.  Their "
"cloud platform can improve customer experience and also increase sales."
msgstr ""
"link:https://www.ennovative-solutions.be/[Ennovative Solutions]社は、ベルギー"
"のディペンビークに本社を置くITコンサルティングおよびサービス会社です。彼らは"
"小売業を含む多くの顧客と仕事をすることで、多くの顧客が顧客体験の悪さから売上"
"が低いことに悩んでいることを突き止めました。その結果、2019年には、小売店の実"
"店舗のショールームを管理するためのバックエンドアプリケーションとモバイルアプ"
"リケーションの両方が付属した新しいクラウドプラットフォームである link:"
"https://www.purqr.com/?"
"fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR]"
"（QRコードを介した購買）という新しいアプリケーションを作成した。モバイルアプ"
"リを使用することで、人気のある商品やカテゴリー、売れ筋の販売員など、店舗内の"
"分析を行い、よりパーソナライズされた体験を最終顧客に提供することができます。"
"また、このプラットフォームは予約や顧客データも管理しているので、顧客がショー"
"ルームを出た後には、メールで気に入った商品の概要を受け取ることができます。さ"
"らに、PURQRは顧客の見積システムと統合しています。例えば、PURQRの目標の一つ"
"は、顧客によりパーソナライズされたフォローアップ見積もりを提供し、それを販売"
"につなげることです。また、このソリューションは、お客様との更なるコミュニケー"
"ションや、共同販売やアップセールスの機会を得るために、お客様の情報を保持して"
"います。プロセスの一部として製品をスキャンすることで、人気のある製品の情報を"
"得ることができるため、企業はその製品を仕入れることができます。同社のクラウド"
"プラットフォームは、顧客体験を向上させ、売上を増加させることができます。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:17
#, fuzzy, no-wrap
msgid "Their journey into Quarkus"
msgstr "クォークスへの旅"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:20
#, fuzzy
msgid ""
"For the development of PURQR, Ennovative Solutions decided to follow a "
"Function-as-a-Service approach by using AWS Lambda as the serverless "
"computing platform. When Dennis Baerten, Software Engineer with Ennovative "
"Solutions, started his journey using AWS Lambda, he described it as _“I ran "
"into the long startup times using regular Java in AWS Lambda”._ They soon "
"realized that using plain Java on this serverless computing platform was not "
"going to deliver the performance and experience that they were after. This "
"is when they started to look at other options."
msgstr ""
"PURQRの開発において、Ennovative Solutionsはサーバーレスコンピューティングプ"
"ラットフォームとしてAWS Lambdaを使用することで、Function-as-a-Serviceのアプ"
"ローチに従うことを決定しました。Ennovative Solutionsのソフトウェアエンジニア"
"であるDennis Baerten氏は、AWS Lambdaを使い始めたとき、 _「AWS Lambdaで通常の"
"Javaを使っていると起動時間が長いことに遭遇しました」_と説明しています。彼らは"
"すぐに、このサーバーレスコンピューティングプラットフォーム上でプレーンなJava"
"を使用しても、求めていたパフォーマンスとエクスペリエンスを提供できないことに"
"気付きました。そこで、他の選択肢を検討し始めたのです。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:21
#, fuzzy, no-wrap
msgid "From Micronaut to Quarkus"
msgstr "ミクロノートからクォークスへ"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:24
#, fuzzy
msgid ""
"A colleague of Dennis’ told him to look at Micronaut, which is another "
"framework that supports GraalVM. He tried out Micronaut but encountered "
"difficulties getting it to work with the type of application he was "
"building. Furthermore, there was no Micronaut plugin to build his native "
"image in AWS. _“Quarkus had more features and extensions than Micronaut that "
"could be compiled to native (compatible with GraalVM)”,_ Dennis asserted. "
"When he got started with Quarkus, one of the first things Dennis did was to "
"enroll himself to the Quarkus Zulip channel. Dennis engaged and connected "
"with the Quarkus community and obtained quick replies to his questions and "
"even found some bugs in Quarkus. He was even able to apply the fixes himself "
"via GitHub Pull Requests, which were eventually merged into the Quarkus "
"project. Dennis expressed _“I valued and was very pleased with the support "
"from the Quarkus community, which is very active”._ In addition, the fact "
"that Red Hat was behind Quarkus was also important to Dennis. He was "
"familiar with Hibernate and other open source technologies that are "
"sponsored by Red Hat. He knew Red Hat was a big player in the IT world so "
"knowing this gave Dennis the confidence in the technology. Knowing that Red "
"Hat was a sponsor of Quarkus, reassured him about his decision to use it to "
"implement his application."
msgstr ""
"Dennis氏の同僚が、彼にGraalVMをサポートする別のフレームワークであるMicronaut"
"を見るように言いました。彼はMicronautを試してみましたが、彼が構築しているアプ"
"リケーションの種類に合わせて動作させるのに苦労しました。さらに、AWSで彼のネイ"
"ティブイメージを構築するためのMicronautプラグインはありませんでした。 _"
"\"Quarkusには、ネイティブにコンパイルできる（GraalVMとの互換性がある）"
"Micronautよりも多くの機能やエクステンションがありました。\"と_Dennis氏は主張"
"しています。Quarkusを使い始めたとき、デニスが最初にしたことの1つは、Quarkusの"
"Zulipチャンネルに登録することでした。デニスはQuarkusコミュニティと関わり、つ"
"ながりを持ち、質問に対する迅速な回答を得て、Quarkusのバグをいくつか発見しまし"
"た。彼はGitHubのPull Requestsを通じて自分で修正を適用することさえできました。"
"Dennis氏は、 _「非常に活発なQuarkusコミュニティのサポートを評価し、非常に満足"
"しています」と_表現しています。さらに、Red HatがQuarkusの背後にいるという事実"
"もデニスにとって重要でした。彼は、HibernateやRed Hatがスポンサーとなっている"
"他のオープンソース技術に精通していました。彼はRed HatがIT業界の大物であること"
"を知っていたので、このことを知っていたことがDennisにテクノロジーへの自信を与"
"えてくれました。Red HatがQuarkusのスポンサーであることを知っていたので、アプ"
"リケーションを実装するためにQuarkusを使用するという決断をしたことは、彼を安心"
"させてくれました。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:26
#, fuzzy
msgid ""
"Ennovative Solutions had tried Micronaut during the proof of concept phase. "
"However, after learning about Quarkus and its benefits over Micronaut, they "
"migrated everything to Quarkus. In their opinion, some of these benefits "
"included:"
msgstr ""
"Ennovative Solutionsは、概念実証の段階でMicronautを試していました。しかし、"
"QuarkusとMicronautを超えるメリットを知った後、すべてをQuarkusに移行しました。"
"彼らの意見では、これらの利点のいくつかは次のようなものでした。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:28
#, fuzzy
msgid "Great support via Zulip"
msgstr "Zulipを経由した素晴らしいサポート"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:29
#, fuzzy
msgid "Ability to directly contribute to the project"
msgstr "プロジェクトに直接貢献できる能力"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:30
#, fuzzy
msgid "Fast innovation"
msgstr "ファストイノベーション"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:31
#, fuzzy
msgid ""
"Fast project release cadence that provides quick bug fixes and new features"
msgstr ""
"迅速なバグフィックスと新機能を提供する高速プロジェクトリリースケイデンス"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:32
#, fuzzy
msgid "Quarkus is following closely what happens with GraalVM"
msgstr "Quarkusは、GraalVMで何が起こるかを綿密に追っています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:33
#, fuzzy
msgid ""
"Quarkus is a hot topic and innovative technology that is talked about a lot "
"at Java conferences"
msgstr "QuarkusはJavaカンファレンスでも話題の革新的な技術です。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:34
#, fuzzy, no-wrap
msgid "PURQR high-level architecture"
msgstr "PURQR 高レベルアーキテクチャ"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:37
#, fuzzy
msgid ""
"PURQR consists of 7 Quarkus microservices that are currently running in "
"production. They have been in production since October 2019."
msgstr ""
"PURQRは、現在本番稼働中の7つのQuarkusマイクロサービスで構成されています。これ"
"らは2019年10月から本番稼働しています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:39
#, fuzzy
msgid ""
"Most of the microservices are HTTP-based and sit behind an Amazon API "
"Gateway and at the backend they are all AWS Lambda functions. These "
"microservices are:"
msgstr ""
"ほとんどのマイクロサービスはHTTPベースで、Amazon API Gatewayの後ろに配置され"
"ており、バックエンドではすべてAWS Lambda関数となっています。これらのマイクロ"
"サービスは"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:41
#, fuzzy
msgid ""
"External product view - viewing capabilities for products for the end "
"consumer"
msgstr "外部製品ビュー - 最終消費者向け製品の表示機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:42
#, fuzzy
msgid "Product repository - this is where information about products reside"
msgstr "製品のリポジトリ - ここには、製品に関する情報が存在します。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:43
#, fuzzy
msgid "Company settings - interface to set company wide parameters"
msgstr "会社設定 - 会社全体のパラメータを設定するためのインターフェイス"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:44
#, fuzzy
msgid "Appointments - customer appointments functionality"
msgstr "アポイントメント - 顧客のアポイントメント機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:45
#, fuzzy
msgid "Label generation - capabilities for generating Dymo labels"
msgstr "ラベル生成 - ダイモのラベルを生成する機能"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:46
#, fuzzy
msgid "Notifications - SQS consumer for asynchronous emails"
msgstr "通知 - 非同期電子メール用 SQS コンシューマ"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:47
#, fuzzy
msgid ""
"Summary - aggregates all the data to display on the dashboard for the "
"business owner"
msgstr ""
"サマリー - ダッシュボードに表示するすべてのデータを集約し、ビジネス・オーナー"
"に提供します。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:49
#, fuzzy
msgid ""
"Here’s a high-level pictorial of the PURQR system that uses Quarkus with AWS "
"Lamdba:"
msgstr "こちらはAWS LamdbaでQuarkusを使ったPURQRシステムの高レベルな図鑑です。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:51
#, fuzzy, no-wrap
msgid "PURQR high-levelArch"
msgstr "PURQR 高レベルアーチ"

#. type: Target for macro image
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:51
#, no-wrap
msgid "purqr-architecture.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:54
#, fuzzy
msgid ""
"As depicted in the logical architecture diagram above, the Quarkus-based "
"microservices all run as AWS Lambda functions. It is worth mentioning that "
"all these microservices run in test and production in Quarkus native mode, "
"which leverages GraalVM native image. For local development and debugging "
"purposes, they run these microservices in Quarkus JVM mode using https://"
"docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-"
"is-sam.html[AWS Serverless Application Model] (SAM) on their local machines."
msgstr ""
"上の論理アーキテクチャ図に描かれているように、Quarkusベースのマイクロサービス"
"はすべてAWS Lambda関数として実行されます。これらのマイクロサービスはすべて、"
"GraalVMネイティブイメージを活用したQuarkusネイティブモードでテストおよび本番"
"環境で実行されていることは特筆に値します。ローカルでの開発やデバッグの目的"
"で、これらのマイクロサービスをローカルマシン上で link:https://docs.aws."
"amazon.com/serverless-application-model/latest/developerguide/what-is-sam."
"html[AWS Serverless Application Model]（SAM）を使用してQuarkus JVMモードで実"
"行しています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:56
#, fuzzy
msgid ""
"Lastly, _“moving to Quarkus was easy.  Getting everything to work in native "
"mode took a couple of days. And it took about two months to develop the "
"complete application”,_ added Dennis."
msgstr ""
"最後に、 _「Quarkusへの移行は簡単でした。ネイティブモードですべてを動作させる"
"のに数日かかりました。そして、完全なアプリケーションを開発するのに約2ヶ月かか"
"りました」_とDennis氏は付け加えています。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:57
#, fuzzy, no-wrap
msgid "Quarkus benefits"
msgstr "Quarkusのメリット"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:60
#, fuzzy
msgid ""
"Ennovative Solutions found Quarkus to be a very valuable and rich Java stack "
"with a wide range of capabilities to implement any type of business "
"application. Among the many benefits that Quarkus provided to them, running "
"Java applications in AWS Lambda functions without the downside of cold "
"starts was one of them. Quarkus fast startup time was key here because they "
"wanted to reduce the cold start timing of AWS Lambda functions to a bare "
"minimum when running in both test and production environments. For example, "
"_“using Spring with AWS Lambda would have been prohibitive because the "
"startup time of Spring in AWS Lambda is too big from my research”,_ Dennis "
"mentioned ( https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-"
"boot/[1] , https://dzone.com/articles/aws-lambda-with-spring-boot[2] , "
"https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-"
"fix/[3] ). Also, from past experience, he had seen that _“using plain Java "
"with AWS Lambda, it was taking 6 to 7 seconds for a cold startup whereas "
"with Quarkus it takes about 200 milliseconds”,_ Dennis added. However, in "
"order to be more thorough in his research, he took one of the simplest "
"functions (no dependency injection, logging) he had and ran it in AWS Lambda "
"in plain Java and Quarkus native mode, the latter being a combination of "
"Quarkus + GraalVM native image. The measurements, as reported by the AWS "
"Lambda platform, are as follows:"
msgstr ""
"Ennovative Solutionsは、Quarkusが、あらゆるタイプのビジネスアプリケーションを"
"実装するための幅広い機能を備えた、非常に価値のある豊富なJavaスタックであるこ"
"とを発見しました。Quarkusが提供した多くのメリットの中でも、コールドスタートと"
"いうデメリットなしにAWS Lambda関数でJavaアプリケーションを実行できることは、"
"その中の1つでした。Quarkusの高速な起動時間は、テスト環境と本番環境の両方で実"
"行する際に、AWS Lambda関数のコールドスタートのタイミングを最小限に抑えたいと"
"考えていたため、ここで重要な鍵を握っていました。例えば、 _「AWS Lambdaで"
"Springを使うと、私の研究ではAWS LambdaでのSpringの起動時間が大きすぎるため、"
"法外なことになっていた」と_Dennis氏は述べています link:https://"
"keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[( 1]  link:"
"https://dzone.com/articles/aws-lambda-with-spring-boot[, 2], link:https://"
"pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3])。"
"また、過去の経験から、 _「AWS LambdaでプレーンなJavaを使った場合、コールドス"
"タートアップに6～7秒かかっていたのに対し、Quarkusでは200ミリ秒ほどかかってい"
"た」_とDennis氏は付け加えています。しかし、より徹底した研究を行うために、彼は"
"持っていた最もシンプルな関数の1つ（依存性注入、ロギングなし）を取って、AWS "
"LambdaでプレーンJavaとQuarkusネイティブモードで実行し、後者はQuarkus＋GraalVM"
"ネイティブイメージの組み合わせで実行した。AWS Lambdaプラットフォームから報告"
"された測定結果は以下の通りです。"

#. type: Block title
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:61
#, fuzzy, no-wrap
msgid "Quarkus with AWS Lambda - measurements"
msgstr "AWS Lambdaを使ったQuarkus - 計測"

#. type: Table
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:78
#, fuzzy, no-wrap
msgid ""
"|Metric name |Plain Java |Quarkus native mode\n"
"\n"
"|Cold start time (ms)\n"
"|584.13\n"
"|222.07\n"
"\n"
"|Execution time (ms)\n"
"|76.12\n"
"|6.67\n"
"\n"
"|Memory consumed (MB)\n"
"|102\n"
"|72\n"
msgstr "|メトリクス名｜プレーンJava｜Quarkusネイティブモード"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:81
#, fuzzy
msgid ""
"In the table above, you can see a 62% reduction in cold start from plain "
"Java to Quarkus native and a 91% reduction in execution time from plain Java "
"to Quarkus native mode! For memory consumption, there was a 29% reduction in "
"going from plain Java to Quarkus native."
msgstr ""
"上の表では、プレーンJavaからQuarkusネイティブモードへのコールドスタートが62%"
"削減され、プレーンJavaからQuarkusネイティブモードへの実行時間が91%削減されて"
"いることがわかります。メモリ消費については、プレーンJavaからQuarkusネイティブ"
"に移行することで29%の削減がありました。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:83
#, fuzzy
msgid ""
"By using Quarkus with AWS Lambda, Ennovative Solutions have been able to "
"lower the cloud resource consumption costs, which include the use of AWS "
"Lambda, SQS, DynamoDB, Route53, among others. Presently, PURQR has a handful "
"of customers so their monthly costs are minimal. However, Dennis mentions "
"that as their number of customers grows so will their cloud resource "
"consumption costs.  _“As these costs increase, this is when the benefit of "
"using Quarkus will be experienced due to its more efficient use of cloud "
"resources and fast startup time compared to plain Java and Spring Boot”,_ "
"Dennis stated."
msgstr ""
"エンノベーティブソリューションズでは、AWS LambdaとQuarkusを併用することで、"
"AWS Lambda、SQS、DynamoDB、Route53などのクラウドリソースの消費コストを下げる"
"ことができました。現在のところ、PURQRは一握りの顧客を抱えているため、月々のコ"
"ストは最小限に抑えられている。しかし、デニス氏は、顧客の数が増えれば増えるほ"
"ど、クラウドリソースの消費コストも増えていくと述べています。\" _これらのコス"
"トが増加すると、プレーンJavaやSpring Bootと比較して、クラウドリソースの効率的"
"な使用と起動時間の高速化により、Quarkusを使用するメリットが実感できるようにな"
"ります」_とDennis氏は述べています。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:85
#, fuzzy
msgid ""
"As a Spring developer, Dennis found Quarkus very easy to learn. He mentioned "
"_“it took me about 3 days to get familiar with the Quarkus stack”._ In fact, "
"he highlighted that the fast learning curve attracted him to Quarkus as "
"well. He was also particularly impressed by the Quarkus documentation, which "
"_\"is very good\",_ he added. Dennis thinks the Quarkus guides are very "
"thorough and provide good detailed information. This is another reason why "
"he selected Quarkus."
msgstr ""
"Springの開発者であるDennisは、Quarkusを学ぶのが非常に簡単だと感じています。彼"
"は _「Quarkusスタックに慣れるのに3日ほどかかりました」_と述べています。実際、"
"彼は、学習曲線の速さに惹かれてQuarkusにも惹かれたと強調しています。彼はまた、"
"Quarkusのドキュメントにも特に感銘を受けており、 _「非常に優れている」と_付け"
"加えています。Dennis氏は、Quarkusのガイドは非常に徹底しており、詳細な情報を提"
"供してくれると考えています。これもQuarkusを選んだ理由の1つです。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:86
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "学んだこと"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:89
#, fuzzy
msgid ""
"Quarkus can run in JVM mode and native mode. If you are interested in "
"running your application in Quarkus native mode, Dennis recommends to first "
"check if Quarkus offers extensions for your required functional "
"requirements. For example, if you’d like to access an in-memory-data-grid "
"(IMDG) like Kafka, he suggests you first search the Quarkus extensions to "
"see if there’s any extension related to this need. Quarkus extensions can "
"compile to native so it’s better to check if Quarkus offers your required "
"functionality before you start implementing your application with a library "
"for which Quarkus does not provide an extension. If you don’t find a Quarkus "
"extension for the third-party library you want to use, then Dennis "
"recommends to check the Quarkus project issues to see if there’s already a "
"pending request to “quark” the third-party library. Also, you’d want to "
"check with the third-party library authors/project to see if they already "
"have a Quarkus extension or are working on one.  You don’t want to find out "
"that you can’t compile your application to a native executable after you "
"have spent hours developing it! You want to avoid this if your goal is to "
"compile to native. In short, the lesson learned here is _“check first if "
"there are Quarkus extensions available for what you need”_, Dennis suggests."
msgstr ""
"Quarkusは、JVMモードとネイティブモードで実行できます。アプリケーションを"
"Quarkusのネイティブモードで実行することに興味がある場合、Dennisはまず、"
"Quarkusが必要な機能要件に対応したエクステンションを提供しているかどうかを確認"
"することをお勧めします。例えば、Kafkaのようなインメモリデータグリッド（IMDG）"
"にアクセスしたい場合は、まずQuarkusのエクステンションを検索して、この必要性に"
"関連するエクステンションがあるかどうかを確認することを勧めています。Quarkusの"
"エクステンションはネイティブにコンパイルできるので、Quarkusがエクステンション"
"を提供していないライブラリでアプリケーションを実装する前に、Quarkusが必要な機"
"能を提供しているかどうかを確認した方が良いでしょう。使用したいサードパーティ"
"製のライブラリのQuarkusエクステンションが見つからない場合、Dennis氏は、"
"Quarkusプロジェクトの問題を確認して、サードパーティ製のライブラリを「quark」"
"するための保留中のリクエストがすでに存在するかどうかを確認することをお勧めし"
"ています。また、サードパーティのライブラリの作者やプロジェクトがすでにQuarkus"
"エクステンションを持っているかどうか、またはそのエクステンションに取り組んで"
"いるかどうかを確認したいと思います。アプリケーションの開発に何時間も費やした"
"後で、ネイティブの実行ファイルにコンパイルできないことを知りたくないでしょ"
"う。ネイティブにコンパイルすることが目的であれば、このようなことは避けたいも"
"のです。要するに、ここで学んだ教訓は、 _「必要なものに対して利用可能なQuarkus"
"のエクステンションがあるかどうかをまず確認すること」_だとDennisは提案していま"
"す。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:91
#, fuzzy
msgid ""
"They were not able to use live coding with Quarkus because this capability "
"does not currently support AWS Serverless Application Model (SAM) for the "
"AWS Lambda functions running on their local machines."
msgstr ""
"この機能は現在、ローカルマシン上で実行されているAWS Lambda関数のAWS "
"Serverless Application Model（SAM）をサポートしていないため、Quarkusを使った"
"ライブコーディングはできませんでした。"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:93
#, fuzzy
msgid ""
"Lastly, although learning Quarkus was fast, learning the internals of "
"Quarkus native mode was more challenging and took longer to understand."
msgstr ""
"最後に、Quarkusの学習は速かったのですが、Quarkusネイティブモードの内部を学習"
"するのは難易度が高く、理解するのに時間がかかりました。"

#. type: Title ==
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:94
#, fuzzy, no-wrap
msgid "The future"
msgstr "将来のこと"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:97
#, fuzzy
msgid ""
"Ennovative Solutions plans to continue using Quarkus for future development "
"of PURQR as well as other solutions. They are extremely impressed by this "
"new technology and the involvement and active participation of its "
"community. About the Quarkus project, Dennis’s parting thoughts are _“Great "
"job! Keep up the good work and continue accepting work from the community.”_"
msgstr ""
"Ennovative Solutions社は、今後もPURQRやその他のソリューションの開発にQuarkus"
"を使用していく予定です。彼らは、この新しい技術とそのコミュニティの関与と積極"
"的な参加に非常に感銘を受けています。Quarkusプロジェクトについて、Dennis氏は次"
"のように述べています _。これからも良い仕事を続け、コミュニティからの仕事を受"
"け入れ続けてください。_"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:99
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "クオークスの詳細はこちら"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:101
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "クオークスのウェブサイト： http://quarkus.io"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:102
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHubプロジェクト： https://github.com/quarkusio/quarkus"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:103
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "クオークス ツイッター： https://twitter.com/QuarkusIO"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:104
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkus chat: https://quarkusio.zulipchat.com/"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:105
#, fuzzy
msgid ""
"Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr ""
"Quarkusメーリングリスト: https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:106
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[クオークスYouTubeチャンネル]"

#. type: Plain text
#: upstream/_posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc:106
#, fuzzy
msgid ""
"https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-"
"f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr ""
"link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-"
"checklist-f19180cs-201909-en.pdf[Quarkusを使う4つの理由]"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-29 14:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/scheduler.adoc:6
#, no-wrap, fuzzy
msgid "Quarkus - Scheduling Periodic Tasks"
msgstr "Quarkus - 定期的なタスクのスケジューリング"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:12
#, fuzzy
msgid ""
"Modern applications often need to run specific tasks periodically.  In this "
"guide, you learn how to schedule periodic tasks."
msgstr "最近のアプリケーションでは、定期的に特定のタスクを実行する必要があります。このガイドでは、定期的なタスクをスケジュールする方法を学びます。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:14
#, fuzzy
msgid ""
"If you need a clustered scheduler use the link:quartz[Quartz extension]."
msgstr "クラスタ化されたスケジューラが必要な場合は、 link:quartz[Quartz拡張機能を]使用してください。"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:15
#, no-wrap, fuzzy
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:18
#, fuzzy
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下のものが必要です。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:20
#, fuzzy
msgid "less than 10 minutes"
msgstr "１０分足らず"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:21
#, fuzzy
msgid "an IDE"
msgstr "アイディーイーイー"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:22
#, fuzzy
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME` が適切に設定されています。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:23
#, fuzzy
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version} の場合"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:24
#, no-wrap, fuzzy
msgid "Architecture"
msgstr "建築"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:28
#, fuzzy
msgid ""
"In this guide, we create a straightforward application accessible using HTTP "
"to get the current value of a counter.  This counter is periodically (every "
"10 seconds) incremented."
msgstr ""
"このガイドでは、カウンタの現在値を取得するためにHTTPを使用してアクセスできる簡単なアプリケーションを作成します。このカウンタは定期的に(10秒ごとに)インクリメントされます。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:30
#, fuzzy
msgid "image:scheduling-task-architecture.png[alt=Architecture]"
msgstr "image:scheduling-task-architecture.png[alt=Architecture]"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:31
#, no-wrap, fuzzy
msgid "Solution"
msgstr "解決策"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:35
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and "
"create the application step by step.  However, you can go right to the "
"completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:37
#, fuzzy
msgid ""
"Clone the Git repository: `git clone {quickstarts-clone-url}`, or download "
"an {quickstarts-archive-url}[archive]."
msgstr ""
"Git リポジトリをクローンします: `git clone {quickstarts-clone-url}` 、または {quickstarts-"
"archive-url}[archive] をダウンロードしてください。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:39
#, fuzzy
msgid ""
"The solution is located in the `scheduler-quickstart` {quickstarts-tree-url}/"
"scheduler-quickstart[directory]."
msgstr ""
"ソリューションは `scheduler-quickstart` {quickstarts-tree-url}/scheduler-"
"quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:40
#, no-wrap, fuzzy
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:43
#, fuzzy
msgid ""
"First, we need a new project. Create a new project with the following "
"command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:53
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=scheduler-quickstart \\\n"
"    -DclassName=\"org.acme.scheduler.CountResource\" \\\n"
"    -Dpath=\"/count\" \\\n"
"    -Dextensions=\"scheduler\"\n"
"cd scheduler-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/scheduler.adoc:56
#, fuzzy
msgid "It generates:"
msgstr "生成します。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:58
#, fuzzy
msgid "the Maven structure"
msgstr "メイヴン構造体"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:59
#, fuzzy
msgid "a landing page accessible on `http://localhost:8080`"
msgstr ""
"ランディングページ `&lt;a href=\"http://localhost:8080\" class=\"bare\"&gt;http://"
"localhost:8080&lt;/a&gt;`"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:60
#, fuzzy
msgid "example `Dockerfile` files for both `native` and `jvm` modes"
msgstr "`native` と `jvm` の両方のモードに対応した `Dockerfile` ファイルの例"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:61
#, fuzzy
msgid "the application configuration file"
msgstr "アプリケーション設定ファイル"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:62
#, fuzzy
msgid "an `org.acme.scheduler.CountResource` resource"
msgstr "`org.acme.scheduler.CountResource` リソース"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:63
#, fuzzy
msgid "an associated test"
msgstr "関連試験"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:65
#, fuzzy
msgid "The Maven project also imports the Quarkus scheduler extension."
msgstr "Mavenプロジェクトは、Quarkusスケジューラ拡張機能もインポートします。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:68
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the "
"`scheduler` extension to your project by running the following command in "
"your project base directory:"
msgstr ""
"すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、プロジェクトに "
"`scheduler` 拡張機能を追加することができます。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:72
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"scheduler\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/scheduler.adoc:75
#, fuzzy
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml`."

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:82
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-scheduler</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/scheduler.adoc:85
#, no-wrap, fuzzy
msgid "Creating a scheduled job"
msgstr "スケジュールされたジョブの作成"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:88
#, fuzzy
msgid ""
"In the `org.acme.scheduler` package, create the `CounterBean` class, with "
"the following content:"
msgstr "`org.acme.scheduler` パッケージで、以下の内容の `CounterBean` クラスを作成します。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:92 upstream/_guides/scheduler.adoc:152
#: upstream/_guides/scheduler.adoc:181
#, no-wrap
msgid "package org.acme.scheduler;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:97
#, no-wrap
msgid ""
"import java.util.concurrent.atomic.AtomicInteger;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
"import io.quarkus.scheduler.Scheduled;\n"
"import io.quarkus.scheduler.ScheduledExecution;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:100
#, no-wrap
msgid "@ApplicationScoped              // <1>\n"
"public class CounterBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:102
#, no-wrap
msgid "    private AtomicInteger counter = new AtomicInteger();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:106
#, no-wrap
msgid "    public int get() {  // <2>\n"
"        return counter.get();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:111
#, no-wrap
msgid ""
"    @Scheduled(every=\"10s\")     // <3>\n"
"    void increment() {\n"
"        counter.incrementAndGet(); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:117
#, no-wrap
msgid ""
"    @Scheduled(cron=\"0 15 10 * * ?\") <5>\n"
"    void cronJob(ScheduledExecution execution) {\n"
"        counter.incrementAndGet();\n"
"        System.out.println(execution.getScheduledFireTime());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:124
#, no-wrap
msgid ""
"    @Scheduled(cron = \"{cron.expr}\") <6>\n"
"    void cronJobWithExpressionInConfig() {\n"
"       counter.incrementAndGet();\n"
"       System.out.println(\"Cron expression configured in application."
"properties\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/scheduler.adoc:126
#, fuzzy
msgid "Declare the bean in the _application_ scope"
msgstr "_アプリケーション_スコープでビーンを宣言する"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:127
#, fuzzy
msgid "The `get()` method allows retrieving the current value."
msgstr "`get()` メソッドでは、現在の値を取得することができます。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:130
#, fuzzy
msgid ""
"Use the `@Scheduled` annotation to instruct Quarkus to run this method every "
"10 seconds provided a worker thread is available (Quarkus is using 10 worker "
"threads for the scheduler). If it is not available the method invocation "
"should be re-scheduled by default i.e it should be invoked as soon as "
"possible. The invocation of the scheduled method does not depend on the "
"status or result of the previous invocation."
msgstr ""
"`@Scheduled` "
"アノテーションを使用して、ワーカースレッドが利用可能であれば10秒ごとにこのメソッドを実行するようにQuarkusに指示します（Quarkusはスケジューラに10個のワーカースレッドを使用しています）。ワーカースレッドが利用できない場合は、メソッドの呼び出しをデフォルトで再スケジューリングする必要があります。スケジュールされたメソッドの呼び出しは、前回の呼び出しのステータスや結果には依存しません。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:131
#, fuzzy
msgid ""
"The code is pretty straightforward. Every 10 seconds, the counter is "
"incremented."
msgstr "コードはとても簡単です。10秒ごとにカウンタがインクリメントされます。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:132
#, fuzzy
msgid ""
"Define a job with a cron-like expression. The annotated method is executed "
"at 10:15am every day."
msgstr "cronのような式でジョブを定義します。アノテーションされたメソッドは毎日午前10時15分に実行されます。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:133
#, fuzzy
msgid ""
"Define a job with a cron-like expression `cron.expr` which is configurable "
"in `application.properties`."
msgstr "`cron.expr` `application.properties` で設定可能な cron-like 式 でジョブを定義します。"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:134
#, no-wrap, fuzzy
msgid "Updating the application configuration file"
msgstr "アプリケーション設定ファイルの更新"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:137
#, fuzzy
msgid ""
"Edit the `application.properties` file and add the `cron.expr` configuration:"
""
msgstr "`application.properties` ファイルを編集し、 `cron.expr` の設定を追加します。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:143
#, no-wrap
msgid ""
"# By default, the syntax used for cron expressions is based on Quartz - http:"
"//www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger."
"html\n"
"# You can change the syntax using the following property:\n"
"# quarkus.scheduler.cron-type=unix\n"
"cron.expr=*/5 * * * * ?\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/scheduler.adoc:145
#, no-wrap, fuzzy
msgid "Updating the resource and the test"
msgstr "リソースとテストの更新"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:148
#, fuzzy
msgid "Edit the `CountResource` class, and update the content to:"
msgstr "`CountResource` クラスを編集して、内容を更新します。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:158
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:161
#, no-wrap
msgid "@Path(\"/count\")\n"
"public class CountResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:164
#, no-wrap
msgid "    @Inject\n"
"    CounterBean counter;            // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:172
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"count: \" + counter.get();  // <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/scheduler.adoc:174
#, fuzzy
msgid "Inject the `CounterBean`"
msgstr "を注入します。 `CounterBean`"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:175
#, fuzzy
msgid "Send back the current counter value"
msgstr "現在のカウンタの値を送り返す"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:177
#, fuzzy
msgid ""
"We also need to update the tests. Edit the `CountResourceTest` class to "
"match:"
msgstr "テストも更新する必要があります。 `CountResourceTest` クラスを一致するように編集します。"

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:184
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:187
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.containsString;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:190
#, no-wrap
msgid "@QuarkusTest\n"
"public class CountResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:199
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/count\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(containsString(\"count\")); // <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/scheduler.adoc:201
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/scheduler.adoc:203
#, fuzzy
msgid "Ensure that the response contains `count`"
msgstr "レスポンスに以下が含まれていることを確認してください。 `count`"

#. type: Title ==
#: upstream/_guides/scheduler.adoc:204
#, no-wrap, fuzzy
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:209
#, fuzzy
msgid ""
"Run the application with: `./mvnw compile quarkus:dev`.  In another "
"terminal, run `curl localhost:8080/count` to check the counter value.  After "
"a few seconds, re-run `curl localhost:8080/count` to verify the counter has "
"been incremented."
msgstr ""
"`./mvnw compile quarkus:dev` でアプリケーションを実行してください。別のターミナルで `curl localhost:"
"8080/count` を実行して、カウンタの値を確認します。数秒後に `curl localhost:8080/count` "
"を再実行して、カウンタがインクリメントされていることを確認します。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:212
#, fuzzy
msgid ""
"Observe the console to verify that the message `Cron expression configured "
"in application.properties` has been displayed indicating that the cron job "
"using an expression configured in `application.properties` has been "
"triggered."
msgstr ""
"コンソールを観察して、 `application.properties` で構成された式を使用する cron ジョブがトリガされたことを示すメッセージ "
"`Cron expression configured in application.properties` が表示されたことを確認します。"

#. type: Plain text
#: upstream/_guides/scheduler.adoc:215
#, fuzzy
msgid ""
"As usual, the application can be packaged using `./mvnw clean package` and "
"executed using the `-runner.jar` file.  You can also generate the native "
"executable with `./mvnw clean package -Pnative`."
msgstr ""
"いつものように、 `./mvnw clean package` を使ってアプリケーションをパッケージ化し、 `-runner.jar` "
"ファイルを使って実行することができます。また、 `./mvnw clean package -Pnative`."

#. type: Title ==
#: upstream/_guides/scheduler.adoc:217
#, no-wrap, fuzzy
msgid "Scheduler Configuration Reference"
msgstr "スケジューラ設定リファレンス"

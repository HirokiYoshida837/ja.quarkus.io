# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-29 14:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/qute-reference.adoc:6
#, no-wrap, fuzzy
msgid "Quarkus - Qute Reference Guide"
msgstr "クォークス - キューテのリファレンスガイド"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:24
#, fuzzy
msgid ""
"Qute is a templating engine designed specifically to meet the Quarkus needs. "
" The usage of reflection is minimized to reduce the size of native images.  "
"The API combines both the imperative and the non-blocking reactive style of "
"coding.  In the development mode, all files located in the `src/main/"
"resources/templates` folder are watched for changes and modifications are "
"immediately visible in your application.  Furthermore, Qute attempts to "
"detect most of the template problems at build time and fail fast.  In this "
"guide, you will find an <<hello_world_example,introductory example>>, the "
"description of the <<core_features,core features>> and "
"<<quarkus_integration,Quarkus integration>> details."
msgstr ""
"Quteは、Quarkusのニーズを満たすために特別に設計されたテンプレートエンジンです。ネイティブ画像のサイズを小さくするために、リフレクションの使用は最小限に抑えられています。APIは、コーディングの命令型と非ブロッキング反応型の両方のスタイルを組み合わせています。開発モードでは、 "
"`src/main/resources/templates` "
"フォルダにあるすべてのファイルが変更されているかどうかが監視され、変更があった場合はすぐにアプリケーションに表示されます。さらに、Quteはビルド時にテンプレートの問題のほとんどを検出しようとし、高速に失敗します。このガイドでは、導入 "
"link:#hello_world_example[例]、 link:#core_features[コア機能の]説明、 link:"
"#quarkus_integration[Quarkusの統合の]詳細について説明しています。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:26
#, no-wrap, fuzzy
msgid "Hello World Example"
msgstr "ハローワールドの例"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:31
#, fuzzy
msgid ""
"In this example, we'd like to demonstrate the basic workflow when working "
"with Qute templates.  Let's start with a simple hello world example.  We "
"will always need some *template contents*:"
msgstr ""
"この例では、Quteのテンプレートを扱う際の基本的なワークフローをデモしたいと思います。まず、簡単なhello worldの例から始めましょう。 "
"*テンプレートの内容*は必ず必要になります。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:32
#, no-wrap, fuzzy
msgid "hello.html"
msgstr "hello.html"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:38
#, no-wrap
msgid "<html>\n"
"  <p>Hello {name}! <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:40
#, fuzzy
msgid ""
"`{name}` is a value expression that is evaluated when the template is "
"rendered."
msgstr "`{name}` は、テンプレートがレンダリングされたときに評価される値の式です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:43
#, fuzzy
msgid ""
"Then, we will need to parse the contents into a *template definition* Java "
"object.  A template definition is an instance of `io.quarkus.qute.Template`."
msgstr ""
"そして、その内容を *テンプレート定義*Javaオブジェクトにパースする必要があります。テンプレート定義は、 `io.quarkus.qute."
"Template`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:47
#, fuzzy
msgid ""
"If using Qute \"standalone\" you'll need to create an instance of `io."
"quarkus.qute.Engine` first.  The `Engine` represents a central point for "
"template management with dedicated configuration.  Let's use the convenient "
"builder:"
msgstr ""
"Quteを\"スタンドアロン\"で使用する場合は、まず `io.quarkus.qute.Engine` のインスタンスを作成する必要があります。 "
"`Engine` は、専用の設定でテンプレートを管理するための一元的なポイントを表しています。便利なビルダーを使ってみましょう。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:51
#, no-wrap
msgid "Engine engine = Engine.builder().addDefaults().build();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:54
#, fuzzy
msgid ""
"In Quarkus, there is a preconfigured `Engine` available for injection - see "
"<<quarkus_integration>>."
msgstr ""
"Quarkusでは、あらかじめ設定された `Engine` がインジェクション用に利用可能です link:#quarkus_integration[- "
"[quarkus_integration] を]参照してください。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:56
#, fuzzy
msgid ""
"Once we have an `Engine` instance we could parse the template contents:"
msgstr "`Engine` のインスタンスがあれば、テンプレートの内容を解析することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:60
#, no-wrap
msgid "Template helloTemplate = engine.parse(helloHtmlContent);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:63
#, fuzzy
msgid ""
"In Quarkus, you can simply inject the template definition. The template is "
"automatically parsed and cached - see <<quarkus_integration>>."
msgstr ""
"Quarkusでは、テンプレートの定義を単純に注入することができます。テンプレートは自動的に解析され、キャッシュされます link:"
"#quarkus_integration[- [quarkus_integration]を]参照してください。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:65
#, fuzzy
msgid ""
"Finally, we will create a *template instance*, set the data and render the "
"output:"
msgstr "最後に *テンプレートインスタンスを*作成し、データを設定して出力をレンダリングします。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:70
#, no-wrap
msgid ""
"// Renders <html><p>Hello Jim!</p></html>\n"
"helloTemplate.data(\"name\", \"Jim\").render(); <1> \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:72
#, fuzzy
msgid ""
"`Template.data(String, Object)` is a convenient method that creates a "
"template instance and sets the data in one step."
msgstr ""
"`Template.data(String, Object)` は、テンプレートのインスタンスを作成してデータを設定するだけの便利なメソッドです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:74
#, fuzzy
msgid "So the workflow is simple:"
msgstr "なので、仕事の流れは簡単です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:76
#, fuzzy
msgid "Create template contents (`hello.html`),"
msgstr "テンプレートコンテンツを作成する ( `hello.html`)。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:77
#, fuzzy
msgid "Parse template definition (`io.quarkus.qute.Template`),"
msgstr "テンプレートの定義を解析する ( `io.quarkus.qute.Template`)。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:78
#, fuzzy
msgid "Create template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "テンプレートインスタンスを作成します ( `io.quarkus.qute.TemplateInstance`)。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:79
#, fuzzy
msgid "Render output."
msgstr "出力をレンダリングします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:81
#, fuzzy
msgid ""
"The `Engine` is able to cache the definitions so that it's not necessary to "
"parse the contents again and again. In Quarkus, the caching is done "
"automatically."
msgstr ""
"`Engine` は定義をキャッシュすることができるので、何度も内容をパースする必要がありません。Quarkusでは、キャッシュは自動的に行われます。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:83
#, no-wrap, fuzzy
msgid "Core Features"
msgstr "コア機能"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:85
#, no-wrap, fuzzy
msgid "Basic Building Blocks"
msgstr "基本的なビルディングブロック"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:88
#, fuzzy
msgid ""
"The dynamic parts of a template include comments, expressions, sections and "
"unparsed character data."
msgstr "テンプレートの動的な部分には、コメント、式、セクション、パースされていない文字データなどがあります。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:89
#, no-wrap, fuzzy
msgid "Comments "
msgstr "コメント"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:93
#, fuzzy
msgid ""
"A comment starts with `{!` and ends with `!}`, e.g. `{! This is a comment "
"!}`.  It could be multi-line and may contain expressions and sections: `{! "
"{#if true} !}`.  Of course, the content of a comment is completely ignored."
msgstr ""
"`{! This is a comment !}`コメントは `{!` で始まり `!}` "
"で終わる。コメントは複数行で、表現やセクションを含むことができます: `{! {#if true} !}`."
"もちろん、コメントの内容は完全に無視されます。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:95
#: upstream/_guides/qute-reference.adoc:213
#, no-wrap, fuzzy
msgid "Expressions"
msgstr "表現方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:100
#, fuzzy
msgid ""
"An <<expressions,expression>> outputs an evaluated value.  It consists of "
"one or more parts.  A part may represent simple properties: `{foo}`, `{item."
"name}` or virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.  An "
"expression may start with a namespace: `{inject:colors}`."
msgstr ""
"link:#expressions[式は]評価された値を出力します。式は 1 "
"つ以上の部分から構成されています。部分は単純なプロパティを表すことができます: `{foo}`, `{item.name}` "
"または仮想メソッドを表すことができます: `{item.get(name)}`, `{name ?: 'John'}`."
"式は、名前空間で始まることがあります: `{inject:colors}`."

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:102
#: upstream/_guides/qute-reference.adoc:443
#, no-wrap, fuzzy
msgid "Sections"
msgstr "セクション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:107
#, fuzzy
msgid ""
"A <<sections,section>> may contain text, expressions and nested sections: "
"`{#if foo}{foo.name}{/if}`.  The name in the closing tag is optional: `{#if "
"active}ACTIVE!{/}`.  It can be empty: `{#myTag image=true /}`.  A section "
"may declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. "
"{/if}` and decide which block to render."
msgstr ""
"1 つのセ ク シ ョ link:#sections[ン]はテキス ト ・ 式 ・ 入れ子に し たセ ク シ ョ ン を含む こ と がで き ます "
"： `{#if foo}{foo.name}{/if}`.クロージングタグの名前はオプションです: `{#if active}ACTIVE!{/}`."
"空にすることもできます: `{#myTag image=true /}`.セクションは、入れ子になったセクションブロックを宣言することができます: "
"`{#if item.valid} Valid. {#else} Invalid. {/if}` そして、どのブロックをレンダリングするかを決定します。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:108
#, no-wrap, fuzzy
msgid "Unparsed Character Data"
msgstr "未解析文字データ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:111
#, fuzzy
msgid ""
"It is used to mark the content that should be rendered but not parsed.  It "
"starts with `{|` and ends with `|}`: `{| <script>if(true){alert('Qute is "
"cute!')};</script> |}`, and could be multi-line."
msgstr ""
"これは、レンダリングされるべきだが解析されないコンテンツをマークするために使用されます。 `{|` で始まり `|}`: `{| "
"&amp;lt;script&amp;gt;if(true){alert('Qute is cute!')};&amp;lt;/"
"script&amp;gt; |}` で終わります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:113
#, fuzzy
msgid ""
"Previously, unparsed character data had to start with `{[` and end with `]}`."
" This syntax is still supported but we encourage users to switch to the new "
"syntax to avoid some common collisions with constructs from other languages."
msgstr ""
"以前は、アンパースされた文字データは `{[` で始まり `]}` "
"で終わる必要がありました。この構文はまだサポートされていますが、他の言語の構文とのよくある衝突を避けるために、新しい構文に切り替えることをお勧めします。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:115
#, no-wrap, fuzzy
msgid "Identifiers and Tags"
msgstr "識別子とタグ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:120
#, fuzzy
msgid ""
"Identifiers are used in expressions and section tags.  A valid identifier is "
"a sequence of non-whitespace characters.  However, users are encouraged to "
"only use valid Java identifiers in expressions."
msgstr ""
"識別子は、式やセクションタグで使用されます。有効な識別子は、空白文字以外の文字列です。ただし、式の中では有効な Java "
"識別子のみを使用することが推奨されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:122
#, fuzzy
msgid ""
"You can use bracket notation if you need to specify an identifier that "
"contains a dot, e.g. `{map['my.key']}`."
msgstr "`{map['my.key']}`ドットを含む識別子を指定する必要がある場合は、大括弧表記を使用することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:126
#, fuzzy
msgid ""
"When parsing a template document the parser identifies all _tags_.  A tag "
"starts and ends with a curly bracket, e.g. `{foo}`.  The content of a tag "
"must start with:"
msgstr ""
"テンプレート文書を解析する際、パーサはすべての _タグを_識別します。 `{foo}`タグは中括弧で始まり、中括弧で終わります。タグの内容は"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:128
#, fuzzy
msgid "a digit, or"
msgstr "すうじ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:129
#, fuzzy
msgid "an alphabet character, or"
msgstr "アルファベットもじ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:130
#, fuzzy
msgid "underscore, or"
msgstr "アンダースコア"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:131
#, fuzzy
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "組み込みコマンド: `#`, `!`, `@`, `/`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:133
#, fuzzy
msgid ""
"If it does not start with any of the above it is ignored by the parser."
msgstr "上記のいずれかで始まらない場合は、パーサによって無視されます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:134
#, no-wrap, fuzzy
msgid "Tag Examples"
msgstr "タグの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:146
#, no-wrap
msgid ""
"<html>\n"
"   <body>\n"
"   {_foo.bar}   <1>\n"
"   {! comment !}<2>\n"
"   {  foo}      <3>\n"
"   {{foo}}      <4>\n"
"   {\"foo\":true} <5>\n"
"   </body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:148
#, fuzzy
msgid "Parsed: an expression that starts with underscore."
msgstr "解析済み: アンダースコアで始まる式。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:149
#, fuzzy
msgid "Parsed: a comment"
msgstr "解析済み: コメント"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:150
#, fuzzy
msgid "Ignored: starts with whitespace."
msgstr "無視されている: 空白で始まります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:151
#, fuzzy
msgid "Ignored: starts with `{`."
msgstr "無視されている: `{` で始まる ."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:152
#, fuzzy
msgid "Ignored: starts with `\"`."
msgstr "無視されている: `\"` で始まる ."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:154
#, fuzzy
msgid ""
"It is also possible to use escape sequences `\\{` and `\\}` to insert "
"delimiters in the text. In fact, an escape sequence is usually only needed "
"for the start delimiter, ie. `\\\\{foo}` will be rendered as `{foo}` (no "
"parsing/evaluation will happen)."
msgstr ""
"エスケープシーケンス `\\{` や `\\}` を使ってテキストにデリミタを挿入することも可能です。 `\\{foo}` `{foo}` "
"実際には、エスケープシーケンスは通常、開始デリミタのためにのみ必要とされます。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:155
#, no-wrap, fuzzy
msgid "Removing Standalone Lines From the Template"
msgstr "テンプレートから独立した行を削除する"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:161
#, fuzzy
msgid ""
"By default, the parser removes standalone lines from the template output.  A "
"*standalone line* is a line that contains at least one section tag (e.g. "
"`{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) "
"or comment but no expression and no non-whitespace character.  In other "
"words, a line that contains no section tag or a parameter declaration is "
"*not* a standalone line.  Likewise, a line that contains an _expression_ or "
"a _non-whitespace character_ is *not* a standalone line."
msgstr ""
"デフォルトでは、パーサはテンプレート出力からスタンドアロン行を削除します。スタンドアロン *行*とは、少なくとも1つのセクションタグ（例： "
"`{#each}` や `{/each}` ）、パラメータ宣言（例： `{@org.acme.Foo foo}` "
"）、コメントを含むが、式を含まず、空白以外の文字を含まない行のことです。言い換えれば、セクションタグやパラメータ宣言を含まない行は、独立した行ではあり "
"*ません*。同様に、 _式_や _空白以外の文字を_含む行もスタンドアロン行ではあり *ません*。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:162
#, no-wrap, fuzzy
msgid "Template Example"
msgstr "テンプレート例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:175
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"     {#for item in items} <1>\n"
"       <li>{item.name} {#if item.active}{item.price}{/if}</li>  <2>\n"
"                          <3>\n"
"     {/for}               <4>\n"
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:177
#, fuzzy
msgid "This is a standalone line and will be removed."
msgstr "これは単独回線なので削除されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:178
#, fuzzy
msgid ""
"Not a standalone line - contains an expression and non-whitespace characters"
msgstr "スタンドアロン行ではない - 式と非空白文字を含む"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:179
#, fuzzy
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "独立した行ではない - セクションタグ/パラメータ宣言を含まない"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:180
#, fuzzy
msgid "This is a standalone line."
msgstr "これは独立したラインです。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:181
#, no-wrap, fuzzy
msgid "Default Output"
msgstr "デフォルト出力"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:188
#, no-wrap
msgid "<html>\n"
"  <body>\n"
"     <ul>\n"
"       <li>Foo 100</li>  \n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:192
#: upstream/_guides/qute-reference.adoc:210
#, no-wrap
msgid "     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:196
#, fuzzy
msgid ""
"In Quarkus, the default behavior can be disabled by setting the property "
"`quarkus.qute.remove-standalone-lines` to `false`.  In this case, all "
"whitespace characters from a standalone line will be printed to the output."
msgstr ""
"Quarkusでは、プロパティ（ `quarkus.qute.remove-standalone-lines` ）を `false` "
"に設定することで、デフォルトの動作を無効にすることができます。この場合、スタンドアロン行のすべての空白文字が出力に出力されます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:197
#, no-wrap, fuzzy
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "との出力 `quarkus.qute.remove-standalone-lines=false`"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:203
#, no-wrap
msgid "<html>\n"
"  <body>\n"
"     <ul>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:205
#, no-wrap
msgid "       <li>Foo 100</li>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:220
#, fuzzy
msgid ""
"An expression outputs a value.  It consists of one or more parts separated "
"by dot (dot notation) or square brackets (bracket notation).  In the `object."
"property` (dot notation) syntax, the `property` must be a "
"<<identifiers,valid identifier>>.  In the `object[property_name]` (bracket "
"notation) syntax, the `property_name` has to be a non-null <<literals, "
"literal>> value.  An expression could start with an optional namespace "
"followed by a colon (`:`)."
msgstr ""
"式は値を出力します。これは、ドット(ドット表記)または角括弧(カッコ表記)で区切られた1つ以上の部分から構成されています。 `object."
"property` (ドット表記) 構文では、 `property` は link:#identifiers[有効な識別子]である必要があります。 "
"`object[property_name]` (括弧表記) 構文では、 `property_name` は非 null link:"
"#literals[リテラル]値である必要があります。式は、オプションの名前空間とコロン ( `:`) で始まることができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:221
#, no-wrap, fuzzy
msgid "Expressions Example"
msgstr "式の例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:228
#, no-wrap
msgid "{name} <1>\n"
"{item.name} <2>\n"
"{item['name']} <3>\n"
"{global:colors} <4> \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:230
#, fuzzy
msgid "no namespace, one part: `name`"
msgstr "名前空間がない、1つの部分 `name`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:231
#, fuzzy
msgid "no namespace, two parts: `item`, `name`"
msgstr "名前空間なし、2つの部分: `item`. `name`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:232
#, fuzzy
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "`{item.name}` と同等ですが、括弧表記を使用しています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:233
#, fuzzy
msgid "namespace `global`, one part: `colors`"
msgstr "namespace `global`, 一部分。 `colors`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:237
#, fuzzy
msgid ""
"A part of an expression could be a _virtual method_ in which case the name "
"can be followed by a list of comma-separated parameters in parentheses.  A "
"parameter of a virtual method can be either a nested expression or a "
"<<literals, literal>> value.  We call it \"virtual\" because it does not "
"have to be backed by a real Java method."
msgstr ""
"式の一部は "
"_仮想メソッド_である可能性があり、その場合は名前の後に括弧内のコンマで区切られたパラメータのリストを付けることができます。仮想メソッドのパラメータは、入れ子になった式か "
"link:#literals[リテラル]値のどちらかになります。これを「仮想」と呼ぶのは、実際のJavaメソッドに裏打ちされている必要がないからです。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:238
#, no-wrap, fuzzy
msgid "Virtual Methods Example"
msgstr "仮想メソッドの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:243
#, no-wrap
msgid "{item.getLabels(1)} <1>\n"
"{name or 'John'} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:245
#, fuzzy
msgid ""
"no namespace, two parts - `item`, `getLabels(1)`, the second part is a "
"virtual method with name `getLabels` and params `1`"
msgstr ""
"名前空間がなく、2つの部分 - `item`, `getLabels(1)`, 2番目の部分は、名前 `getLabels` と params "
"を持つ仮想メソッドです。 `1`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:246
#, fuzzy
msgid ""
"infix notation that can be used for virtual methods with single parameter, "
"translated to `name.or('John')`; no namespace, two parts - `name`, "
"`or('John')`"
msgstr ""
"単一のパラメータを持つ仮想メソッドに使用できる infix 記法、 `name.or('John')` に翻訳されています; 名前空間なし、2 つの部分 "
"- `name`. `or('John')`"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:248
#, no-wrap, fuzzy
msgid "Supported Literals"
msgstr "サポートされているリテラル"

#. type: Table
#: upstream/_guides/qute-reference.adoc:274
#, no-wrap, fuzzy
msgid ""
"|Literal |Examples\n"
"\n"
"|boolean \n"
"|`true`, `false`\n"
"\n"
"|null \n"
"|`null`\n"
"\n"
"|string \n"
"|`'value'`, `\"string\"`\n"
"\n"
"|integer \n"
"|`1`, `-5`\n"
"\n"
"|long\n"
"|`1l`, `-5L`\n"
"\n"
"|double\n"
"|`1D`, `-5d`\n"
"\n"
"|float\n"
"|`1f`, `-5F`\n"
"\n"
msgstr "|リテラル｜例文"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:276
#, no-wrap, fuzzy
msgid "Resolution"
msgstr "決議"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:283
#, fuzzy
msgid ""
"The first part of the expression is always resolved against the "
"<<current_context_object, current context object>>.  If no result is found "
"for the first part it's resolved against the parent context object (if "
"available).  For an expression that starts with a namespace the current "
"context object is found using all the available ``NamespaceResolver``s.  For "
"an expression that does not start with a namespace the current context "
"object is *derived from the position* of the tag.  All other parts of an "
"expression are resolved using all ``ValueResolver``s against the result of "
"the previous resolution."
msgstr ""
"式の最初の部分は、常に link:"
"#current_context_object[現在のコンテキストオブジェクト]に対して解決されます。最初の部分で結果が見つからない場合は、親コンテキストオブジェクト "
"(利用可能な場合) に対して解決されます。名前空間で始まる式の場合、現在のコンテキストオブジェクトは、利用可能なすべての "
"`NamespaceResolver`s を使用して検出されます。名前空間で始まらない式の場合、現在のコンテキストオブジェクトはタグの "
"*位置から派生し*ます。式の他のすべての部分は、前の解決結果に対してすべての `ValueResolver`s を使用して解決されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:289
#, fuzzy
msgid ""
"For example, expression `{name}` has no namespace and single part - `name`.  "
"The \"name\" will be resolved using all available value resolvers against "
"the current context object.  However, the expression `{global:colors}` has "
"the namespace `global` and single part - `colors`.  First, all available "
"``NamespaceResolver``s will be used to find the current context object.  And "
"afterwards value resolvers will be used to resolve \"colors\" against the "
"context object found."
msgstr ""
"例えば、式 `{name}` には名前空間がなく、単一の部分 - `name`."
"名前」は、現在のコンテキスト・オブジェクトに対して利用可能なすべての値リゾルバを使用して解決されます。しかし、式 `{global:colors}` "
"には、名前空間 `global` と単一部分 - `colors` があります。まず、現在のコンテキストオブジェクトを見つけるために、利用可能なすべての "
"`NamespaceResolver`s "
"が使用されます。その後、見つかったコンテキストオブジェクトに対して\"colors\"を解決するために値リゾルバが使用されます。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:294
#, fuzzy
msgid ""
"Data passed to the template instance are always accessible using the `data` "
"namespace.  This could be useful to access data for which the key is "
"overridden:"
msgstr ""
"テンプレート・インスタンスに渡されたデータは、常に `data` "
"名前空間を使用してアクセスできます。これは、キーがオーバーライドされているデータにアクセスするのに便利かもしれません。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:309
#, no-wrap
msgid ""
"<html>\n"
"{item.name} <1>\n"
"<ul>\n"
"{#for item in item.getDerivedItems()} <2>\n"
"  <li>\n"
"  {item.name} <3> \n"
"  is derived from\n"
"  {data:item.name} <4>\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:311
#, fuzzy
msgid "`item` is passed to the template instance as a data object."
msgstr "`item` はデータオブジェクトとしてテンプレートインスタンスに渡されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:312
#, fuzzy
msgid "Iterate over the list of derived items."
msgstr "派生アイテムのリストを繰り返し処理します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:313
#, fuzzy
msgid "`item` is an alias for the iterated element."
msgstr "`item` は反復要素のエイリアスです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:314
#, fuzzy
msgid "Use the `data` namespace to access the `item` data object."
msgstr "`data` ネームスペースを使用して、 `item` データ・オブジェクトにアクセスします。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:318
#, no-wrap, fuzzy
msgid "Current Context"
msgstr "現在の状況"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:324
#, fuzzy
msgid ""
"If an expression does not specify a namespace the _current context object_ "
"is derived from the position of the tag.  By default, the current context "
"object represents the data passed to the template instance.  However, "
"sections may change the current context object.  A typical example is the "
"`with` section that could be used to set the current context object in order "
"to simplify the template structure:"
msgstr ""
"デフォルトでは、現在のコンテキスト・オブジェクトはテンプレート・インスタンスに渡されたデータを表します。しかし、セクションは現在のコンテキストオブジェクトを変更することができます。典型的な例は "
"`with` セクションで、テンプレート構造を単純化するためにカレントコンテキストオブジェクトを設定するために使用することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:331
#, no-wrap
msgid "{#with item}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:333
#, fuzzy
msgid "`name` is resolved against the `item`."
msgstr "`name` は `item` に対して解決されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:335
#, fuzzy
msgid ""
"Another built-in section that modifies the current context object is `let`/"
"`set`:"
msgstr "現在のコンテキストオブジェクトを変更する別の組み込みセクションは、 `let`/ `set`."

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:341
#, no-wrap
msgid ""
"{#let myParent=order.item.parent myPrice=order.price} <1>\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {myPrice}</p>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:343
#, fuzzy
msgid ""
"The current context object inside the section is the map of resolved "
"parameters."
msgstr "セクション内の現在のコンテキストオブジェクトは、解決されたパラメータのマップです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:345
#, fuzzy
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "現在のコンテキストは、暗黙のバインディング `this` を通してアクセスできます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:346
#, no-wrap, fuzzy
msgid "Built-in Operators"
msgstr "作り付けのオペレータ"

#. type: Table
#: upstream/_guides/qute-reference.adoc:366
#, no-wrap, fuzzy
msgid ""
"|Operator |Description\t|Examples\n"
"\n"
"|Elvis \n"
"|Outputs the default value if the previous part cannot be resolved or "
"resolves to `null`.\n"
"|`{person.name ?: 'John'}`, `{person.name or 'John'}`\n"
"\n"
"|Ternary \n"
"|Shorthand for if-then-else statement. Unlike in <<if_section>> nested "
"operators are not supported.\n"
"|`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item."
"name` if `item.isActive` resolves to `true`.\n"
"\n"
"|Logical AND \n"
"|Outputs `true` if both parts are not `falsy` as described in the "
"<<if_section>>. The parameter is only evaluated if needed.\n"
"|`{person.isActive && person.hasStyle}`\n"
"\n"
"|Logical OR \n"
"|Outputs `true` if any of the parts is not `falsy` as described in the "
"<<if_section>>. The parameter is only evaluated if needed.\n"
"|`{person.isActive \\|\\| person.hasStyle}`\n"
msgstr "|演算子｜演算子｜説明｜例"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:369
#, fuzzy
msgid ""
"The condition in a ternary operator evaluates to `true` if the value is not "
"considered `falsy` as described in the <<if_section>>."
msgstr ""
"三項演算子の条件は、 link:#if_section[[if_section]]で説明したように、値が `falsy` とみなされない場合は "
"`true` と評価されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:371
#, fuzzy
msgid ""
"In fact, the operators are implemented as \"virtual methods\" that consume "
"one parameter and can be used with infix notation, i.e. `{person.name or "
"'John'}` is translated to `{person.name.or('John')}`."
msgstr ""
"`{person.name or 'John'}` `{person.name."
"or('John')}`実際には、演算子は1つのパラメータを消費する「仮想メソッド」として実装されており、infix記法で使用することができます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:372
#, no-wrap, fuzzy
msgid "Character Escapes"
msgstr "キャラクターエスケープ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:375
#, fuzzy
msgid ""
"For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are "
"escaped by default if a template variant is set."
msgstr ""
"HTML と XML テンプレートの場合、 `'`, `\"`, `&amp;lt;`, `&amp;gt;`, `&amp;amp;` "
"の文字は、テンプレートバリアントが設定されている場合はデフォルトでエスケープされます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:377
#, fuzzy
msgid ""
"In Quarkus, a variant is set automatically for templates located in the `src/"
"main/resources/templates`. By default, the `java.net."
"URLConnection#getFileNameMap()` is used to determine the content type of a "
"template file. The additional map of suffixes to content types can be set "
"via `quarkus.qute.content-types`."
msgstr ""
"Quarkusでは、 `src/main/resources/templates` "
"にあるテンプレートに対してバリアントが自動的に設定されます。デフォルトでは、テンプレートファイルのコンテンツタイプを決定するために `java.net."
"URLConnection#getFileNameMap()` が使用されます。コンテンツタイプへのサフィックスの追加マップは、 `quarkus."
"qute.content-types` を通じて設定できます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:379
#, fuzzy
msgid "If you need to render the unescaped value:"
msgstr "エスケープされていない値をレンダリングする必要がある場合。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:381
#, fuzzy
msgid ""
"Use the `raw` or `safe` properties implemented as extension methods of the "
"`java.lang.Object`,"
msgstr "`java.lang.Object` の拡張メソッドとして実装されている `raw` または `safe` プロパティを使用します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:382
#, fuzzy
msgid "Wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "`String` の値を `io.quarkus.qute.RawString`."

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:389
#, no-wrap
msgid "<html>\n"
"<h1>{title}</h1> <1>\n"
"{paragraph.raw} <2>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:391
#, fuzzy
msgid ""
"`title` that resolves to `Expressions & Escapes` will be rendered as "
"`Expressions &amp;amp; Escapes`"
msgstr ""
"`title` が `Expressions &amp;amp; Escapes` に解決した場合は、以下のように表示されます。 "
"`Expressions &amp;amp;amp; Escapes`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:392
#, fuzzy
msgid ""
"`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My "
"text!</p>`"
msgstr ""
"`paragraph` が `&amp;lt;p&amp;gt;My text!&amp;lt;/p&amp;gt;` "
"に解決した場合は、以下のように表示されます。 `&amp;lt;p&amp;gt;My text!&amp;lt;/p&amp;gt;`"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:393
#, no-wrap, fuzzy
msgid "Virtual Methods"
msgstr "バーチャルメソッド"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:399
#, fuzzy
msgid ""
"A virtual method is a *part of an expression* that looks like a regular Java "
"method invocation.  It's called \"virtual\" because it does not have to "
"match the actual method of a Java class.  In fact, like normal properties a "
"virtual method is also handled by a value resolver.  The only difference is "
"that for virtual methods a value resolver consumes parameters that are also "
"expressions."
msgstr ""
"仮想メソッドとは、通常のJavaメソッド呼び出しのように見える "
"*式の一部*です。Javaクラスの実際のメソッドと一致する必要がないため、「仮想」と呼ばれています。実際には、通常のプロパティと同様に、仮想メソッドも値リゾルバによって処理されます。唯一の違いは、仮想メソッドの場合、値リゾルバが式でもあるパラメータを消費することです。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:400
#, no-wrap, fuzzy
msgid "Virtual Method Example"
msgstr "仮想メソッドの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:406
#, no-wrap
msgid "<html>\n"
"<h1>{item.buildName(item.name,5)}</h1> <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:408
#, no-wrap, fuzzy
msgid ""
"`buildName(item.name,5)` represents a virtual method with name `buildName` "
"and two parameters: `item.name` and `5` . The virtual method could be "
"evaluated by a value resolver generated for the following Java class:   \n"
msgstr ""
"`buildName(item.name,5)` は、名前 `buildName` と 2 つのパラメータ `item.name` と `5` "
"を持つ仮想メソッドを表します。この仮想メソッドは、以下の Java クラス用に生成された値リゾルバによって評価されます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:416
#, no-wrap
msgid ""
"class Item {\n"
"   String buildName(String name, int age) {\n"
"      return name + \":\" + age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:419
#, fuzzy
msgid ""
"Virtual methods are usually evaluated by value resolvers generated for "
"<<template_extension_methods,@TemplateExtension methods>>, "
"<<template_data,@TemplateData>> or classes used in "
"<<typesafe_expressions,parameter declarations>>. However, a custom value "
"resolver that is not backed by any Java class/method can be registered as "
"well."
msgstr ""
"仮想メソッドは通常、 link:#template_extension_methods[@TemplateExtensionメソッド]、 link:"
"#template_data[@TemplateData]、または link:"
"#typesafe_expressions[パラメータ宣言]で使用されるクラスのために生成された値リゾルバによって評価されます。しかし、Javaのクラス/"
"メソッドではバックアップされていないカスタムの値リゾルバも登録できます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:421
#, fuzzy
msgid ""
"A virtual method with single parameter can be called using the infix "
"notation:"
msgstr "単一のパラメータを持つ仮想メソッドは infix 記法を使用して呼び出すことができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:422
#, no-wrap, fuzzy
msgid "Infix Notation Example"
msgstr "インフィックス表記例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:428
#, no-wrap
msgid "<html>\n"
"<p>{item.price or 5}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:430
#, fuzzy
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr "`item.price or 5` は `item.price.or(5)` に翻訳されています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:432
#, fuzzy
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "仮想メソッドのパラメータは、仮想メソッドの呼び出しを「入れ子にする」ことができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:433
#, no-wrap, fuzzy
msgid "Nested Virtual Method Example"
msgstr "入れ子になった仮想メソッドの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:439
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.subtractPrice(item.calculateDiscount(10))}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:441
#, fuzzy
msgid ""
"`item.calculateDiscount(10)` is evaluated first and then passed as an "
"argument to `item.subtractPrice()`."
msgstr ""
"`item.calculateDiscount(10)` は最初に評価され、その後 `item.subtractPrice()` "
"への引数として渡されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:446
#, fuzzy
msgid "A section:"
msgstr "セクション。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:448
#, fuzzy
msgid "has a start tag"
msgstr "はスタートタグを持っています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:449
#, fuzzy
msgid ""
"starts with `#`, followed by the name of the section such as `{#if}` and "
"`{#each}`,"
msgstr "は、 `#` で始まり、 `{#if}` や `{#each}` などのセクションの名前が続きます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:450
#, fuzzy
msgid "may be empty"
msgstr "空くかもしれない"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:451
#, fuzzy
msgid "tag ends with `/`, ie. `{#emptySection /}`"
msgstr "タグは `/` で終わります。 `{#emptySection /}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:452
#, fuzzy
msgid "may contain other expression, sections, etc."
msgstr "は、他の表現、セクションなどを含む場合があります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:453
#, fuzzy
msgid ""
"the end tag starts with `/` and contains the name of the section (optional): "
"`{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`,"
msgstr ""
"エンドタグは `/` で始まり、セクションの名前（オプション）を含みます： `{#if foo}Foo!{/if}` または `{#if "
"foo}Foo!{/}`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:460
#, fuzzy
msgid ""
"The start tag can also define parameters.  The parameters have optional "
"names.  A section may contain several content *blocks*.  The \"main\" block "
"is always present.  Additional/nested blocks also start with `#` and can "
"have parameters too - `{#else if item.isActive}`.  A section helper that "
"defines the logic of a section can \"execute\" any of the blocks and "
"evaluate the parameters."
msgstr ""
"startタグはパラメータを定義することもできます。パラメータにはオプションの名前を付けます。1つのセクションには、いくつかのコンテンツ "
"*ブロックを*含めることができます。main\" ブロックは常に存在します。追加/入れ子になったブロックも `#` "
"で始まり、パラメータを持つことができます - `{#else if item.isActive}`."
"セクションのロジックを定義するセクションヘルパーは、任意のブロックを「実行」し、パラメータを評価することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:470
#, no-wrap
msgid ""
"{#if item.name is 'sword'}\n"
"  It's a sword!\n"
"{#else if item.name is 'shield'}\n"
"  It's a shield!\n"
"{#else}\n"
"  Item is neither a sword nor a shield.\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:472
#, no-wrap, fuzzy
msgid "Loop Section"
msgstr "ループ部"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:477
#, fuzzy
msgid ""
"The loop section makes it possible to iterate over an instance of "
"`Iterable`, `Map` 's entry set, `Stream` and an Integer.  It has two flavors."
"  The first one is using the `each` name alias."
msgstr ""
"ループセクションでは、 `Iterable`, `Map` のエントリセット、 `Stream` "
"と整数のインスタンスを反復処理することができます。ループには2つの機能があります。最初のものは `each` という名前のエイリアスを使用しています。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:483
#, no-wrap
msgid "{#each items}\n"
"  {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:485
#, fuzzy
msgid ""
"`it` is an implicit alias. `name` is resolved against the current iteration "
"element."
msgstr "`it` は暗黙のエイリアスです。 `name` は現在の反復要素に対して解決されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:487
#, fuzzy
msgid ""
"The other form is using the `for` name alias and can specify the alias used "
"to reference the iteration element:"
msgstr "もう一つの形式は、 `for` 名前のエイリアスを使用しており、反復要素を参照するために使用されるエイリアスを指定することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:493
#, no-wrap
msgid "{#for item in items}\n"
"  {item.name}\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:496
#, fuzzy
msgid "It's also possible to access the iteration metadata inside the loop:"
msgstr "ループ内の反復メタデータにアクセスすることも可能です。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:502
#, no-wrap
msgid "{#each items}\n"
"  {count}. {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:504
#, fuzzy
msgid ""
"`count` represents one-based index. Metadata also include zero-based "
"`index`, `hasNext`, `odd`, `even`."
msgstr ""
"`count` はワンベースのインデックスを表しています。メタデータには、ゼロベースの `index`, `hasNext`, `odd`, "
"`even`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:506
#, fuzzy
msgid ""
"The `for` statement also works with integers, starting from 1. In the "
"example below, considering that `total = 3`:"
msgstr "`for` 文は、1 から始まる整数でも動作します。 以下の例では、 `total = 3`."

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:512
#, no-wrap
msgid "{#for i in total}\n"
"  {i}:\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:515
#, fuzzy
msgid "The output will be:"
msgstr "出力されます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:519
#, no-wrap
msgid "1:2:3:\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:522
#, no-wrap, fuzzy
msgid "If Section"
msgstr "セクション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:527
#, fuzzy
msgid ""
"The `if` section represents a basic control flow section.  The simplest "
"possible version accepts a single parameter and renders the content if the "
"condition is evaluated to `true`.  A condition without an operator evaluates "
"to `true` if the value is not considered `falsy`, i.e. if the value is not "
"`null`, `false`, an empty collection, an empty map, an empty array, an empty "
"string/char sequence or a number equal to zero."
msgstr ""
"`if` セクションは、基本的な制御フローセクションを表しています。最も単純なバージョンでは、単一のパラメータを受け取り、条件が `true` "
"と評価された場合にコンテンツをレンダリングします。 `falsy`つまり、値が `null` 、 `false` "
"、空のコレクション、空のマップ、空の配列、空の文字列/文字列シーケンス、またはゼロに等しい数ではない場合、 `true` と評価されます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:533
#, no-wrap
msgid "{#if item.active}\n"
"  This item is active.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:536
#, fuzzy
msgid "You can also use the following operators in a condition:"
msgstr "条件で以下の演算子を使うこともできます。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:576
#, no-wrap, fuzzy
msgid ""
"|Operator |Aliases |Precedence (higher wins)\n"
"\n"
"|logical complement \n"
"|`!` \n"
"| 4\n"
"\n"
"|greater than \n"
"|`gt`, `>`\n"
"| 3\n"
"\n"
"|greater than or equal to\n"
"|`ge`, `>=`\n"
"| 3\n"
"\n"
"|less than \n"
"|`lt`, `<`\n"
"| 3\n"
"\n"
"|less than or equal to\n"
"|`le`, `\\<=`\n"
"| 3\n"
"\n"
"|equals \n"
"|`eq`, `==`, `is` \n"
"| 2\n"
"\n"
"|not equals \n"
"|`ne`, `!=`\n"
"| 2\n"
"\n"
"|logical AND (short-circuiting)\n"
"|`&&`, `and`\n"
"| 1\n"
"\n"
"|logical OR (short-circuiting)\n"
"|`\\|\\|`, `or`\n"
"| 1\n"
"\n"
msgstr "|オペレーター｜アライアス｜先行(上位入賞)"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:578
#, no-wrap, fuzzy
msgid "A simple operator example"
msgstr "簡単な演算子の例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:584
#, no-wrap
msgid "{#if item.age > 10}\n"
"  This item is very old.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:587
#, fuzzy
msgid "Multiple conditions are also supported."
msgstr "複数の条件にも対応しています。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:588
#, no-wrap, fuzzy
msgid "Multiple conditions example"
msgstr "複数条件の例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:594
#, no-wrap
msgid ""
"{#if item.age > 10 && item.price > 500}\n"
"  This item is very old and expensive.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:597
#, fuzzy
msgid "Precedence rules can be overridden by parentheses."
msgstr "優先順位の規則は、カッコで上書きすることができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:598
#, no-wrap, fuzzy
msgid "Parentheses example"
msgstr "括弧の例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:604
#, no-wrap
msgid ""
"{#if (item.age > 10 || item.price > 500) && user.loggedIn}\n"
"  User must be logged in and item age must be > 10 or price must be > 500.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:608
#, fuzzy
msgid "You can also add any number of `else` blocks:"
msgstr "また、 `else` ブロックを何個でも追加することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:620
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{#else if item.age > 5}\n"
"  This item is quite old.\n"
"{#else if item.age > 2}\n"
"  This item is old.\n"
"{#else}\n"
"  This item is not old at all!\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:623
#, no-wrap, fuzzy
msgid "With Section"
msgstr "セクションと"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:627
#, fuzzy
msgid ""
"This section can be used to set the current context object.  This could be "
"useful to simplify the template structure:"
msgstr ""
"このセクションは、現在のコンテキストオブジェクトを設定するために使用することができます。これはテンプレート構造を単純化するのに便利かもしれません。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:634
#, no-wrap
msgid ""
"{#with item.parent}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p> <2>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:636
#, fuzzy
msgid "The `name` will be resolved against the `item.parent`."
msgstr "`name` に対し、 `item.parent`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:637
#, fuzzy
msgid "The `description` will be also resolved against the `item.parent`."
msgstr "`description` も `item.parent`.に対して解決されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:639
#, fuzzy
msgid ""
"This section might also come in handy when we'd like to avoid multiple "
"expensive invocations:"
msgstr "このセクションは、複数の高価な呼び出しを避けたいときにも便利かもしれません。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:649
#, no-wrap
msgid ""
"{#with item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)}\n"
"  {#if this is \"fun\"} <1>\n"
"    <h1>Yay!</h1>\n"
"  {#else}\n"
"    <h1>{this} is not fun at all!</h1>\n"
"  {/if}\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:651
#, fuzzy
msgid ""
"`this` is the result of `item."
"callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only "
"invoked once even though the result may be used in multiple expressions."
msgstr ""
"`this` は `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` "
"の結果です。結果が複数の式で使用されても、このメソッドは一度しか呼び出されません。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:652
#, no-wrap, fuzzy
msgid "Let/Set Section"
msgstr "レット/セットセクション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:655
#, fuzzy
msgid "This section allows you to define named local variables:"
msgstr "このセクションでは、名前付きローカル変数を定義することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:660
#, no-wrap
msgid "{#let myParent=order.item.parent}\n"
"  <h1>{myParent.name}</h1>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:663
#, fuzzy
msgid "The section tag is also registered under the `set` alias:"
msgstr "セクションタグも `set` の別名で登録されています。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:670
#, no-wrap
msgid ""
"{#set myParent=item.parent price=item.price}\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {price}\n"
"{/set}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:674
#, no-wrap, fuzzy
msgid "Include Section"
msgstr "セクションを含む"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:677
#, fuzzy
msgid ""
"This section can be used to include another template and possibly override "
"some parts of the template (template inheritance)."
msgstr "このセクションでは、別のテンプレートをインクルードしたり、テンプレートの一部をオーバーライドすることができます（テンプレートの継承）。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:678
#, no-wrap, fuzzy
msgid "Simple Example"
msgstr "簡単な例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:690
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Simple Include</title>\n"
"</head>\n"
"<body>\n"
"  {#include foo limit=10 /} <1><2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:692
#, fuzzy
msgid ""
"Include a template with id `foo`. The included template can reference data "
"from the current context."
msgstr ""
"id `foo` でテンプレートをインクルードします。インクルードされたテンプレートは、現在のコンテキストからデータを参照することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:693
#, fuzzy
msgid ""
"It's also possible to define optional parameters that can be used in the "
"included template."
msgstr "また、付属のテンプレートで使用できるオプションのパラメータを定義することも可能です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:695
#, fuzzy
msgid "Template inheritance makes it possible to reuse template layouts."
msgstr "テンプレート継承により、テンプレートレイアウトの再利用が可能になります。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:696
#, no-wrap, fuzzy
msgid "Template \"base\""
msgstr "テンプレート「ベース"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:708
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{#insert title}Default Title{/}</title> <1>\n"
"</head>\n"
"<body>\n"
"  {#insert body}No body!{/} <2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:710
#, fuzzy
msgid ""
"`insert` sections are used to specify parts that could be overridden by a "
"template that includes the given template."
msgstr "`insert` セクションは、与えられたテンプレートを含むテンプレートでオーバーライドできる部分を指定するために使われます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:711
#, fuzzy
msgid ""
"An `insert` section may define the default content that is rendered if not "
"overridden."
msgstr "`insert` セクションは、オーバーライドされない場合にレンダリングされるデフォルトのコンテンツを定義することができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:712
#, no-wrap, fuzzy
msgid "Template \"detail\""
msgstr "テンプレート「詳細"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:723
#, no-wrap
msgid ""
"{#include base} <1>\n"
"  {#title}My Title{/title} <2>\n"
"  {#body}\n"
"    <div>\n"
"      My body.\n"
"    </div>\n"
"  {/body}\n"
"{/include}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:725
#, fuzzy
msgid "`include` section is used to specify the extended template."
msgstr "`include` セクションは、拡張テンプレートを指定するために使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:726
#, fuzzy
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "入れ子になったブロックは、オーバーライドする部分を指定するために使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:728
#, fuzzy
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "セクションブロックはオプションのエンドタグを定義することもできます - `{/title}`."

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:730
#, no-wrap, fuzzy
msgid "User-defined Tags"
msgstr "ユーザー定義タグ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:734
#, fuzzy
msgid ""
"User-defined tags can be used to include a template and optionally pass some "
"parameters.  Let's suppose we have a template called `itemDetail.html`:"
msgstr ""
"ユーザー定義タグは、テンプレートをインクルードし、オプションでいくつかのパラメータを渡すために使用することができます。 `itemDetail."
"html` というテンプレートがあるとします。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:741
#, no-wrap
msgid "{#if showImage} <1>\n"
"  {it.image} <2>\n"
"  {nested-content} <3>\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:743
#, fuzzy
msgid "`showImage` is a named parameter."
msgstr "`showImage` は名前付きパラメータです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:744
#, fuzzy
msgid ""
"`it` is a special key that is replaced with the first unnamed param of the "
"tag."
msgstr "`it` は、タグの最初の名前のないパラメータに置き換えられる特別なキーです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:745
#, fuzzy
msgid ""
"(optional) `nested-content` is a special key that will be replaced by the "
"content of the tag."
msgstr "(オプション) `nested-content` は、タグの内容に置き換えられる特別なキーです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:747
#, fuzzy
msgid ""
"Now if we register this template under the name `itemDetail.html` and if we "
"add a `UserTagSectionHelper` to the engine:"
msgstr ""
"さて、このテンプレートを `itemDetail.html` という名前で登録し、エンジンに `UserTagSectionHelper` "
"を追加した場合。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:753
#, no-wrap
msgid ""
"Engine engine = Engine.builder()\n"
"                   .addSectionHelper(new UserTagSectionHelper."
"Factory(\"itemDetail\",\"itemDetail.html\"))\n"
"                   .build();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:756
#, fuzzy
msgid ""
"In Quarkus, all files from the `src/main/resources/templates/tags` are "
"registered and monitored automatically!"
msgstr ""
"Quarkusでは、 `src/main/resources/templates/tags` からのファイルはすべて登録され、自動的に監視されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:758
#, fuzzy
msgid "We can include the tag like this:"
msgstr "こんな感じでタグを入れていきます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:770
#, no-wrap
msgid ""
"<ul>\n"
"{#for item in items}\n"
"  <li>\n"
"  {#itemDetail item showImage=true} <1>\n"
"    = <b>{item.name}</b> <2>\n"
"  {/itemDetail}\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:772
#, fuzzy
msgid ""
"`item` is resolved to an iteration element and can be referenced using the "
"`it` key in the tag template."
msgstr "`item` は反復要素に解決され、タグテンプレートの `it` キーを使用して参照することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:773
#, fuzzy
msgid ""
"Tag content injected using the `nested-content` key in the tag template."
msgstr "タグテンプレートの `nested-content` キーを使用して注入されたタグコンテンツ。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:774
#, no-wrap, fuzzy
msgid "Engine Configuration"
msgstr "エンジン構成"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:776
#, no-wrap, fuzzy
msgid "Template Locator"
msgstr "テンプレートロケーター"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:780
#, fuzzy
msgid ""
"Manual registration is sometimes handy but it's also possible to register a "
"template locator using `EngineBuilder.addLocator(Function<String, "
"Optional<Reader>>)`.  This locator is used whenever the `Engine."
"getTemplate()` method is called and the engine has no template for a given "
"id stored in the cache."
msgstr ""
"手動登録が便利な場合もありますが、 `EngineBuilder.addLocator(Function&amp;lt;String, "
"Optional&amp;lt;Reader&amp;gt;&amp;gt;)` "
"を使用してテンプレートロケータを登録することも可能です。このロケータは、 `Engine.getTemplate()` "
"メソッドが呼び出され、エンジンがキャッシュに保存されている指定された id のテンプレートを持っていない場合に使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:782
#, fuzzy
msgid ""
"In Quarkus, all templates from the `src/main/resources/templates` are "
"located automatically."
msgstr "Quarkusでは、 `src/main/resources/templates` からのテンプレートはすべて自動的に配置されています。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:784
#, no-wrap, fuzzy
msgid "Quarkus Integration"
msgstr "Quarkusの統合"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:787
#, fuzzy
msgid ""
"If you want to use Qute in your Quarkus application add the following "
"dependency to your project:"
msgstr "QuarkusアプリケーションでQuteを使用する場合は、以下の依存関係をプロジェクトに追加してください。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:794
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:798
#, fuzzy
msgid ""
"In Quarkus, a preconfigured engine instance is provided and available for "
"injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus."
"qute.Engine` and qualifier `@Default` is registered automatically.  "
"Moreover, all templates located in the `src/main/resources/templates` "
"directory are validated and can be easily injected."
msgstr ""
"`@ApplicationScoped` `io.quarkus.qute.Engine` `@Default` "
"Quarkusでは、事前に設定されたエンジンインスタンスが提供され、インジェクションに利用できます。さらに、 `src/main/resources/"
"templates` ディレクトリにあるすべてのテンプレートが検証され、簡単にインジェクションすることができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:804
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.api.ResourcePath;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:806
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:809
#, no-wrap
msgid "    @Inject \n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:812
#, no-wrap
msgid "    @ResourcePath(\"detail/items2_v1.html\") <2>\n"
"    Template items2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:816
#, no-wrap
msgid "    @Inject\n"
"    Engine engine; <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:818
#, fuzzy
msgid ""
"If there is no `ResourcePath` qualifier provided, the field name is used to "
"locate the template. In this particular case, the container will attempt to "
"locate a template with path `src/main/resources/templates/items.html`."
msgstr ""
"`ResourcePath` "
"の修飾子が与えられていない場合は、フィールド名がテンプレートの位置を特定するために使われます。この特定のケースでは、コンテナはパス `src/main/"
"resources/templates/items.html` でテンプレートを見つけようとします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:819
#, fuzzy
msgid ""
"The `ResourcePath` qualifier instructs the container to inject a template "
"from a path relative from `src/main/resources/templates`. In this case, the "
"full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr ""
"`ResourcePath` 修飾子は、 `src/main/resources/templates` "
"からの相対パスからテンプレートを注入するようにコンテナに指示します。この場合のフルパスは `src/main/resources/templates/"
"detail/items2_v1.html` です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:820
#, fuzzy
msgid "Inject the configured `Engine` instance."
msgstr "構成された `Engine` インスタンスを注入します。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:821
#, no-wrap, fuzzy
msgid "Template Variants"
msgstr "テンプレートのバリエーション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:825
#, fuzzy
msgid ""
"Sometimes it's useful to render a specific variant of the template based on "
"the content negotiation.  This can be done by setting a special attribute "
"via `TemplateInstance.setAttribute()`:"
msgstr ""
"コンテンツネゴシエーションに基づいてテンプレートの特定のバリアントをレンダリングすることが有用な場合があります。これは "
"`TemplateInstance.setAttribute()` を通じて特別な属性を設定することで行うことができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:829
#, no-wrap
msgid "class MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:832
#, no-wrap
msgid "    @Inject\n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:835
#, no-wrap
msgid "    @Inject\n"
"    ItemManager manager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:840
#, no-wrap
msgid ""
"    String renderItems() {\n"
"       return items.data(\"items\",manager.findItems())."
"setAttribute(TemplateInstance.SELECTED_VARIANT, new Variant(Locale."
"getDefault(),\"text/html\",\"UTF-8\")).render();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:843
#, fuzzy
msgid ""
"When using `quarkus-resteasy-qute` the content negotiation is performed "
"automatically. See <<resteasy_integration>>."
msgstr ""
"`quarkus-resteasy-qute` を使用している場合、コンテンツネゴシエーションは自動的に行われます。 link:"
"#resteasy_integration[resteasy_integration]]を参照してください。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:844
#, no-wrap, fuzzy
msgid "Injecting Beans Directly In Templates"
msgstr "テンプレートに直接Beansを注入する"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:847
#, fuzzy
msgid ""
"A CDI bean annotated with `@Named` can be referenced in any template through "
"the `inject` namespace:"
msgstr ""
"`@Named` でアノテーションされた CDI ビーンは、 `inject` 名前空間を通して、どのテンプレートでも参照することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:851
#, no-wrap
msgid "{inject:foo.price} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:853
#, fuzzy
msgid ""
"First, a bean with name `foo` is found and then used as the base object."
msgstr "まず、 `foo` という名前のビーンを見つけ、それをベースオブジェクトとして使用します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:856
#, fuzzy
msgid ""
"All expressions using the `inject` namespace are validated during build.  "
"For the expression `inject:foo.price` the implementation class of the "
"injected bean must either have the `price` property (e.g. a `getPrice()` "
"method) or a matching <<template_extension_methods,template extension "
"method>> must exist."
msgstr ""
"`inject` 名前空間を使用するすべての式は、ビルド時に検証されます。式 `inject:foo.price` "
"については、注入されたビーンの実装クラスが `price` プロパティ ( `getPrice()` メソッドなど) を持っているか、一致する link:"
"#template_extension_methods[テンプレート拡張メソッド]が存在していなければなりません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:858
#, fuzzy
msgid ""
"A `ValueResolver` is also generated for all beans annotated with `@Named` so "
"that it's possible to access its properties without reflection."
msgstr ""
"`@Named` でアノテーションされたすべての豆に対して `ValueResolver` "
"も生成され、そのプロパティに反射なしでアクセスできるようになります。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:860
#, no-wrap, fuzzy
msgid "Type-safe Expressions"
msgstr "型安全な式"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:865
#, fuzzy
msgid ""
"Template expressions can be optionally type-safe.  Which means that an "
"expression is validated against the existing Java types and template "
"extension methods.  If an invalid/incorrect expression is found then the "
"build fails."
msgstr ""
"テンプレート式は、オプションでタイプセーフにすることができます。これは、式が既存のJavaの型とテンプレート拡張メソッドに対して検証されることを意味します。無効な/"
"不正確な式が見つかった場合、ビルドは失敗します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:867
#, fuzzy
msgid ""
"For example, if there is an expression `item.name` where `item` maps to `org."
"acme.Item` then `Item` must have a property `name` or a matching template "
"extension method must exist."
msgstr ""
"例えば、 `item.name` という式があり、 `item` が `org.acme.Item` にマップされている場合、 `Item` には "
"`name` というプロパティがあるか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:870
#, fuzzy
msgid ""
"An optional _parameter declaration_ is used to bind a Java type to "
"expressions whose first part matches the parameter name.  Parameter "
"declarations are specified directly in a template."
msgstr ""
"オプションの _パラメータ宣言_は、最初の部分がパラメータ名と一致する式に Java "
"型をバインドするために使用されます。パラメータ宣言はテンプレートで直接指定します。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:871
#, no-wrap, fuzzy
msgid "Parameter Declaration Example"
msgstr "パラメータ宣言の例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:886
#, no-wrap
msgid ""
"{@org.acme.Foo foo} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{title}</h1> <2>\n"
"  Hello {foo.message.toLowerCase}! <3> <4>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:888
#, fuzzy
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "パラメータ宣言 - `foo` を `org.acme.Foo` にマップします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:889
#, fuzzy
msgid "Not validated - not matching a param declaration."
msgstr "検証されていません - param 宣言にマッチしません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:890
#, fuzzy
msgid ""
"This expression is validated. `org.acme.Foo` must have a property `message` "
"or a matching template extension method must exist."
msgstr "`org.acme.Foo` はプロパティ `message` を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:891
#, fuzzy
msgid ""
"Likewise, the Java type of the object resolved from `foo.message` must have "
"a property `toLowerCase` or a matching template extension method must exist."
msgstr ""
"同様に、 `foo.message` から解決されたオブジェクトの Java 型は、プロパティ `toLowerCase` "
"を持つか、一致するテンプレート拡張メソッドが存在しなければなりません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:893
#, fuzzy
msgid ""
"A value resolver is automatically generated for all types used in parameter "
"declarations so that it's possible to access its properties without "
"reflection."
msgstr "パラメータ宣言で使用されるすべての型に対して値リゾルバが自動的に生成され、そのプロパティに反射なしでアクセスできるようになります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:895
#, fuzzy
msgid ""
"Method parameters of <<typesafe_templates,type-safe templates>> are "
"automatically turned into parameter declarations."
msgstr "link:#typesafe_templates[タイプセーフテンプレート]のメソッドパラメータは、自動的にパラメータ宣言に変換されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:897
#, fuzzy
msgid ""
"Note that sections can override names that would otherwise match a parameter "
"declaration:"
msgstr "セクションは、パラメータ宣言にマッチする名前をオーバーライドできることに注意してください。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:914
#, no-wrap
msgid ""
"{@org.acme.Foo foo}\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{foo.message}</h1> <1>\n"
"  {#for foo in baz.foos}\n"
"    <p>Hello {foo.message}!</p> <2>\n"
"  {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:916
#, fuzzy
msgid "Validated against `org.acme.Foo`."
msgstr "`org.acme.Foo` に対して検証されています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:917
#, fuzzy
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "検証されていません - `foo` はループセクションでオーバーライドされています。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:919
#, no-wrap, fuzzy
msgid "Type-safe Templates"
msgstr "タイプセーフテンプレート"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:922
#, fuzzy
msgid ""
"You can also declare your templates in your Java code.  If using "
"<<resteasy_integration,templates in JAX-RS resources>>, you can rely on the "
"following convention:"
msgstr ""
"また、Java コードでテンプレートを宣言することもできます。 link:#resteasy_integration[JAX-"
"RSリソースでテンプレートを]使用する場合は、以下の規約に従うことができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:926
#, fuzzy
msgid ""
"Organise your template files in the `/src/main/resources/templates` "
"directory, by grouping them into one directory per resource class. So, if "
"your `ItemResource` class references two templates `hello` and `goodbye`, "
"place them at `/src/main/resources/templates/ItemResource/hello.txt` and `/"
"src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates "
"per resource class makes it easier to navigate to them."
msgstr ""
"テンプレートファイルを `/src/main/resources/templates` ディレクトリに整理し、リソースクラスごとに 1 "
"つのディレクトリにグループ化します。つまり、 `ItemResource` クラスが `hello` と `goodbye` の 2 "
"つのテンプレートを参照している場合は、 `/src/main/resources/templates/ItemResource/hello.txt` と "
"`/src/main/resources/templates/ItemResource/goodbye.txt` "
"に配置します。リソースクラスごとにテンプレートをグループ化することで、テンプレートへのナビゲートが容易になります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:927
#, fuzzy
msgid ""
"In each of your resource class, declare a `@CheckedTemplate static class "
"Template {}` class within your resource class."
msgstr ""
"各リソースクラスで、リソースクラス内で `@CheckedTemplate static class Template {}` クラスを宣言します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:928
#, fuzzy
msgid ""
"Declare one `public static native TemplateInstance method();` per template "
"file for your resource."
msgstr ""
"リ ソ ース のテ ン プ レー ト フ ァ イ ルごとに `public static native TemplateInstance "
"method();` を 1 つずつ宣言 し ます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:929
#, fuzzy
msgid "Use those static methods to build your template instances."
msgstr "テンプレートインスタンスを構築するには、これらの静的メソッドを使用します。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:930
#, no-wrap, fuzzy
msgid "ItemResource.java"
msgstr "アイテムリソース.java"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:934
#: upstream/_guides/qute-reference.adoc:972
#: upstream/_guides/qute-reference.adoc:991
#: upstream/_guides/qute-reference.adoc:1276
#, no-wrap
msgid "package org.acme.quarkus.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:941
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:945
#: upstream/_guides/qute-reference.adoc:976
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.api.CheckedTemplate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:948
#, no-wrap
msgid "@Path(\"item\")\n"
"public class ItemResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:953
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    public static class Templates {\n"
"        public static native TemplateInstance item(Item item); <1> <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:961
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n"
"        return Templates.item(service.findItem(id)); <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:963
#, fuzzy
msgid ""
"Declare a method that gives us a `TemplateInstance` for `templates/"
"ItemResource/item.html` and declare its `Item item` parameter so we can "
"validate the template."
msgstr ""
"`templates/ItemResource/item.html` に `TemplateInstance` を与えるメソッドを宣言し、その "
"`Item item` パラメータを宣言することで、テンプレートを検証することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:964
#, fuzzy
msgid ""
"The `item` parameter is automatically turned into a "
"<<typesafe_expressions,parameter declaration>> and so all expressions that "
"reference this name will be validated."
msgstr ""
"`item` パラメータは自動的に link:"
"#typesafe_expressions[パラメータ宣言]に変換されるので、この名前を参照するすべての式が検証されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:965
#, fuzzy
msgid "Make the `Item` object accessible in the template."
msgstr "テンプレート内で `Item` オブジェクトにアクセスできるようにします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:967
#, fuzzy
msgid ""
"You can also declare a top-level Java class annotated with "
"`@CheckedTemplate`:"
msgstr "また、 `@CheckedTemplate` でアノテーションされたトップレベルの Java クラスを宣言することもできます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:968
#, no-wrap, fuzzy
msgid "Top-level checked templates"
msgstr "トップレベルのチェック済みテンプレート"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:981
#, no-wrap
msgid ""
"@CheckedTemplate\n"
"public class Templates {\n"
"    public static native TemplateInstance hello(String name); <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:983
#, fuzzy
msgid ""
"This declares a template with path `templates/hello.txt`. The `name` "
"parameter is automatically turned into a <<typesafe_expressions,parameter "
"declaration>> and so all expressions that reference this name will be "
"validated."
msgstr ""
"これは、パス `templates/hello.txt` を持つテンプレートを宣言します。 `name` パラメータは自動的に link:"
"#typesafe_expressions[パラメータ宣言]に変換されるので、この名前を参照するすべての式が検証されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:986
#, fuzzy
msgid ""
"Then declare one `public static native TemplateInstance method();` per "
"template file.  Use those static methods to build your template instances:"
msgstr ""
"そして、テンプレートファイルごとに `public static native TemplateInstance method();` "
"を宣言します。これらの静的メソッドを使用してテンプレートインスタンスを構築します。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:987
#: upstream/_guides/qute-reference.adoc:1272
#, no-wrap, fuzzy
msgid "HelloResource.java"
msgstr "HelloResource.java"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:997
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import io.quarkus.qute.TemplateInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1000
#: upstream/_guides/qute-reference.adoc:1287
#, no-wrap
msgid "@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1007
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return Templates.hello(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1010
#, no-wrap, fuzzy
msgid "Template Extension Methods"
msgstr "テンプレートの拡張方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1014
#, fuzzy
msgid ""
"Extension methods can be used to extend the data classes with new "
"functionality (to extend the set of accessible properties and methods) or to "
"resolve expressions for a specific <<namespace_extension_methods,namespace>>."
"  For example, it is possible to add _computed properties_ and _virtual "
"methods_."
msgstr ""
"拡張メソッドは、データクラスを新しい機能で拡張するため（アクセス可能なプロパティとメソッドのセットを拡張するため）、または特定の link:"
"#namespace_extension_methods[名前空間の]ための式を解決するために使用することができます。例えば、 "
"_計算されたプロパティ_や _仮想メソッドを_追加することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1019
#, fuzzy
msgid ""
"A value resolver is automatically generated for a method annotated with "
"`@TemplateExtension`.  If a class is annotated with `@TemplateExtension` "
"then a value resolver is generated for every _non-private static method_ "
"declared on the class.  Method-level annotations override the behavior "
"defined on the class.  Methods that do not meet the following requirements "
"are ignored."
msgstr ""
"値リゾルバは、 `@TemplateExtension` でアノテーションされたメソッドに対して自動的に生成されます。クラスが "
"`@TemplateExtension` でアノテーションされている場合は、そのクラスで宣言されている "
"_非プライベート・スタティック・メソッド_ごとに値リゾルバが生成されます。メソッドレベルのアノテーションは、クラスで定義された動作をオーバーライドします。以下の要件を満たさないメソッドは無視されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1021
#, fuzzy
msgid "A template extension method:"
msgstr "テンプレートの拡張方法です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1023
#, fuzzy
msgid "must not be `private`"
msgstr "まじか `private`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1024
#, fuzzy
msgid "must be static,"
msgstr "は静的でなければなりません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1025
#, fuzzy
msgid "must not return `void`,"
msgstr "`void` を返してはいけません。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1026
#, fuzzy
msgid "must accept at least one parameter, unless the namespace is specified."
msgstr "は、名前空間が指定されていない限り、少なくとも1つのパラメータを受け付ける必要があります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1029
#, fuzzy
msgid ""
"The class of the first parameter is used to match the base object unless the "
"namespace is specified.  In such case, the namespace is used to match an "
"expression."
msgstr ""
"名前空間が指定されていない限り、最初のパラメータのクラスがベース・オブジェクトにマッチするように使用されます。その場合、名前空間は式にマッチするように使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1036
#, fuzzy
msgid ""
"The method name is used to match the property name by default.  However, it "
"is possible to specify the matching name with "
"`TemplateExtension#matchName()`.  A special constant - "
"`TemplateExtension#ANY` - may be used to specify that the extension method "
"matches any name.  It is also possible to match the name against a regular "
"expression specified in `TemplateExtension#matchRegex()`.  In both cases, a "
"string method parameter is used to pass the property name.  If both "
"`matchName()` and `matchRegex()` are set the regular expression is used for "
"matching."
msgstr ""
"メソッド名は、デフォルトではプロパティ名とのマッチングに使用されます。ただし、一致する名前を "
"`TemplateExtension#matchName()` で指定することは可能です。特別な定数 `TemplateExtension#ANY` "
"を使用して、拡張メソッドが任意の名前にマッチすることを指定することができます。また、 `TemplateExtension#matchRegex()` "
"で指定された正規表現に対して名前を一致させることも可能です。どちらの場合も、文字列メソッド・パラメータを使用してプロパティ名を渡します。 "
"`matchName()` と `matchRegex()` の両方が設定されている場合は、正規表現がマッチングに使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1039
#, fuzzy
msgid ""
"If a namespace is specified the method must declare at least one parameter "
"and the first parameter must be a string.  If no namespace is specified the "
"method must declare at least two parameters and the second parameter must be "
"a string."
msgstr ""
"名前空間を指定する場合、メソッドは少なくとも 1 "
"つのパラメータを宣言し、最初のパラメータは文字列である必要があります。名前空間を指定しない場合は、少なくとも 2 つのパラメータを宣言し、2 "
"番目のパラメータは文字列である必要があります。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1040
#, no-wrap, fuzzy
msgid "Extension Method Example"
msgstr "拡張メソッドの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1044
#: upstream/_guides/qute-reference.adoc:1204
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1046
#, no-wrap
msgid "class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1048
#: upstream/_guides/qute-reference.adoc:1209
#: upstream/_guides/qute-reference.adoc:1240
#, no-wrap
msgid "    public final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1053
#: upstream/_guides/qute-reference.adoc:1245
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1056
#, no-wrap
msgid "@TemplateExtension\n"
"class MyExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1061
#, no-wrap
msgid ""
"    static BigDecimal discountedPrice(Item item) { <1>\n"
"        return item.getPrice().multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1063
#, fuzzy
msgid ""
"This method matches an expression with base object of the type `Item.class` "
"and the `discountedPrice` property name."
msgstr ""
"このメソッドは、 `Item.class` 型のベース・オブジェクトと `discountedPrice` プロパティ名を持つ式にマッチします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1065
#, fuzzy
msgid ""
"This template extension method makes it possible to render the following "
"template:"
msgstr "このテンプレート拡張メソッドを使うと、以下のようなテンプレートをレンダリングすることができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1069
#, no-wrap
msgid "{item.discountedPrice} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1071
#, fuzzy
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr "`item` は `org.acme.Item` のインスタンスに解決されます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1072
#, no-wrap, fuzzy
msgid "Method Parameters"
msgstr "メソッドパラメータ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1077
#, fuzzy
msgid ""
"An extension method may accept multiple parameters.  If no namespace is "
"specified the first parameter is always used to pass the base object, i.e. "
"`org.acme.Item` in the first example.  Other parameters are resolved when "
"rendering the template and passed to the extension method."
msgstr ""
"拡張メソッドは複数のパラメータを受け取ることができます。 `org.acme.Item` "
"名前空間が指定されていない場合、最初のパラメータは常にベースオブジェクトを渡すために使用されます。他のパラメータはテンプレートをレンダリングする際に解決され、拡張メソッドに渡されます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1078
#, no-wrap, fuzzy
msgid "Multiple Parameters Example"
msgstr "複数のパラメータの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1083
#, no-wrap
msgid "@TemplateExtension\n"
"class BigDecimalExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1088
#, no-wrap
msgid ""
"    static BigDecimal scale(BigDecimal val, int scale, RoundingMode mode) { "
"<1>\n"
"        return val.setScale(scale, mode);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1090
#, fuzzy
msgid ""
"This method matches an expression with base object of the type `BigDecimal."
"class`, with the `scale` virtual method name and two virtual method "
"parameters."
msgstr ""
"このメソッドは、 `BigDecimal.class` 型の基底オブジェクトと、 `scale` の仮想メソッド名と 2 "
"つの仮想メソッドパラメータを持つ式にマッチします。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1094
#, no-wrap
msgid "{item.discountedPrice.scale(2,mode)} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1096
#, fuzzy
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr "`item.discountedPrice` は `BigDecimal` のインスタンスに解決されます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1098
#, no-wrap, fuzzy
msgid "Namespace Extension Methods"
msgstr "名前空間拡張メソッド"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1103
#, fuzzy
msgid ""
"If `TemplateExtension#namespace()` is specified then the extension method is "
"used to resolve expressions with the given <<expressions,namespace>>.  "
"Template extension methods that share the same namespace are grouped in one "
"resolver ordered by `TemplateExtension#priority()`.  The first matching "
"extension method is used to resolve an expression."
msgstr ""
"`TemplateExtension#namespace()` が指定された場合、その拡張メソッドは、指定された link:"
"#expressions[名前空間]を持つ式を解決するために使用されます。同じ名前空間を共有するテンプレート拡張メソッドは、 "
"`TemplateExtension#priority()` で順に 1 "
"つのリゾルバにグループ化されます。最初に一致する拡張メソッドが式の解決に使用されます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1104
#, no-wrap, fuzzy
msgid "Namespace Extension Method Example"
msgstr "名前空間拡張メソッドの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1109
#, no-wrap
msgid ""
"@TemplateExtension(namespace = \"str\")\n"
"public static class StringExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1113
#, no-wrap
msgid ""
"   static String format(String fmt, Object... args) {\n"
"      return String.format(fmt, args);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1118
#, no-wrap
msgid ""
"   static String reverse(String val) {\n"
"      return new StringBuilder(val).reverse().toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1121
#, fuzzy
msgid "These extension methods can be used as follows."
msgstr "これらの拡張方法は、以下のように使用することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1126
#, no-wrap
msgid ""
"{str:format('%s %s!','Hello', 'world')} <1>\n"
"{str:reverse('hello')} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1128
#, fuzzy
msgid "The output is `Hello world!`"
msgstr "を出力しています。 `Hello world!`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1129
#, fuzzy
msgid "The output is `olleh`"
msgstr "を出力しています。 `olleh`"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1130
#, no-wrap, fuzzy
msgid "Built-in Template Extension"
msgstr "組み込みのテンプレートエクステンション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1133
#, fuzzy
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkusは、組み込みの拡張メソッドのセットを提供しています。"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1134
#, no-wrap, fuzzy
msgid "Maps"
msgstr "地図"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1137
#, fuzzy
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr "`keys` または `keySet`: マップに含まれるキーのセットビューを返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1138
#, fuzzy
msgid "`{#for key in map.keySet}`"
msgstr "`{#for key in map.keySet}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1140
#, fuzzy
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr "`values`: マップに含まれる値のコレクションビューを返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1141
#, fuzzy
msgid "`{#for value in map.values}`"
msgstr "`{#for value in map.values}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1143
#, fuzzy
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr "`size`: マップ内のキーと値の対応付けの数を返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1144
#, fuzzy
msgid "`{map.size}`"
msgstr "`{map.size}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1146
#, fuzzy
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr "`isEmpty`: マップにキーと値のマッピングが含まれていない場合に true を返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1147
#, fuzzy
msgid "`{#if map.isEmpty}`"
msgstr "`{#if map.isEmpty}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1149
#, fuzzy
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr "`get(key)`: 指定したキーがマッピングされた値を返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1150
#, fuzzy
msgid "`{map.get('foo')}`"
msgstr "`{map.get('foo')}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1152
#, fuzzy
msgid ""
"A map value can be also accessed directly: `{map.myKey}`. Use the bracket "
"notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr ""
"マップ値は、直接アクセスすることもできます ： `{map.myKey}` 。法的な識別子ではないキーには大括弧表記を使用します: `{map['my "
"key']}` 。"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1153
#, no-wrap, fuzzy
msgid "Collections"
msgstr "コレクション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1156
#, fuzzy
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr "`get(index)`: リストの指定した位置の要素を返す"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1157
#, fuzzy
msgid "`{list.get(0)}`"
msgstr "`{list.get(0)}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1159
#, fuzzy
msgid "A list element can be accessed directly: `{list.10}` or `{list[10]}`."
msgstr "list 要素に直接アクセスすることができます： `{list.10}` または `{list[10]}`."

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1160
#, no-wrap, fuzzy
msgid "Numbers"
msgstr "数字"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1163
#, fuzzy
msgid "`mod`: Modulo operation"
msgstr "`mod`: モデュロ演算"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1164
#, fuzzy
msgid "`{#if counter.mod(5) == 0}`"
msgstr "`{#if counter.mod(5) == 0}`"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1165
#, no-wrap, fuzzy
msgid "Config "
msgstr "設定"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1168
#, fuzzy
msgid ""
"`config:<name>` or `config:[<name>]`: Returns the config value for the given "
"property name"
msgstr ""
"`config:&amp;lt;name&amp;gt;` 又は `config:[&amp;lt;name&amp;gt;]`: "
"指定したプロパティ名の設定値を返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1169
#, fuzzy
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr "`{config:foo}` または `{config:['property.with.dot.in.name']}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1171
#, fuzzy
msgid ""
"`config:property(name)`: Returns the config value for the given property "
"name; the name can be obtained dynamically by an expression"
msgstr "`config:property(name)`: 指定したプロパティ名の設定値を返します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1172
#, fuzzy
msgid ""
"`{config:property('quarkus.foo')}` or `{config:property(foo."
"getPropertyName())}`"
msgstr ""
"`{config:property('quarkus.foo')}` または `{config:property(foo."
"getPropertyName())}`"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1173
#, no-wrap, fuzzy
msgid "Time"
msgstr "時間"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1176
#, fuzzy
msgid ""
"`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr "`format(pattern)`: `java.time` パッケージのテンポラリオブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1177
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr "`{dateTime.format('d MMM uuuu')}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1179
#, fuzzy
msgid ""
"`format(pattern,locale)`: Formats temporal objects from the `java.time` "
"package"
msgstr "`format(pattern,locale)`: `java.time` パッケージのテンポラリオブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1180
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale)}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1182
#, fuzzy
msgid ""
"`format(pattern,locale,timeZone)`: Formats temporal objects from the `java."
"time` package"
msgstr ""
"`format(pattern,locale,timeZone)`: `java.time` パッケージのテンポラリオブジェクトをフォーマットします。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1183
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1185
#, fuzzy
msgid ""
"`time:format(dateTime,pattern)`: Formats temporal objects from the `java."
"time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr ""
"`time:format(dateTime,pattern)`: `java.time` パッケージ、 `java.util.Date` 、 `java."
"util.Calendar` 、 のテンポラリオブジェクトをフォーマットします。 `java.lang.Number`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1186
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr "`{time:format(myDate,'d MMM uuuu')}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1188
#, fuzzy
msgid ""
"`time:format(dateTime,pattern,locale)`: Formats temporal objects from the "
"`java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang."
"Number`"
msgstr ""
"`time:format(dateTime,pattern,locale)`: `java.time` パッケージ、 `java.util.Date` "
"、 `java.util.Calendar` 、 のテンポラリオブジェクトをフォーマットします。 `java.lang.Number`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1189
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr "`{time:format(myDate,'d MMM uuuu', myLocale)}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1191
#, fuzzy
msgid ""
"`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects "
"from the `java.time` package, `java.util.Date`, `java.util.Calendar` and "
"`java.lang.Number`"
msgstr ""
"`time:format(dateTime,pattern,locale,timeZone)`: `java.time` パッケージ、 `java."
"util.Date` 、 `java.util.Calendar` 、 のテンポラリオブジェクトをフォーマットします。 `java.lang."
"Number`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1192
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu',myTimeZoneId)}`"
msgstr "`{time:format(myDate,'d MMM uuuu',myTimeZoneId)}`"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1194
#, no-wrap, fuzzy
msgid "@TemplateData"
msgstr "テンプレートデータ"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1198
#, fuzzy
msgid ""
"A value resolver is automatically generated for a type annotated with "
"`@TemplateData`.  This allows Quarkus to avoid using reflection to access "
"the data at runtime."
msgstr ""
"値リゾルバは、 `@TemplateData` "
"でアノテーションされた型に対して自動的に生成されます。これにより、Quarkusでは、実行時にデータにアクセスするためのリフレクションの使用を避けることができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1200
#, fuzzy
msgid ""
"Non-public members, constructors, static initializers, static, synthetic and "
"void methods are always ignored."
msgstr "非公開のメンバ、コンストラクタ、静的イニシャライザ、静的メソッド、合成メソッド、ボイドメソッドは常に無視されます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1207
#, no-wrap
msgid "@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1213
#, no-wrap
msgid "    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1218
#, no-wrap
msgid ""
"    public BigDecimal getDiscountedPrice() {\n"
"        return price.multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1221
#, fuzzy
msgid "Any instance of `Item` can be used directly in the template:"
msgstr "`Item` の任意のインスタンスをテンプレート内で直接使用することができます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1227
#, no-wrap
msgid "{#each items} <1>\n"
"  {it.price} / {it.discountedPrice}\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1229
#, fuzzy
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr "`items` は `org.acme.Item` インスタンスのリストに解決されています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1232
#, fuzzy
msgid ""
"Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can "
"be used to fine-tune the generated resolver.  Finally, it is also possible "
"to specify the \"target\" of the annotation - this could be useful for third-"
"party classes not controlled by the application:"
msgstr ""
"さらに、 `@TemplateData.properties()` と `@TemplateData.ignore()` "
"を使用して、生成されたリゾルバを微調整することができます。最後に、アノテーションの「ターゲット」を指定することも可能です。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1238
#, no-wrap
msgid "@TemplateData(target = BigDecimal.class)\n"
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1252
#, no-wrap
msgid "{#each items} <1>\n"
"  {it.price.setScale(2, rounding)} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1254
#, fuzzy
msgid ""
"The generated value resolver knows how to invoke the `BigDecimal.setScale()` "
"method."
msgstr "生成された値リゾルバは、 `BigDecimal.setScale()` メソッドを呼び出す方法を知っています。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1256
#, no-wrap, fuzzy
msgid "RESTEasy Integration"
msgstr "RESTEasyの統合"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1260
#, fuzzy
msgid ""
"If you want to use Qute in your JAX-RS application, you'll need to add the "
"`quarkus-resteasy-qute` extension first.  In your `pom.xml` file, add:"
msgstr ""
"JAX-RSアプリケーションでQuteを使用したい場合は、まず `quarkus-resteasy-qute` の拡張子を追加する必要があります。 "
"`pom.xml` ファイルに追加します。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1267
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1271
#, fuzzy
msgid ""
"This extension registers a special `ContainerResponseFilter` implementation "
"so that a resource method can return a `TemplateInstance` and the filter "
"takes care of all necessary steps.  A simple JAX-RS resource may look like "
"this:"
msgstr ""
"このエクステンションは、リソースメソッドが `TemplateInstance` を返すことができるように、特別な "
"`ContainerResponseFilter` 実装を登録します。単純な JAX-RS リソースは次のようになります。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1281
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1284
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1290
#, no-wrap
msgid "    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1297
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1299
#, fuzzy
msgid ""
"If there is no `@ResourcePath` qualifier provided, the field name is used to "
"locate the template. In this particular case, we're injecting a template "
"with path `templates/hello.txt`."
msgstr ""
"`@ResourcePath` "
"の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この特定のケースでは、パスが `templates/"
"hello.txt` であるテンプレートを注入しています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1300
#, fuzzy
msgid ""
"`Template.data()` returns a new template instance that can be customized "
"before the actual rendering is triggered. In this case, we put the name "
"value under the key `name`. The data map is accessible during rendering."
msgstr ""
"`Template.data()` "
"は、実際のレンダリングがトリガーされる前にカスタマイズできる新しいテンプレートインスタンスを返します。この場合、名前の値をキー `name` "
"の下に置きます。データマップはレンダリング中にアクセス可能です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1301
#, fuzzy
msgid ""
"Note that we don't trigger the rendering - this is done automatically by a "
"special `ContainerResponseFilter` implementation."
msgstr ""
"レンダリングをトリガーしないことに注意してください - これは特別な `ContainerResponseFilter` "
"の実装によって自動的に行われます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1303
#, fuzzy
msgid ""
"Users are encouraged to use <<typesafe_templates,Type-safe templates>> that "
"help to organize the templates for a specific JAX-RS resource and enable "
"<<typesafe_expressions,type-safe expressions>> automatically."
msgstr ""
"ユーザーは、特定のJAX-RSリソースのテンプレートを整理し、自動的に link:"
"#typesafe_expressions[タイプセーフ表現を]有効にするのに役立つタイプセーフ link:"
"#typesafe_templates[テンプレートを]使用することが推奨されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1306
#, fuzzy
msgid ""
"The content negotiation is performed automatically.  The resulting output "
"depends on the `Accept` header received from the client."
msgstr "コンテントネゴシエーションは自動的に実行されます。結果の出力はクライアントから受け取った `Accept` ヘッダーに依存します。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1311
#: upstream/_guides/qute-reference.adoc:1332
#, no-wrap
msgid "@Path(\"/detail\")\n"
"class DetailResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1314
#, no-wrap
msgid "    @Inject\n"
"    Template item; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1321
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return item.data(\"myItem\", new Item(\"Alpha\", 1000)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1323
#, fuzzy
msgid ""
"Inject a variant template with base path derived from the injected field - "
"`src/main/resources/templates/item`."
msgstr ""
"注入されたフィールドから派生したベースパスを持つバリアントテンプレートを注入する - `src/main/resources/templates/"
"item`."

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1324
#, fuzzy
msgid ""
"For `text/plain` the `src/main/resources/templates/item.txt` template is "
"used. For `text/html` the `META-INF/resources/templates/item.html` template "
"is used."
msgstr ""
"`text/plain` では `src/main/resources/templates/item.txt` のテンプレートを使用しています。 "
"`text/html` では `META-INF/resources/templates/item.html` のテンプレートを使用しています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1326
#, fuzzy
msgid ""
"The `io.quarkus.resteasy.qute.RestTemplate` util class can be used to obtain "
"a template instance from a body of a JAX-RS resource method:"
msgstr ""
"`io.quarkus.resteasy.qute.RestTemplate` utilクラスは、JAX-"
"RSリソースメソッドのボディからテンプレートインスタンスを取得するために使用することができます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1327
#, no-wrap, fuzzy
msgid "RestTemplate Example"
msgstr "RestTemplateの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1339
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return RestTemplate.data(\"myItem\", new Item(\"Alpha\", 1000)); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1341
#, fuzzy
msgid ""
"The name of the template is derived from the resource class and method name; "
"`DetailResource/item` in this particular case."
msgstr "`DetailResource/item` テンプレートの名前は、リソースクラスとメソッド名から派生しています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1343
#, fuzzy
msgid ""
"Unlike with `@Inject` the templates obtained via `RestTemplate` are not "
"validated, i.e. the build does not fail if a template does not exist."
msgstr "`@Inject` とは異なり、 `RestTemplate` 経由で取得したテンプレートは検証されません。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1344
#, no-wrap, fuzzy
msgid "Development Mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1347
#, fuzzy
msgid ""
"In the development mode, all files located in `src/main/resources/templates` "
"are watched for changes and modifications are immediately visible."
msgstr ""
"開発モードでは、 `src/main/resources/templates` にあるすべてのファイルの変更が監視され、変更はすぐに表示されます。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1348
#, no-wrap, fuzzy
msgid "Type-safe Message Bundles"
msgstr "タイプセーフメッセージバンドル"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1350
#, no-wrap, fuzzy
msgid "Basic Concepts"
msgstr "基本概念"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1356
#, fuzzy
msgid ""
"The basic idea is that every message is potentially a very simple template.  "
"In order to prevent type errors a message is defined as an annotated method "
"of a *message bundle interface*.  Quarkus generates the *message bundle "
"implementation* at build time.  Subsequently, the bundles can be used at "
"runtime:"
msgstr ""
"基本的な考え方は、すべてのメッセージは潜在的に非常にシンプルなテンプレートであるということです。型エラーを防ぐために、メッセージは "
"*メッセージバンドルインターフェース*のアノテーションメソッドとして定義されます。Quarkusは、ビルド時に "
"*メッセージバンドルの実装を*生成します。その後、実行時にバンドルを使用することができます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1358
#, fuzzy
msgid ""
"Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. "
"`MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr ""
"`io.quarkus.qute.i18n.MessageBundles#get()` を経由して直接コードの中に入れてください。 "
"`MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1359
#, fuzzy
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "`@Inject` を介してあなたの豆に注入されます。 `@Inject AppMessages`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1360
#, fuzzy
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "メッセージ・バンドル・ネームスペースを介してテンプレート内で参照されます。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1365
#, no-wrap
msgid " {msg:hello_name('Lucie')} <1> <2> <3>\n"
" {msg:message(myKey,'Lu')} <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1367
#, fuzzy
msgid "`msg` is the default namespace."
msgstr "`msg` がデフォルトの名前空間です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1368
#, fuzzy
msgid "`hello_name` is the message key."
msgstr "`hello_name` がメッセージキーです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1369
#, fuzzy
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr "`Lucie` はメッセージバンドルインターフェースメソッドのパラメータです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1370
#, fuzzy
msgid ""
"It is also possible to obtain a localized message for a key resolved at "
"runtime using a reserved key `message`. The validation is skipped in this "
"case though."
msgstr ""
"また、予約された鍵を使用して、実行時に解決された鍵のローカライズされたメッセージを取得することも可能である `message` "
"。この場合、検証はスキップされます。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1371
#, no-wrap, fuzzy
msgid "Message Bundle Interface Example"
msgstr "メッセージバンドルインタフェースの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1376
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Message;\n"
"import io.quarkus.qute.i18n.MessageBundle;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1379
#, no-wrap
msgid "@MessageBundle <1>\n"
"public interface AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1383
#, no-wrap
msgid ""
"    @Message(\"Hello {name}!\") <2>\n"
"    String hello_name(String name); <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1385
#, fuzzy
msgid ""
"Denotes a message bundle interface. The bundle name is defaulted to `msg` "
"and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
""
msgstr ""
"メッセージバンドルのインターフェイスを表します。 `{msg:hello_name}`バンドル名のデフォルトは `msg` "
"で、テンプレート式の名前空間として使用されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1386
#, fuzzy
msgid ""
"Each method must be annotated with `@Message`. The value is a qute template."
msgstr "各メソッドには `@Message` をアノテーションする必要があります。値は qute テンプレートです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1387
#, fuzzy
msgid "The method parameters can be used in the template."
msgstr "メソッドのパラメータはテンプレートで使用することができます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1388
#, no-wrap, fuzzy
msgid "Bundle Name and Message Keys"
msgstr "バンドル名とメッセージキー"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1396
#, fuzzy
msgid ""
"Keys are used directly in templates.  The bundle name is used as a namespace "
"in template expressions.  The `@MessageBundle` can be used to define the "
"default strategy used to generate message keys from method names.  However, "
"the `@Message` can override this strategy and even define a custom key.  By "
"default, the annotated element's name is used as-is.  Other possibilities "
"are:"
msgstr ""
"キーはテンプレート内で直接使用します。バンドル名はテンプレート式の名前空間として使用されます。 `@MessageBundle` "
"は、メソッド名からメッセージキーを生成するために使用されるデフォルトのストラテジーを定義するために使用することができます。しかし、 `@Message` "
"はこのストラテジーをオーバーライドし、カスタム・キーを定義することもできます。デフォルトでは、注釈付き要素の名前がそのまま使用されます。他の可能性としては、以下のようなものがあります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1398
#, fuzzy
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "`helloName()` 脱キャメル化してハイフン化したもの。 `hello-name`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1399
#, fuzzy
msgid ""
"De-camel-cased and parts separated by underscores; e.g. `helloName()` -> "
"`hello_name`."
msgstr "`helloName()` `hello_name`脱キャメル化されており、アンダースコアで区切られている部分があります。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1400
#, no-wrap, fuzzy
msgid "Validation"
msgstr "バリデーション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1403
#, fuzzy
msgid "All message bundle templates are validated:"
msgstr "すべてのメッセージバンドルテンプレートが検証されています。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1404
#, fuzzy
msgid ""
"All expressions without a namespace must map to a parameter; e.g. `Hello "
"{foo}` -> the method must have a param of name `foo`"
msgstr "`Hello {foo}` 名前空間を持たないすべての式はパラメータにマッピングしなければなりません。 `foo`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1405
#, fuzzy
msgid ""
"All expressions are validated against the types of the parameters; e.g. "
"`Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> "
"`org.acme.Foo` must have a property of name `bar`"
msgstr ""
"すべての式はパラメータの型に対して検証されます。例えば `Hello {foo.bar}` の場合、パラメータ `foo` の型は `org.acme."
"Foo` → `org.acme.Foo` は name のプロパティを持たなければなりません。 `bar`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1407
#, fuzzy
msgid "A warning message is logged for each _unused_ parameter."
msgstr "_未使用の_パラメータごとに警告メッセージが記録されます。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1408
#, fuzzy
msgid ""
"Expressions that reference a message bundle method, such as `{msg:hello(item."
"name)}`, are validated too."
msgstr "`{msg:hello(item.name)}` のようなメッセージバンドルメソッドを参照する式も検証されます。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1409
#, no-wrap, fuzzy
msgid "Localization"
msgstr "ローカライゼーション"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1414
#, fuzzy
msgid ""
"The default locale of the Java Virtual Machine used to *build the "
"application* is used for the `@MessageBundle` interface by default.  "
"However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to "
"specify a custom locale.  Additionally, there are two ways to define a "
"localized bundle:"
msgstr ""
"*アプリケーションの構築*に使用する Java 仮想マシンのデフォルトのロケールは、デフォルトでは `@MessageBundle` "
"インターフェイスに使用されます。ただし、 `io.quarkus.qute.i18n.MessageBundle#locale()` "
"を使用してカスタムロケールを指定することができます。さらに、ローカライズされたバンドルを定義するには、2 つの方法があります。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1416
#, fuzzy
msgid ""
"Create an interface that extends the default interface that is annotated "
"with `@Localized`"
msgstr "でアノテーションされたデフォルトのインターフェイスを拡張するインターフェイスを作成します。 `@Localized`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1417
#, fuzzy
msgid ""
"Create an UTF-8 encoded file located in `src/main/resources/messages`; e.g. "
"`msg_de.properties`."
msgstr ""
"`src/main/resources/messages` `msg_de.properties` にある UTF-8 "
"エンコードされたファイルを作成します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1419
#, fuzzy
msgid ""
"A localized interface is the preferred solution mainly due to the "
"possibility of easy refactoring."
msgstr "ローカライズされたインターフェイスは、主にリファクタリングが容易になる可能性があるため、好ましい解決策です。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1420
#, no-wrap, fuzzy
msgid "Localized Interface Example"
msgstr "ローカライズされたインターフェースの例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1425
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Localized;\n"
"import io.quarkus.qute.i18n.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1428
#, no-wrap
msgid ""
"@Localized(\"de\") <1>\n"
"public interface GermanAppMessages extends AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1433
#, no-wrap
msgid ""
"    @Override\n"
"    @Message(\"Hallo {name}!\") <2>\n"
"    String hello_name(String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1435
#, fuzzy
msgid "The value is the locale tag string (IETF)."
msgstr "値はロケールタグ文字列（IETF）です。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1436
#, fuzzy
msgid "The value is the localized template."
msgstr "値はローカライズされたテンプレートです。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1444
#, fuzzy
msgid ""
"Message bundle files must be encoded in UTF-8.  The file name consists of "
"the relevant bundle name (e.g. `msg`) and underscore followed by the locate "
"tag (IETF).  The file format is very simple: each line represents either a "
"key/value pair with the equals sign used as a separator or a comment (line "
"starts with `#`).  Keys are mapped to method names from the corresponding "
"message bundle interface.  Values represent the templates normally defined "
"by `io.quarkus.qute.i18n.Message#value()`.  We use `.properties` suffix in "
"our example because most IDEs and text editors support syntax highlighting "
"of `.properties` files.  But in fact, the suffix could be anything."
msgstr ""
"メッセージバンドルファイルはUTF-8でエンコードされている必要があります。ファイル名は、関連するバンドル名（例： `msg` "
"）とアンダースコアの後にロケートタグ（IETF）が続きます。フ ァ イ "
"ル形式は非常に単純です。各行は、キーと値のペアを表すもので、等号をセパレータとして使用するか、コメント（行頭が `#` "
"で始まる）のいずれかになります。キーは、対応するメッセージ・バンドル・インターフェースのメソッド名にマッピングされています。値は、通常 `io."
"quarkus.qute.i18n.Message#value()` で定義されているテンプレートを表します。この例では `.properties` "
"サフィックスを使用しています。これは、ほとんどの IDE やテキスト・エディタが `.properties` "
"ファイルのシンタックス・ハイライトをサポートしているからです。しかし、実際には、サフィックスは何でも構いません。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1445
#, no-wrap, fuzzy
msgid "Localized File Example - `msg_de.properties`"
msgstr "ローカライズされたファイルの例 `msg_de.properties`"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1449
#, no-wrap
msgid "hello_name=Hallo {name}! <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1451
#, fuzzy
msgid "Each line in a localized file represents a message template."
msgstr "ローカライズされたファイルの各行は、メッセージテンプレートを表します。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1452
#, fuzzy
msgid "Keys and values are separated by the equals sign."
msgstr "キーと値は等号で区切られています。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1453
#, no-wrap, fuzzy
msgid "Configuration Reference"
msgstr "設定リファレンス"

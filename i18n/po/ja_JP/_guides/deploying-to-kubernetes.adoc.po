# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-29 14:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/deploying-to-kubernetes.adoc:6
#, no-wrap
msgid "Quarkus - Kubernetes extension"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:14
msgid ""
"Quarkus offers the ability to automatically generate Kubernetes resources "
"based on sane defaults and user-supplied configuration using https://github."
"com/dekorateio/dekorate/[dekorate].  It currently supports generating "
"resources for vanilla <<#kubernetes,Kubernetes>>, <<#openshift,OpenShift>> "
"and <<#knative,Knative>>.  Furthermore, Quarkus can deploy the application "
"to a target Kubernetes cluster by applying the generated manifests to the "
"target cluster's API Server.  Finally, when either one of container image "
"extensions is present (see the link:container-image[container image guide] "
"for more details), Quarkus has the ability to create a container image and "
"push it to a registry *before* deploying the application to the target "
"platform."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:18
msgid "To complete this guide, you need:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:20
msgid "roughly 10 minutes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:21
msgid "an IDE"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:22
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:23
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:24
msgid "access to a Kubernetes cluster (Minikube is a viable option)"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:26
#: upstream/_guides/deploying-to-kubernetes.adoc:583
#, no-wrap
msgid "Kubernetes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:29
msgid ""
"Let's create a new project that contains both the Kubernetes and Jib "
"extensions:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:39
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=kubernetes-quickstart \\\n"
"    -DclassName=\"org.acme.rest.GreetingResource\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"kubernetes, jib\"\n"
"cd kubernetes-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:42
msgid "This added the following dependencies to the `pom.xml`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:53
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-kubernetes</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-container-image-jib</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:58
msgid ""
"By adding these dependencies, we enable the generation of Kubernetes "
"manifests each time we perform a build while also enabling the build of a "
"container image using Jib.  For example, following the execution of `./mvnw "
"package`, you will notice amongst the other files that are created, two "
"files named `kubernetes.json` and `kubernetes.yml` in the `target/kubernetes/"
"` directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:60
msgid ""
"If you look at either file you will see that it contains both a Kubernetes "
"`Deployment` and a `Service`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:62
msgid ""
"The full source of the `kubernetes.json` file looks something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:141
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"apps/v1\",\n"
"    \"kind\" : \"Deployment\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"    \"spec\" : {\n"
"      \"replicas\" : 1,\n"
"      \"selector\" : {\n"
"        \"matchLabels\" : {\n"
"          \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"          \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\",\n"
"        }\n"
"      },\n"
"      \"template\" : {\n"
"        \"metadata\" : {\n"
"          \"labels\" : {\n"
"            \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"            \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\"\n"
"          }\n"
"        },\n"
"        \"spec\" : {\n"
"          \"containers\" : [ {\n"
"            \"env\" : [ {\n"
"              \"name\" : \"KUBERNETES_NAMESPACE\",\n"
"              \"valueFrom\" : {\n"
"                \"fieldRef\" : {\n"
"                  \"fieldPath\" : \"metadata.namespace\"\n"
"                }\n"
"              }\n"
"            } ],\n"
"            \"image\" : \"yourDockerUsername/test-quarkus-app:1.0-SNAPSHOT\",\n"
"            \"imagePullPolicy\" : \"Always\",\n"
"            \"name\" : \"test-quarkus-app\"\n"
"          } ]\n"
"        }\n"
"      }\n"
"    }\n"
"  },\n"
"  {\n"
"  \"apiVersion\" : \"v1\",\n"
"  \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\",\n"
"      },\n"
"      \"name\" : \"test-quarkus-app\"\n"
"    },\n"
"  \"spec\" : {\n"
"    \"ports\" : [ {\n"
"      \"name\" : \"http\",\n"
"      \"port\" : 8080,\n"
"      \"targetPort\" : 8080\n"
"    } ],\n"
"    \"selector\" : {\n"
"      \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"      \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\"\n"
"    },\n"
"    \"type\" : \"ClusterIP\"\n"
"  }\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:144
msgid ""
"The generated manifest can be applied to the cluster from the project root "
"using `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:148
#, no-wrap
msgid "kubectl apply -f target/kubernetes/kubernetes.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:152
msgid ""
"An important thing to note about the `Deployment` is that is uses "
"`yourDockerUsername/test-quarkus-app:1.0-SNAPSHOT` as the container image of "
"the `Pod`.  The name of the image is controlled by the Jib extension and can "
"be customized using the usual `application.properties`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:154
msgid "For example with a configuration like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:160
#, no-wrap
msgid ""
"quarkus.container-image.group=quarkus #optional, default to the system user name\n"
"quarkus.container-image.name=demo-app #optional, defaults to the application name\n"
"quarkus.container-image.tag=1.0       #optional, defaults to the application version\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:163
msgid ""
"The image that will be used in the generated manifests will be `quarkus/demo-"
"app:1.0`"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:164
#, no-wrap
msgid "Defining a Docker registry"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:167
msgid "The Docker registry can be specified with the following property:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:171
#, no-wrap
msgid "quarkus.container-image.registry=my.docker-registry.net\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:175
msgid ""
"By adding this property along with the rest of the container image "
"properties of the previous section, the generated manifests will use the "
"image `my.docker-registry.net/quarkus/demo-app:1.0`.  The image is not the "
"only thing that can be customized in the generated manifests, as will become "
"evident in the following sections."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:176
#, no-wrap
msgid "Labels and Annotations"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:178
#, no-wrap
msgid "Labels"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:183
msgid ""
"The generated manifests use the Kubernetes link:https://kubernetes.io/docs/"
"concepts/overview/working-with-objects/common-labels[recommended labels].  "
"These labels can be customized using `quarkus.kubernetes.name`, `quarkus."
"kubernetes.version` and `quarkus.kubernetes.part-of`.  For example by adding "
"the following configuration to your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:189
#, no-wrap
msgid ""
"quarkus.kubernetes.part-of=todo-app\n"
"quarkus.kubernetes.name=todo-rest\n"
"quarkus.kubernetes.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:195
msgid ""
"As is described in detail in the <<#openshift, OpenShift>> section, "
"customizing OpenShift (or Knative) properties is done in the same way, but "
"replacing `kubernetes` with `openshift` (or `knative`). The previous example "
"for OpenShift would look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:201
#, no-wrap
msgid ""
"quarkus.openshift.part-of=todo-app\n"
"quarkus.openshift.name=todo-rest\n"
"quarkus.openshift.version=1.0-rc.1\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:205
msgid "The labels in generated resources will look like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:213
#, no-wrap
msgid ""
"  \"labels\" : {\n"
"    \"app.kubernetes.io/part-of\" : \"todo-app\",\n"
"    \"app.kubernetes.io/name\" : \"todo-rest\",\n"
"    \"app.kubernetes.io/version\" : \"1.0-rc.1\"\n"
"  }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:215
#, no-wrap
msgid "Custom Labels"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:218
msgid ""
"To add additional custom labels, for example `foo=bar` just apply the "
"following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:222
#, no-wrap
msgid "quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:225
msgid ""
"When using the `quarkus-container-image-jib` extension to build a container "
"image, then any label added via the aforementioned property will also be "
"added to the generated container image."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:226
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:229
msgid ""
"Out of the box, the generated resources will be annotated with version "
"control related information that can be used either by tooling, or by the "
"user for troubleshooting purposes."
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:236
#, no-wrap
msgid ""
"  \"annotations\": {\n"
"    \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"    \"app.quarkus.io/commit-id\" : \"<some git SHA>\",\n"
"   }\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:238
#, no-wrap
msgid "Custom Annotations"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:241
msgid ""
"Custom annotations can be added in a way similar to labels.For example to "
"add the annotation `foo=bar` and `app.quarkus/id=42` just apply the "
"following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:246
#, no-wrap
msgid ""
"quarkus.kubernetes.annotations.foo=bar\n"
"quarkus.kubernetes.annotations.\"app.quarkus/id\"=42\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:249
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:252
msgid "Kubernetes provides multiple ways of defining environment variables:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:254
msgid "key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:255
msgid "import all values from a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:256
msgid ""
"interpolate a single value identified by a given field in a Secret or "
"ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:257
msgid "interpolate a value from a field within the same resource"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:258
#, no-wrap
msgid "Environment variables from key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:261
msgid ""
"To add a key/value pair as an environment variable in the generated "
"resources:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:265
#, no-wrap
msgid "quarkus.kubernetes.env.vars.my-env-var=foobar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:269
msgid ""
"The command above will add `MY_ENV_VAR=foobar` as an environment variable.  "
"Please note that the key `my-env-var` will be converted to uppercase and "
"dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:270
#, no-wrap
msgid "Environment variables from Secret"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:274
msgid ""
"To add all key/value pairs of `Secret` as environment variables just apply "
"the following configuration, separating each `Secret` to be used as source "
"by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:278
#, no-wrap
msgid "quarkus.kubernetes.env.secrets=my-secret,my-other-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:281
#: upstream/_guides/deploying-to-kubernetes.adoc:325
msgid "which would generate the following in the container definition:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:291
#, no-wrap
msgid ""
"envFrom:\n"
"  - secretRef:\n"
"      name: my-secret\n"
"      optional: false\n"
"  - secretRef:\n"
"      name: my-other-secret\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:294
msgid ""
"The following extracts a value identified by the `keyName` field from the "
"`my-secret` Secret into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:299
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-secret=my-secret\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:302
#: upstream/_guides/deploying-to-kubernetes.adoc:347
msgid ""
"This would generate the following in the `env` section of your container:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:312
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      secretKeyRef:\n"
"        key: keyName\n"
"        name: my-secret\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:314
#, no-wrap
msgid "Environment variables from ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:318
msgid ""
"To add all key/value pairs from `ConfigMap` as environment variables just "
"apply the following configuration, separating each `ConfigMap` to be used as "
"source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:322
#, no-wrap
msgid "quarkus.kubernetes.env.configmaps=my-config-map,another-config-map\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:335
#, no-wrap
msgid ""
"envFrom:\n"
"  - configMapRef:\n"
"      name: my-config-map\n"
"      optional: false\n"
"  - configMapRef:\n"
"      name: another-config-map\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:339
msgid ""
"The following extracts a value identified by the `keyName` field from the "
"`my-config-map` ConfigMap into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:344
#, no-wrap
msgid ""
"quarkus.kubernetes.env.mapping.foo.from-configmap=my-configmap\n"
"quarkus.kubernetes.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:357
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      configMapRefKey:\n"
"        key: keyName\n"
"        name: my-configmap\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:359
#, no-wrap
msgid "Environment variables from fields"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:362
msgid ""
"It's also possible to use the value from another field to add a new "
"environment variable by specifying the path of the field to be used as a "
"source, as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:366
#, no-wrap
msgid "quarkus.kubernetes.env.fields.foo=metadata.name\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:372
msgid ""
"As is described in detail in the <<#openshift, OpenShift>> section, "
"customizing OpenShift properties is done in the same way, but replacing "
"`kubernetes` with `openshift`. The previous example for OpenShift would look "
"like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:376
#, no-wrap
msgid "quarkus.openshift.env.fields.foo=metadata.name\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:379
#, no-wrap
msgid "Validation"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:382
msgid ""
"A conflict between two definitions, e.g. mistakenly assigning both a value "
"and specifying that a variable is derived from a field, will result in an "
"error being thrown at build time so that you get the opportunity to fix the "
"issue before you deploy your application to your cluster where it might be "
"more difficult to diagnose the source of the issue."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:384
msgid ""
"Similarly, two redundant definitions, e.g. defining an injection from the "
"same secret twice, will not cause an issue but will indeed report a warning "
"to let you know that you might not have intended to duplicate that "
"definition."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:386
#, no-wrap
msgid "Backwards compatibility"
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:389
msgid ""
"Previous versions of the Kubernetes extension supported a different syntax "
"to add environment variables.The older syntax is still supported but is "
"deprecated and it's advised that you migrate to the new syntax."
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:390
#, no-wrap
msgid "Old vs. new syntax"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:401
#, no-wrap
msgid ""
"|                               |Old                                                    | New                                                 |\n"
"| Plain variable                |`quarkus.kubernetes.env-vars.my-env-var.value=foobar`  | `quarkus.kubernetes.env.vars.my-env-var=foobar`     |\n"
"| From field                    |`quarkus.kubernetes.env-vars.my-env-var.field=foobar`  | `quarkus.kubernetes.env.fields.my-env-var=foobar`   |\n"
"| All from `ConfigMap`          |`quarkus.kubernetes.env-vars.xxx.configmap=foobar`     | `quarkus.kubernetes.env.configmaps=foobar`          |\n"
"| All from `Secret`             |`quarkus.kubernetes.env-vars.xxx.secret=foobar`        | `quarkus.kubernetes.env.secrets=foobar`             |\n"
"| From one `Secret` field       |`quarkus.kubernetes.env-vars.foo.secret=foobar`        | `quarkus.kubernetes.env.mapping.foo.from-secret=foobar` |\n"
"|                               |`quarkus.kubernetes.env-vars.foo.value=field`          | `quarkus.kubernetes.env.mapping.foo.with-key=field` |\n"
"| From one `ConfigMap` field    |`quarkus.kubernetes.env-vars.foo.configmap=foobar`     | `quarkus.kubernetes.env.mapping.foo.from-configmap=foobar` |\n"
"|                               |`quarkus.kubernetes.env-vars.foo.value=field`          | `quarkus.kubernetes.env.mapping.foo.with-key=field` |\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:407
msgid ""
"If you redefine the same variable using the new syntax while keeping the old "
"syntax, **ONLY** the new version will be kept and a warning will be issued "
"to alert you of the problem.For example, if you define both `quarkus."
"kubernetes.env-vars.my-env-var.value=foobar` and `quarkus.kubernetes.env."
"vars.my-env-var=newValue`, the extension will only generate an environment "
"variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:408
#, no-wrap
msgid "Mounting volumes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:412
msgid ""
"The Kubernetes extension allows the user to configure both volumes and "
"mounts for the application.  Any volume can be mounted with a simple "
"configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:416
#, no-wrap
msgid "quarkus.kubernetes.mounts.my-volume.path=/where/to/mount\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:420
msgid ""
"This will add a mount to the pod for volume `my-volume` to path `/where/to/"
"mount`.  The volumes themselves can be configured as shown in the sections "
"below."
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:421
#, no-wrap
msgid "Secret volumes"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:426
#, no-wrap
msgid "quarkus.kubernetes.secret-volumes.my-volume.secret-name=my-secret\n"
msgstr ""

#. type: Title =====
#: upstream/_guides/deploying-to-kubernetes.adoc:428
#, no-wrap
msgid "ConfigMap volumes"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:433
#, no-wrap
msgid "quarkus.kubernetes.config-map-volumes.my-volume.config-map-name=my-secret\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:435
#, no-wrap
msgid "Changing the number of replicas:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:438
msgid "To change the number of replicas from 1 to 3:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:442
#, no-wrap
msgid "quarkus.kubernetes.replicas=3\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:444
#, no-wrap
msgid "Add readiness and liveness probes"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:447
msgid ""
"By default, the Kubernetes resources do not contain readiness and liveness "
"probes in the generated `Deployment`. Adding them however is just a matter "
"of adding the SmallRye Health extension like so:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:454
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-smallrye-health</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:458
msgid ""
"The values of the generated probes will be determined by the configured "
"health properties: `quarkus.smallrye-health.root-path`, `quarkus.smallrye-"
"health.liveness-path` and `quarkus.smallrye-health.readiness-path`.  More "
"information about the health extension can be found in the relevant link:"
"microprofile-health[guide]."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:459
#, no-wrap
msgid "Customizing the readiness probe:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:461
msgid ""
"To set the initial delay of the probe to 20 seconds and the period to 45:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:466
#: upstream/_guides/deploying-to-kubernetes.adoc:630
#, no-wrap
msgid ""
"quarkus.kubernetes.readiness-probe.initial-delay=20s\n"
"quarkus.kubernetes.readiness-probe.period=45s\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:468
#, no-wrap
msgid "Add hostAliases"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:470
msgid ""
"To add entries to a Pod's `/etc/hosts` file (more information can be found "
"in https://kubernetes.io/docs/concepts/services-networking/add-entries-to-"
"pod-etc-hosts-with-host-aliases/[Kubernetes documentation]), just apply the "
"following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:474
#, no-wrap
msgid "quarkus.kubernetes.hostaliases.\"10.0.0.0\".hostnames=foo.com,bar.org\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:477
msgid ""
"This would generate the following `hostAliases` section in the `deployment` "
"definition:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:489
#, no-wrap
msgid ""
"kind: Deployment\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      hostAliases:\n"
"      - hostnames:\n"
"        - foo.com\n"
"        - bar.org\n"
"        ip: 10.0.0.0\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:491
#, no-wrap
msgid "Container Resources Management"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:494
msgid ""
"CPU & Memory limits and requests can be applied to a `Container` (more info "
"in https://kubernetes.io/docs/concepts/configuration/manage-resources-"
"containers/[Kubernetes documentation]) using the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:501
#, no-wrap
msgid ""
"quarkus.kubernetes.resources.requests.memory=64Mi\n"
"quarkus.kubernetes.resources.requests.cpu=250m\n"
"quarkus.kubernetes.resources.limits.memory=512Mi\n"
"quarkus.kubernetes.resources.limits.cpu=1000m\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:504
msgid "This would generate the following entry in the `container` section:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:515
#, no-wrap
msgid ""
"containers:\n"
"  resources:\n"
"    limits:\n"
"      cpu: 1000m\n"
"      memory: 512Mi\n"
"    requests:\n"
"      cpu: 250m\n"
"      memory: 64Mi\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:517
#, no-wrap
msgid "Using the Kubernetes client"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:520
msgid ""
"Applications that are deployed to Kubernetes and need to access the API "
"server will usually make use of the `kubernetes-client` extension:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:527
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-kubernetes-client</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:532
msgid ""
"To access the API server from within a Kubernetes cluster, some RBAC related "
"resources are required (e.g. a ServiceAccount, a RoleBinding etc.).  So, "
"when the `kubernetes-client` extension is present, the `kubernetes` "
"extension is going to create those resources automatically, so that "
"application will be granted the `view` role.  If more roles are required, "
"they will have to be added manually."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:533
#, no-wrap
msgid "Deploying to Minikube"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:537
msgid ""
"https://github.com/kubernetes/minikube[Minikube] is quite popular when a "
"Kubernetes cluster is needed for development purposes. To make the "
"deployment to Minikube experience as frictionless as possible, Quarkus "
"provides the `quarkus-minikube` extension. This extension can be added to a "
"project like so:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:544
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-minikube</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:548
msgid ""
"The purpose of this extension is to generate Kubernetes manifests (`minikube."
"yaml` and `minikube.json`) that are tailored to Minikube.  This extension "
"assumes a couple things:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:551
msgid ""
"Users won't be using an image registry and will instead make their container "
"image accessible to the Kubernetes cluster by building it directly into "
"Minikube's Docker daemon. To use Minikube's Docker daemon you must first "
"execute:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:555
#, no-wrap
msgid "eval $(minikube -p minikube docker-env)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:559
msgid ""
"Applications deployed to Kubernetes won't be accessed via a Kubernetes "
"`Ingress`, but rather as a `NodePort` `Service`.  The advantage of doing "
"this is that the URL of an application can be retrieved trivially by "
"executing:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:563
#, no-wrap
msgid "minikube service list\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:567
msgid ""
"To control the https://kubernetes.io/docs/concepts/services-networking/"
"service/#nodeport[nodePort] that is used in this case, users can set "
"`quarkus.kubernetes.node-port`.  Note however that this configuration is "
"entirely optional because Quarkus will automatically use a proper (and non-"
"changing) value if none is set."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:570
msgid ""
"It is highly discouraged to use the manifests generated by the Minikube "
"extension when deploying to production as these manifests are intended for "
"development purposes only. When deploying to production, consider using the "
"vanilla Kubernetes manifests (or the OpenShift ones when targeting "
"OpenShift)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:573
msgid ""
"If the assumptions the Minikube extension makes don't fit your workflow, "
"nothing prevents you from using the regular Kubernetes extension to generate "
"Kubernetes manifests and apply those to your Minikube cluster."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:574
#, no-wrap
msgid "Tuning the generated resources using application.properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:578
msgid ""
"The Kubernetes extension allows tuning the generated manifest, using the "
"`application.properties` file.  Here are some examples:"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:579
#, no-wrap
msgid "Configuration options"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:582
msgid "The table below describe all the available configuration options."
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:621
#, no-wrap
msgid ""
"| Property                                           | Type                                      | Description | Default Value\n"
"| quarkus.kubernetes.name                            | String                                    |             | ${quarkus.container-image.name}\n"
"| quarkus.kubernetes.version                         | String                                    |             | ${quarkus.container-image.tag}\n"
"| quarkus.kubernetes.part-of                         | String                                    |             |\n"
"| quarkus.kubernetes.init-containers                 | Map<String, Container>                    |             |\n"
"| quarkus.kubernetes.labels                          | Map                                       |             |\n"
"| quarkus.kubernetes.annotations                     | Map                                       |             |\n"
"| quarkus.kubernetes.env-vars                        | Map<String, Env>                          |             |\n"
"| quarkus.kubernetes.working-dir                     | String                                    |             |\n"
"| quarkus.kubernetes.command                         | String[]                                  |             |\n"
"| quarkus.kubernetes.arguments                       | String[]                                  |             |\n"
"| quarkus.kubernetes.replicas                        | int                                       |             | 1\n"
"| quarkus.kubernetes.service-account                 | String                                    |             |\n"
"| quarkus.kubernetes.host                            | String                                    |             |\n"
"| quarkus.kubernetes.ports                           | Map<String, Port>                         |             |\n"
"| quarkus.kubernetes.service-type                    | ServiceType                               |             | ClusterIP\n"
"| quarkus.kubernetes.pvc-volumes                     | Map<String, PersistentVolumeClaimVolume>  |             |\n"
"| quarkus.kubernetes.secret-volumes                  | Map<String, SecretVolume>                 |             |\n"
"| quarkus.kubernetes.config-map-volumes              | Map<String, ConfigMapVolume>              |             |\n"
"| quarkus.kubernetes.git-repo-volumes                | Map<String, GitRepoVolume>                |             |\n"
"| quarkus.kubernetes.aws-elastic-block-store-volumes | Map<String, AwsElasticBlockStoreVolume>   |             |\n"
"| quarkus.kubernetes.azure-disk-volumes              | Map<String, AzureDiskVolume>              |             |\n"
"| quarkus.kubernetes.azure-file-volumes              | Map<String, AzureFileVolume>              |             |\n"
"| quarkus.kubernetes.mounts                          | Map<String, Mount>                        |             |\n"
"| quarkus.kubernetes.image-pull-policy               | ImagePullPolicy                           |             | Always\n"
"| quarkus.kubernetes.image-pull-secrets              | String[]                                  |             |\n"
"| quarkus.kubernetes.liveness-probe                  | Probe                                     |             | ( see Probe )\n"
"| quarkus.kubernetes.readiness-probe                 | Probe                                     |             | ( see Probe )\n"
"| quarkus.kubernetes.sidecars                        | Map<String, Container>                    |             |\n"
"| quarkus.kubernetes.expose                          | boolean                                   |             | false\n"
"| quarkus.kubernetes.headless                        | boolean                                   |             | false\n"
"| quarkus.kubernetes.hostaliases                     | Map<String, HostAlias>                    |             |\n"
"| quarkus.kubernetes.resources.requests.cpu          | String                                    |             |\n"
"| quarkus.kubernetes.resources.requests.memory       | String                                    |             |\n"
"| quarkus.kubernetes.resources.limits.cpu            | String                                    |             |\n"
"| quarkus.kubernetes.resources.limits.memory         | String                                    |             |\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:625
msgid ""
"Properties that use non-standard types, can be referenced by expanding the "
"property.  For example to define a `kubernetes-readiness-probe` which is of "
"type `Probe`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:634
msgid ""
"In this example `initial-delay` and `period` are fields of the type "
"`Probe`.  Below you will find tables describing all available types."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:636
#, no-wrap
msgid "Basic Types"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:638
#, no-wrap
msgid "ServiceType"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:640
msgid ""
"Allowed values: `cluster-ip`, `node-port`, `load-balancer`, `external-name`"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:641
#, no-wrap
msgid "Env"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:648
#, no-wrap
msgid ""
"| Property  | Type   | Description | Default Value\n"
"| value     | String |             |\n"
"| secret    | String |             |\n"
"| configmap | String |             |\n"
"| field     | String |             |\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:650
#, no-wrap
msgid "Probe"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:659
#, no-wrap
msgid ""
"| Property              | Type     | Description | Default Value\n"
"| http-action-path      | String   |             |\n"
"| exec-action           | String   |             |\n"
"| tcp-socket-action     | String   |             |\n"
"| initial-delay         | Duration |             |             0\n"
"| period                | Duration |             |           30s\n"
"| timeout               | Duration |             |           10s\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:661
#, no-wrap
msgid "Port"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:668
#, no-wrap
msgid ""
"| Property        | Type     | Description | Default Value\n"
"| container-port  | int      |             |\n"
"| host-port       | int      |             | 0\n"
"| path            | String   |             | /\n"
"| protocol        | Protocol |             | TCP\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:670
#, no-wrap
msgid "Container"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:683
#, no-wrap
msgid ""
"| Property          | Type                                    | Description | Default Value\n"
"| image             | String                                  |             |\n"
"| env-vars          | Env[]                                   |             |\n"
"| working-dir       | String                                  |             |\n"
"| command           | String[]                                |             |\n"
"| arguments         | String[]                                |             |\n"
"| ports             | Port[]                                  |             |\n"
"| mounts            | Mount[]                                 |             |\n"
"| image-pull-policy | ImagePullPolicy                         |             | Always\n"
"| liveness-probe    | Probe                                   |             |\n"
"| readiness-probe   | Probe                                   |             |\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:685
#, no-wrap
msgid "HostAlias"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:689
#, no-wrap
msgid ""
"| Property    | Type     | Description       | Default Value\n"
"| hostnames   | String[] | list of hostnames |\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:691
#, no-wrap
msgid "Mounts and Volumes"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:693
#, no-wrap
msgid "Mount"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:699
#, no-wrap
msgid ""
"| Property  | Type    | Description | Default Value\n"
"| path      | String  |             |\n"
"| sub-path  | String  |             |\n"
"| read-only | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:701
#, no-wrap
msgid "ConfigMapVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:707
#, no-wrap
msgid ""
"| Property        | Type    | Description | Default Value\n"
"| config-map-name | String  |             |\n"
"| default-mode    | int     |             | 0600\n"
"| optional        | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:709
#, no-wrap
msgid "SecretVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:715
#, no-wrap
msgid ""
"| Property     | Type    | Description | Default Value\n"
"| secret-name  | String  |             |\n"
"| default-mode | int     |             | 0600\n"
"| optional     | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:718
#, no-wrap
msgid "AzureDiskVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:727
#, no-wrap
msgid ""
"| Property     | Type    | Description | Default Value\n"
"| disk-name    | String  |             |\n"
"| disk-uri     | String  |             |\n"
"| kind         | String  |             | Managed\n"
"| caching-mode | String  |             | ReadWrite\n"
"| fs-type      | String  |             | ext4\n"
"| read-only    | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:729
#, no-wrap
msgid "AwsElasticBlockStoreVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:736
#, no-wrap
msgid ""
"| Property    | Type    | Description | Default Value\n"
"| volume-id   | String  |             |\n"
"| partition   | int     |             |\n"
"| fs-type     | String  |             | ext4\n"
"| read-only   | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:738
#, no-wrap
msgid "GitRepoVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:744
#, no-wrap
msgid ""
"| Property    | Type   | Description | Default Value\n"
"| repository  | String |             |\n"
"| directory   | String |             |\n"
"| revision    | String |             |\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:746
#, no-wrap
msgid "PersistentVolumeClaimVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:751
#, no-wrap
msgid ""
"| Property    | Type    | Description | Default Value\n"
"| claim-name  | String  |             |\n"
"| read-only   | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:753
#, no-wrap
msgid "AzureFileVolume"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:759
#, no-wrap
msgid ""
"| Property    | Type    | Description | Default Value\n"
"| share-name  | String  |             |\n"
"| secret-name | String  |             |\n"
"| read-only   | boolean |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:762
#: upstream/_guides/deploying-to-kubernetes.adoc:821
#, no-wrap
msgid "OpenShift"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:765
msgid ""
"One way to deploy an application to OpenShift is to use s2i (source to "
"image) to create an image stream from the source and then deploy the image "
"stream:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:770
#, no-wrap
msgid ""
"./mvnw quarkus:remove-extension -Dextensions=\"kubernetes, jib\"\n"
"./mvnw quarkus:add-extension -Dextensions=\"openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:773
#, no-wrap
msgid ""
"oc new-project quarkus-project\n"
"./mvnw clean package -Dquarkus.container-image.build=true \n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:778
#, no-wrap
msgid ""
"oc new-app --name=greeting  quarkus-project/kubernetes-quickstart:1.0-SNAPSHOT\n"
"oc expose svc/greeting\n"
"oc get route\n"
"curl <route>/greeting\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:781
msgid ""
"See further information in link:deploying-to-openshift[Deploying to "
"OpenShift]."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:783
#, no-wrap
msgid "A description of OpenShift resources and customisable properties is given below alongside Kubernetes resources to show similarities where applicable.   This includes an alternative to  `oc new-app ...` above, i.e. `oc apply -f target/kubernetes/openshift.json` .\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:785
msgid ""
"To enable the generation of OpenShift resources, you need to include "
"OpenShift in the target platforms:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:789
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:792
msgid ""
"If you need to generate resources for both platforms (vanilla Kubernetes and "
"OpenShift), then you need to include both (comma separated)."
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:796
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=kubernetes,openshift\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:800
msgid ""
"Following the execution of `./mvnw package -Dquarkus.container-image."
"build=true ` you will notice amongst the other files that are created, two "
"files named `openshift.json` and `openshift.yml` in the `target/kubernetes/` "
"directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:802
msgid ""
"These manifests can be deployed as is to a running cluster, using `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:806
#, no-wrap
msgid "kubectl apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:809
msgid "OpenShift users might want to use `oc` instead of `kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:813
#, no-wrap
msgid "oc apply -f target/kubernetes/openshift.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:818
msgid ""
"Quarkus also provides the link:deploying-to-openshift[OpenShift] extension. "
"This extension is basically a wrapper around the Kubernetes extension and "
"relieves OpenShift users of the necessity of setting the `deployment-target` "
"property to `openshift`"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:820
msgid ""
"The OpenShift resources can be customized in a similar approach with "
"Kubernetes."
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:854
#, no-wrap
msgid ""
"| Property                                          | Type                                      | Description | Default Value\n"
"| quarkus.openshift.name                            | String                                    |             | ${quarkus.container-image.name}\n"
"| quarkus.openshift.version                         | String                                    |             | ${quarkus.container-image.tag}\n"
"| quarkus.openshift.part-of                         | String                                    |             |\n"
"| quarkus.openshift.init-containers                 | Map<String, Container>                    |             |\n"
"| quarkus.openshift.labels                          | Map                                       |             |\n"
"| quarkus.openshift.annotations                     | Map                                       |             |\n"
"| quarkus.openshift.env-vars                        | Map<String, Env>                          |             |\n"
"| quarkus.openshift.working-dir                     | String                                    |             |\n"
"| quarkus.openshift.command                         | String[]                                  |             |\n"
"| quarkus.openshift.arguments                       | String[]                                  |             |\n"
"| quarkus.openshift.replicas                        | int                                       |             | 1\n"
"| quarkus.openshift.service-account                 | String                                    |             |\n"
"| quarkus.openshift.host                            | String                                    |             |\n"
"| quarkus.openshift.ports                           | Map<String, Port>                         |             |\n"
"| quarkus.openshift.service-type                    | ServiceType                               |             | ClusterIP\n"
"| quarkus.openshift.pvc-volumes                     | Map<String, PersistentVolumeClaimVolume>  |             |\n"
"| quarkus.openshift.secret-volumes                  | Map<String, SecretVolume>                 |             |\n"
"| quarkus.openshift.config-map-volumes              | Map<String, ConfigMapVolume>              |             |\n"
"| quarkus.openshift.git-repo-volumes                | Map<String, GitRepoVolume>                |             |\n"
"| quarkus.openshift.aws-elastic-block-store-volumes | Map<String, AwsElasticBlockStoreVolume>   |             |\n"
"| quarkus.openshift.azure-disk-volumes              | Map<String, AzureDiskVolume>              |             |\n"
"| quarkus.openshift.azure-file-volumes              | Map<String, AzureFileVolume>              |             |\n"
"| quarkus.openshift.mounts                          | Map<String, Mount>                        |             |\n"
"| quarkus.openshift.image-pull-policy               | ImagePullPolicy                           |             | Always\n"
"| quarkus.openshift.image-pull-secrets              | String[]                                  |             |\n"
"| quarkus.openshift.liveness-probe                  | Probe                                     |             | ( see Probe )\n"
"| quarkus.openshift.readiness-probe                 | Probe                                     |             | ( see Probe )\n"
"| quarkus.openshift.sidecars                        | Map<String, Container>                    |             |\n"
"| quarkus.openshift.expose                          | boolean                                   |             | false\n"
"| quarkus.openshift.headless                        | boolean                                   |             | false\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:857
#: upstream/_guides/deploying-to-kubernetes.adoc:917
#, no-wrap
msgid "Knative"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:860
msgid ""
"To enable the generation of Knative resources, you need to include Knative "
"in the target platforms:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:864
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=knative\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:868
msgid ""
"Following the execution of `./mvnw package` you will notice amongst the "
"other files that are created, two files named `knative.json` and `knative."
"yml` in the `target/kubernetes/` directory."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:870
msgid ""
"If you look at either file you will see that it contains a Knative `Service`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:872
msgid "The full source of the `knative.json` file looks something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:906
#, no-wrap
msgid ""
"{\n"
"  {\n"
"    \"apiVersion\" : \"serving.quarkus.knative.dev/v1alpha1\",\n"
"    \"kind\" : \"Service\",\n"
"    \"metadata\" : {\n"
"      \"annotations\": {\n"
"       \"app.quarkus.io/vcs-url\" : \"<some url>\",\n"
"       \"app.quarkus.io/commit-id\" : \"<some git SHA>\"\n"
"      },\n"
"      \"labels\" : {\n"
"        \"app.kubernetes.io/name\" : \"test-quarkus-app\",\n"
"        \"app.kubernetes.io/version\" : \"1.0-SNAPSHOT\"\n"
"      },\n"
"      \"name\" : \"knative.\n"
"    },\n"
"    \"spec\" : {\n"
"      \"runLatest\" : {\n"
"        \"configuration\" : {\n"
"          \"revisionTemplate\" : {\n"
"            \"spec\" : {\n"
"              \"container\" : {\n"
"                \"image\" : \"dev.local/yourDockerUsername/test-quarkus-app:1.0-SNAPSHOT\",\n"
"                \"imagePullPolicy\" : \"Always\"\n"
"              }\n"
"            }\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:909
msgid ""
"The generated manifest can be deployed as is to a running cluster, using "
"`kubectl`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:913
#, no-wrap
msgid "kubectl apply -f target/kubernetes/knative.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:916
msgid "The generated service can be customized using the following properties:"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:950
#, no-wrap
msgid ""
"| Property                                        | Type                                      | Description | Default Value\n"
"| quarkus.knative.name                            | String                                    |             | ${quarkus.container-image.name}\n"
"| quarkus.knative.version                         | String                                    |             | ${quarkus.container-image.tag}\n"
"| quarkus.knative.part-of                         | String                                    |             |\n"
"| quarkus.knative.init-containers                 | Map<String, Container>                    |             |\n"
"| quarkus.knative.labels                          | Map                                       |             |\n"
"| quarkus.knative.annotations                     | Map                                       |             |\n"
"| quarkus.knative.env-vars                        | Map<String, Env>                          |             |\n"
"| quarkus.knative.working-dir                     | String                                    |             |\n"
"| quarkus.knative.command                         | String[]                                  |             |\n"
"| quarkus.knative.arguments                       | String[]                                  |             |\n"
"| quarkus.knative.replicas                        | int                                       |             | 1\n"
"| quarkus.knative.service-account                 | String                                    |             |\n"
"| quarkus.knative.host                            | String                                    |             |\n"
"| quarkus.knative.ports                           | Map<String, Port>                         |             |\n"
"| quarkus.knative.service-type                    | ServiceType                               |             | ClusterIP\n"
"| quarkus.knative.pvc-volumes                     | Map<String, PersistentVolumeClaimVolume>  |             |\n"
"| quarkus.knative.secret-volumes                  | Map<String, SecretVolume>                 |             |\n"
"| quarkus.knative.config-map-volumes              | Map<String, ConfigMapVolume>              |             |\n"
"| quarkus.knative.git-repo-volumes                | Map<String, GitRepoVolume>                |             |\n"
"| quarkus.knative.aws-elastic-block-store-volumes | Map<String, AwsElasticBlockStoreVolume>   |             |\n"
"| quarkus.knative.azure-disk-volumes              | Map<String, AzureDiskVolume>              |             |\n"
"| quarkus.knative.azure-file-volumes              | Map<String, AzureFileVolume>              |             |\n"
"| quarkus.knative.mounts                          | Map<String, Mount>                        |             |\n"
"| quarkus.knative.image-pull-policy               | ImagePullPolicy                           |             | Always\n"
"| quarkus.knative.image-pull-secrets              | String[]                                  |             |\n"
"| quarkus.knative.liveness-probe                  | Probe                                     |             | ( see Probe )\n"
"| quarkus.knative.readiness-probe                 | Probe                                     |             | ( see Probe )\n"
"| quarkus.knative.sidecars                        | Map<String, Container>                    |             |\n"
"| quarkus.knative.revision-name                   | String                                    |             | \n"
"| quarkus.knative.traffic                         | Traffic[]                                 |             | ( see Traffic)\n"
msgstr ""

#. type: Block title
#: upstream/_guides/deploying-to-kubernetes.adoc:952
#, no-wrap
msgid "Traffic"
msgstr ""

#. type: Table
#: upstream/_guides/deploying-to-kubernetes.adoc:959
#, no-wrap
msgid ""
"| Property        | Type    | Description | Default Value\n"
"| revision-name   | String  | A specific revision to which to send this portion of traffic                                    |\n"
"| tag             | String  | Expose a dedicated url for referncing this target                                               |\n"
"| latest-revision | Boolean | Optionally provided to indicate that the latest revision should be used for this traffic target | false \n"
"| percent         | Logn    | Indicates the percent of traffic that is be routed to this revision                             | 100\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:962
#, no-wrap
msgid "Deployment targets"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:966
msgid ""
"Mentioned in the previous sections was the concept of `deployment-target`. "
"This concept allows users to control which Kubernetes manifests will be "
"generated and deployed to a cluster (if `quarkus.kubernetes.deploy` has been "
"set to `true`)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:970
msgid ""
"By default, when no `deployment-target` is set, then only vanilla Kubernetes "
"resources are generated and deployed. When multiple values are set (for "
"example `quarkus.kubernetes.deployment-target=kubernetes,openshift`) then "
"the resources for all targets are generated, but only the resources that "
"correspond to the *first* target are applied to the cluster (if deployment "
"is enabled)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:975
msgid ""
"In the case of wrapper extensions like OpenShift and Minikube, when these "
"extensions have been explicitly added to the project, the default "
"`deployment-target` is set by those extensions. For example if `quarkus-"
"minikube` has been added to a project, then `minikube` becomes the default "
"deployment target and its resources will be applied to the Kubernetes "
"cluster when deployment via `quarkus.kubernetes.deploy` has been set.  Users "
"can still override the deployment-targets manually using `quarkus.kubernetes."
"deployment-target`."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:976
#, no-wrap
msgid "Deprecated configuration"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:979
msgid ""
"The following categories of configuration properties have been deprecated."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:980
#, no-wrap
msgid "Properties without the quarkus prefix"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:983
msgid ""
"In earlier versions of the extension, the `quarkus.` was missing from those "
"properties. These properties are now deprecated."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:984
#, no-wrap
msgid "Docker and S2i properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:987
msgid ""
"The properties for configuring `docker` and `s2i` are also deprecated in "
"favor of the new container-image extensions."
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:988
#, no-wrap
msgid "Config group arrays"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:991
msgid ""
"Properties referring to config group arrays (e.g. `kubernetes.labels[0]`, "
"`kubernetes.env-vars[0]` etc) have been converted to maps, to align with the "
"rest of the Quarkus ecosystem."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:993
msgid "The code below demonstrates the change in `labels` config:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:999
#, no-wrap
msgid ""
"# Old labels config:\n"
"kubernetes.labels[0].name=foo\n"
"kubernetes.labels[0].value=bar\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1002
#, no-wrap
msgid ""
"# New labels\n"
"quarkus.kubernetes.labels.foo=bar\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1005
msgid "The code below demonstrates the change in `env-vars` config:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1011
#, no-wrap
msgid ""
"# Old env-vars config:\n"
"kubernetes.env-vars[0].name=foo\n"
"kubernetes.env-vars[0].configmap=my-configmap\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1014
#, no-wrap
msgid ""
"# New env-vars\n"
"quarkus.kubernetes.env-vars.foo.configmap=myconfigmap\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/deploying-to-kubernetes.adoc:1016
#, no-wrap
msgid "`env-vars` properties"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1020
msgid ""
"`quarkus.kubernetes.env-vars` are deprecated (though still currently "
"supported as of this writing) and the new declaration style should be used "
"instead.  See <<#env-vars>> and more specifically <<env-vars-backwards>> for "
"more details."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1021
#, no-wrap
msgid "Deployment"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1025
msgid ""
"To trigger building and deploying a container image you need to enable the "
"`quarkus.kubernetes.deploy` flag (the flag is disabled by default - "
"furthermore it has no effect during test runs or dev mode).  This can be "
"easily done with the command line:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1029
#, no-wrap
msgid "./mvnw clean package -Dquarkus.kubernetes.deploy=true\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1031
#, no-wrap
msgid "Building a container image"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1034
msgid ""
"Building a container image is possible, using any of the 3 available "
"`container-image` extensions:"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1036
msgid "link:container-image#docker[Docker]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1037
msgid "link:container-image#jib[Jib]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1038
msgid "link:container-image#s2i[s2i]"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1040
msgid ""
"Each time deployment is requested, a container image build will be "
"implicitly triggered (no additional properties are required when the "
"Kubernetes deployment has been enabled)."
msgstr ""

#. type: Title ===
#: upstream/_guides/deploying-to-kubernetes.adoc:1041
#, no-wrap
msgid "Deploying"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1046
msgid ""
"When deployment is enabled, the Kubernetes extension will select the "
"resources specified by `quarkus.kubernetes.deployment.target` and deploy "
"them.  This assumes that a `.kube/config` is available in your user "
"directory that points to the target Kubernetes cluster.  In other words the "
"extension will use whatever cluster `kubectl` uses. The same applies to "
"credentials."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1048
msgid ""
"At the moment no additional options are provided for further customization."
msgstr ""

#. type: Title ==
#: upstream/_guides/deploying-to-kubernetes.adoc:1049
#, no-wrap
msgid "Using existing resources"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1053
msgid ""
"Sometimes it's desirable to either provide additional resources (e.g. a "
"ConfigMap, a Secret, a Deployment for a database etc) or provide custom ones "
"that will be used as a `base` for the generation process.  Those resources "
"can be added under `src/main/kubernetes` directory and can be named after "
"the target environment (e.g. kubernetes.json, openshift.json, knative.json, "
"or the yml equivalents). Each of these files may contain one or more "
"Kubernetes resources."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1056
msgid ""
"Any resource found will be added in the generated manifests. Global "
"modifications (e.g. labels, annotations etc) will also be applied to those "
"resources.  If one of the provided resources has the same name as one of the "
"generated ones, then the generated resource will be created on top of the "
"provided resource, respecting existing content when possible (e.g. existing "
"labels, annotations, environment variables, mounts, replicas etc)."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1058
msgid ""
"The name of the resource is determined by the application name and may be "
"overridden by `quarkus.kubernetes.name`, `quarkus.openshift.name` and "
"`quarkus.knative.name`."
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1060
msgid ""
"For example, in the `kubernetes-quickstart` application, we can add a "
"`kubernetes.yml` file in the `src/main/kubernetes` that looks like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1087
#, no-wrap
msgid ""
"apiVersion: apps/v1\n"
"kind: Deployment\n"
"metadata:\n"
"  name: kubernetes-quickstart\n"
"  labels:\n"
"    app: quickstart\n"
"spec:\n"
"  replicas: 3\n"
"  selector:\n"
"    matchLabels:\n"
"      app: quickstart\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app: quickstart\n"
"    spec:\n"
"      containers:\n"
"      - name: kubernetes-quickstart\n"
"        image: someimage:latest\n"
"        ports:\n"
"        - containerPort: 80\n"
"        env:\n"
"        - name: FOO\n"
"          value: BAR\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1090
msgid "The generated `kubernetes.yml` will look like:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/deploying-to-kubernetes.adoc:1126
#, no-wrap
msgid ""
"apiVersion: \"apps/v1\"\n"
"kind: \"Deployment\"\n"
"metadata:\n"
"  annotations:\n"
"    app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"  labels:\n"
"    app: \"quickstart\"\n"
"  name: \"kubernetes-quickstart\"\n"
"spec:\n"
"  replicas: 3 <1>\n"
"  selector:\n"
"    matchLabels:\n"
"      app.kubernetes.io/name: \"kubernetes-quickstart\"\n"
"      app.kubernetes.io/version: \"1.0-SNAPSHOT\"\n"
"  template:\n"
"    metadata:\n"
"      annotations:\n"
"        app.quarkus.io/build-timestamp: \"2020-04-10 - 12:54:37 +0000\"\n"
"      labels:\n"
"        app: \"quickstart\" <2>\n"
"    spec:\n"
"      containers:\n"
"      - env:\n"
"        - name: \"FOO\" <3>\n"
"          value: \"BAR\"\n"
"        image: \"<<yourDockerUsername>>/kubernetes-quickstart:1.0-SNAPSHOT\" <4>\n"
"        imagePullPolicy: \"Always\"\n"
"        name: \"kubernetes-quickstart\"\n"
"        ports:\n"
"        - containerPort: 8080 <5>\n"
"          name: \"http\"\n"
"          protocol: \"TCP\"\n"
"      serviceAccount: \"kubernetes-quickstart\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/deploying-to-kubernetes.adoc:1129
msgid ""
"The provided replicas <1>, labels <2> and environment variables <3> were "
"retained. However, the image <4> and container port <5> were modified. "
"Moreover, the default annotations have been added."
msgstr ""

#. type: delimited block =
#: upstream/_guides/deploying-to-kubernetes.adoc:1134
msgid ""
"If the resource name does not match the application name (or the overridden "
"name) instead of reusing the resource a new one will be added. Same goes for "
"the container.  If the name of the container does not match the application "
"name (or the overridden name), container specific configuration will be "
"ignored."
msgstr ""

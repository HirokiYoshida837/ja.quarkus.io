# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2020-12-29 14:10+0900\n"
"PO-Revision-Date: 2020-12-31 11:37+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: \n"
"Language-Team: \n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/getting-started.adoc:6
#, no-wrap
msgid "Quarkus - Creating Your First Application"
msgstr "Quarkus - 初めてのアプリケーションを作成する"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:23
msgid "Learn how to create a Hello World Quarkus app.  This guide covers:"
msgstr ""
"Hello World Quarkusアプリを作成する方法について説明します。  このガイドでは、以下"
"の内容について説明します："

#. type: Plain text
#: upstream/_guides/getting-started.adoc:25
msgid "Bootstrapping an application"
msgstr "アプリケーションのブートストラップ"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:26
msgid "Creating a JAX-RS endpoint"
msgstr "JAX-RSエンドポイントの作成"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:27
msgid "Injecting beans"
msgstr "Beanの注入"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:28
msgid "Functional tests"
msgstr "機能テスト"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:29
msgid "Packaging of the application"
msgstr "アプリケーションのパッケージング"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:30
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:33
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下のものが必要です："

#. type: Plain text
#: upstream/_guides/getting-started.adoc:35
msgid "less than 15 minutes"
msgstr "15分以内"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:36
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:37
msgid "JDK 8 or 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 8 または 11+ がインストールされ、`JAVA_HOME` が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:38
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version} の場合"

#. type: Block title
#: upstream/_guides/getting-started.adoc:40
#, no-wrap
msgid "Verify Maven is using the Java you expect"
msgstr "Mavenが想定のJavaを使用していること"

#. type: delimited block =
#: upstream/_guides/getting-started.adoc:45
msgid ""
"If you have multiple JDK's installed it is not certain Maven will pick up the "
"expected java and you could end up with unexpected results.  You can verify which "
"JDK Maven uses by running `mvn --version`."
msgstr ""
"複数のJDKをインストール済で、Mavenが期待するJavaを使用するか分からない場合は、予期"
"しない結果に終わる可能性があります。どのJDKをMavenが使用するかを、`mvn --version` "
"コマンドで確認することが出来ます。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/getting-started.adoc:48 upstream/_guides/getting-started.adoc:53
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:52
msgid ""
"In this guide, we create a straightforward application serving a `hello` "
"endpoint. To demonstrate dependency injection, this endpoint uses a `greeting` "
"bean."
msgstr ""
"このガイドでは、`hello` エンドポイントを提供する簡単なアプリケーションを作成しま"
"す。依存性の注入を示すために、このエンドポイントでは `greeting` Bean を使用しま"
"す。"

#. type: Target for macro image
#: upstream/_guides/getting-started.adoc:53
#, no-wrap
msgid "getting-started-architecture.png"
msgstr "getting-started-architecture.png"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:56
msgid "This guide also covers the testing of the endpoint."
msgstr "このガイドでは、エンドポイントのテストについても解説しています。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:57
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:60
msgid ""
"We recommend that you follow the instructions from <<bootstrapping-the-project,"
"Bootstrapping project>> and onwards to create the application step by step."
msgstr ""
"<<bootstrapping-the-project,プロジェクトのブートストラップ>>とそれ以降の解説に従っ"
"て、ステップバイステップでアプリを作成していくことをお勧めします。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:62
msgid "However, you can go right to the completed example."
msgstr "しかし、完成した例をすぐ確認することもできます。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:64
msgid "Download an {quickstarts-archive-url}[archive] or clone the git repository:"
msgstr ""
"{quickstarts-archive-url}[アーカイブ] をダウンロードするか、gitレポジトリをクロー"
"ンします："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:68
#, no-wrap
msgid "git clone {quickstarts-clone-url}\n"
msgstr "git clone {quickstarts-clone-url}\n"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:71
msgid ""
"The solution is located in the `getting-started` {quickstarts-tree-url}/getting-"
"started[directory]."
msgstr ""
"ソリューションは `getting-started` {quickstarts-tree-url}/getting-"
"started[directory] にあります。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:72
#, no-wrap
msgid "Bootstrapping the project"
msgstr "プロジェクトのブートストラップ"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:75
msgid ""
"The easiest way to create a new Quarkus project is to open a terminal and run the "
"following command:"
msgstr ""
"新しいQuarkusプロジェクトを作成する最も簡単な方法は、ターミナルを開いて以下のコマ"
"ンドを実行することです："

#. type: Plain text
#: upstream/_guides/getting-started.adoc:77
msgid "For Linux & MacOS users"
msgstr "Linux & MacOSユーザーの場合"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:86
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=getting-started \\\n"
"    -DclassName=\"org.acme.getting.started.GreetingResource\" \\\n"
"    -Dpath=\"/hello\"\n"
"cd getting-started\n"
msgstr ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=getting-started \\\n"
"    -DclassName=\"org.acme.getting.started.GreetingResource\" \\\n"
"    -Dpath=\"/hello\"\n"
"cd getting-started\n"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:89
msgid "For Windows users"
msgstr "Windowsユーザーの場合"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:91
msgid "If using cmd , (don't use backward slash `\\`)"
msgstr "cmdを使っている場合(バックスラッシュは使わないでください。)"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:95
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create -DprojectGroupId=org.acme -DprojectArtifactId=getting-started -DclassName=\"org.acme.getting.started.GreetingResource\" -Dpath=\"/hello\"\n"
msgstr "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create -DprojectGroupId=org.acme -DprojectArtifactId=getting-started -DclassName=\"org.acme.getting.started.GreetingResource\" -Dpath=\"/hello\"\n"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:98
msgid "If using Powershell , wrap `-D` parameters in double quotes"
msgstr "Powershell を使用する場合は、`-D` パラメータを二重引用符で囲んでください。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:102
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \"-DprojectGroupId=org.acme\" \"-DprojectArtifactId=getting-started\" \"-DclassName=org.acme.getting.started.GreetingResource\" \"-Dpath=/hello\"\n"
msgstr "mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \"-DprojectGroupId=org.acme\" \"-DprojectArtifactId=getting-started\" \"-DclassName=org.acme.getting.started.GreetingResource\" \"-Dpath=/hello\"\n"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:105
msgid "It generates the following in `./getting-started`:"
msgstr "以下のように `./getting-started` に生成されます："

#. type: Plain text
#: upstream/_guides/getting-started.adoc:107
msgid "the Maven structure"
msgstr "Mavenの構造"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:108
msgid "an `org.acme.getting.started.GreetingResource` resource exposed on `/hello`"
msgstr ""
"`org.acme.getting.start.GreetingResource` リソースは、`/hello` で公開されます。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:109
msgid "an associated unit test"
msgstr "関連するユニットテスト"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:110
msgid ""
"a landing page that is accessible on `http://localhost:8080` after starting the "
"application"
msgstr ""
"アプリケーションの起動後に `http://localhost:8080` でアクセスできるランディング"
"ページ"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:111
msgid ""
"example `Dockerfile` files for both `native` and `jvm` modes in `src/main/docker`"
msgstr ""
"`src/main/docker` にある `native` と `jvm` の両方のモード用の `Dockerfile` ファイ"
"ルの例"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:112
msgid "the application configuration file"
msgstr "アプリケーション設定ファイル"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:116
msgid ""
"Once generated, look at the `pom.xml`.  You will find the import of the Quarkus "
"BOM, allowing you to omit the version on the different Quarkus dependencies.  In "
"addition, you can see the `quarkus-maven-plugin` responsible of the packaging of "
"the application and also providing the development mode."
msgstr ""
"生成されたら、`pom.xml` を確認してください。 QuarkusのBOMのインポートが存在するこ"
"とが分かります。これにより、異なるQuarkusの依存関係のバージョンを省略することがで"
"きます。さらに、アプリケーションのパッケージングと開発モードの提供を担当する "
"`quarkus-maven-plugin` が存在することが分かります。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:130
#, no-wrap
msgid ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
msgstr ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:147
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""
"<build>\n"
"    <plugins>\n"
"        <plugin>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus.version}</version>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:150
msgid ""
"If we focus on the dependencies section, you can see the extension allowing the "
"development of REST applications:"
msgstr ""
"依存関係の部分に注目すると、RESTアプリケーションの開発を可能にするエクステンション"
"を見ることができます。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:157
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/getting-started.adoc:159
#, no-wrap
msgid "The JAX-RS resources"
msgstr "JAX-RSリソース"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:162
msgid ""
"During the project creation, the `src/main/java/org/acme/getting/started/"
"GreetingResource.java` file has been created with the following content:"
msgstr ""
"プロジェクト作成時には、 `src/main/java/org/acme/getting/started/GreetingResource."
"java` ファイルが以下の内容で作成されています。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:166
#: upstream/_guides/getting-started.adoc:251
#: upstream/_guides/getting-started.adoc:269
#: upstream/_guides/getting-started.adoc:369
#, no-wrap
msgid "package org.acme.getting.started;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:171
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:174
#: upstream/_guides/getting-started.adoc:280
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:181
#: upstream/_guides/getting-started.adoc:297
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:184
msgid ""
"It's a very simple REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr ""
"これは非常にシンプルなRESTエンドポイントで、\"/hello\"上のリクエストに\"hello\"を"
"返します。"

#. type: Block title
#: upstream/_guides/getting-started.adoc:186
#, no-wrap
msgid "Differences with vanilla JAX-RS"
msgstr "バニラJAX-RSとの違い"

#. type: delimited block =
#: upstream/_guides/getting-started.adoc:190
msgid ""
"With Quarkus, there is no need to create an `Application` class. It's supported, "
"but not required. In addition, only one instance of the resource is created and "
"not one per request. You can configure this using the different `*Scoped` "
"annotations (`ApplicationScoped`, `RequestScoped`, etc)."
msgstr ""
"Quarkusでは、`Application` クラスを作成する必要がありません。作成することはサポー"
"トされていますが、必須ではありません。加えて、リソースは一つのみが作成され、リクエ"
"スト毎に一つではありません。これは、異なる `*Scoped` アノテーション"
"（ `ApplicationScoped`、`RequestScoped` 、等々）を使用することで設定可能です。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:192
#, no-wrap
msgid "Running the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:196
msgid "Now we are ready to run our application.  Use: `./mvnw compile quarkus:dev`:"
msgstr ""
"これでアプリケーションを実行する準備が整いました。 `./mvnw compile quarkus:dev` を"
"実行してみて下さい。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:218
#, no-wrap
msgid ""
"$ ./mvnw compile quarkus:dev\n"
"[INFO] --------------------< org.acme:getting-started >---------------------\n"
"[INFO] Building getting-started 1.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO]\n"
"[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ getting-started ---\n"
"[INFO] Using 'UTF-8' encoding to copy filtered resources.\n"
"[INFO] skip non existing resourceDirectory /Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started/src/main/resources\n"
"[INFO]\n"
"[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ getting-started ---\n"
"[INFO] Changes detected - recompiling the module!\n"
"[INFO] Compiling 2 source files to /Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started/target/classes\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:<version>:dev (default-cli) @ getting-started ---\n"
"Listening for transport dt_socket at address: 5005\n"
"2019-02-28 17:05:22,347 INFO  [io.qua.dep.QuarkusAugmentor] (main) Beginning quarkus augmentation\n"
"2019-02-28 17:05:22,635 INFO  [io.qua.dep.QuarkusAugmentor] (main) Quarkus augmentation completed in 288ms\n"
"2019-02-28 17:05:22,770 INFO  [io.quarkus] (main) Quarkus started in 0.668s. Listening on: http://localhost:8080\n"
"2019-02-28 17:05:22,771 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:221
msgid "Once started, you can request the provided endpoint:"
msgstr "起動したら、提供されたエンドポイントにリクエストすることができます。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:226
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello\n"
"hello\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:229
msgid ""
"Hit `CTRL+C` to stop the application, or keep it running and enjoy the blazing "
"fast hot-reload."
msgstr ""
"`CTRL+C` を押してアプリケーションを停止したり、アプリケーションを起動したままにし"
"て、高速なホットリロードを楽しむことができます。"

#. type: Block title
#: upstream/_guides/getting-started.adoc:231
#, no-wrap
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr "`curl -w \"\\n\"` で自動的に改行を追加します。"

#. type: delimited block =
#: upstream/_guides/getting-started.adoc:234
msgid ""
"We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a "
"'%' or put both result and next command prompt on the same line."
msgstr ""
"例では、 `curl -w \"\\n\"` を使用して、結果と次のコマンドプロンプトが同じ行に表示"
"されるのを防止しています。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:236
#, no-wrap
msgid "Using injection"
msgstr "インジェクションの使用"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:240
msgid ""
"Dependency injection in Quarkus is based on ArC which is a CDI-based dependency "
"injection solution tailored for Quarkus' architecture.  If you're new to CDI then "
"we recommend you to read the link:cdi[Introduction to CDI] guide."
msgstr ""
"Quarkusの依存性注入は、Quarkusのアーキテクチャに合わせて調整されたCDIベースの依存"
"性注入ソリューションであるArCをベースにしています。 CDIが初めての方は、 link:"
"cdi[CDI入門] ガイドをお読みになることをお勧めします。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:242
msgid ""
"Quarkus only implements a subset of the CDI features and comes with non-standard "
"features and specific APIS, you can learn more about it in the link:cdi-"
"reference[Contexts and Dependency Injection guide]."
msgstr ""
"QuarkusはCDI機能のサブセットのみを実装しており、非標準の機能や特定のAPIが付属して"
"いますが、それについてはlink:cdi-reference[Contexts and Dependency Injection ガイ"
"ド]で詳しく知ることができます。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:244
msgid ""
"ArC comes as a dependency of `quarkus-resteasy` so you already have it handy."
msgstr ""
"ArCは `quarkus-resteasy` の依存関係として提供されているので、すでに追加済です。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:247
msgid ""
"Let's modify the application and add a companion bean.  Create the `src/main/java/"
"org/acme/getting/started/GreetingService.java` file with the following content:"
msgstr ""
"アプリケーションを変更してコンパニオンBeanを追加してみましょう。 以下の内容で "
"`src/main/java/org/acme/getting/started/GreetingService.java` ファイルを作成してく"
"ださい："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:253
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:256
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:260
#, no-wrap
msgid ""
"    public String greeting(String name) {\n"
"        return \"hello \" + name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:262
#: upstream/_guides/getting-started.adoc:402
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:265
msgid ""
"Edit the `GreetingResource` class to inject the `GreetingService` and create a "
"new endpoint using it:"
msgstr ""
"`GreetingResource` クラスを編集して `GreetingService` を注入し、それを使って新しい"
"エンドポイントを作成してください："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:275
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:277
#, no-wrap
msgid "import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:283
#, no-wrap
msgid ""
"    @Inject\n"
"    GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:290
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    @Path(\"/greeting/{name}\")\n"
"    public String greeting(@PathParam String name) {\n"
"        return service.greeting(name);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:301
msgid ""
"If you stopped the application, restart the application with `./mvnw compile "
"quarkus:dev`.  Then check that the endpoint returns `hello quarkus` as expected:"
msgstr ""
"アプリケーションを停止した場合は、`./mvnw compile quarkus:dev` でアプリケーション"
"を再起動してください。 そして、エンドポイントが `hello quarkus` を期待通りに返却す"
"ることをチェックして下さい。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:306
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello/greeting/quarkus\n"
"hello quarkus\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/getting-started.adoc:310
#, no-wrap
msgid "Development Mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:318
msgid ""
"`quarkus:dev` runs Quarkus in development mode. This enables hot deployment with "
"background compilation, which means that when you modify your Java files and/or "
"your resource files and refresh your browser, these changes will automatically "
"take effect.  This works too for resource files like the configuration property "
"file.  Refreshing the browser triggers a scan of the workspace, and if any "
"changes are detected, the Java files are recompiled and the application is "
"redeployed; your request is then serviced by the redeployed application. If there "
"are any issues with compilation or deployment an error page will let you know."
msgstr ""
"`quarkus:dev` は、開発モードでQuarkusを実行します。これにより、Javaファイルやリ"
"ソースファイルを変更してブラウザを更新すると、これらの変更が自動的に反映されま"
"す。 これは、設定プロパティファイルなどのリソースファイルに対しても機能します。 ブ"
"ラウザをリフレッシュすると、ワークスペースのスキャンがトリガーされ、変更が検出され"
"た場合、Java ファイルが再コンパイルされ、アプリケーションが再配置されます。あなた"
"のリクエストは、再配置されたアプリケーションによって処理されます。コンパイルやデプ"
"ロイに問題がある場合は、エラーページでお知らせします。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:321
msgid ""
"This will also listen for a debugger on port `5005`. If you want to wait for the "
"debugger to attach before running you can pass `-Dsuspend` on the command line. "
"If you don't want the debugger at all you can use `-Ddebug=false`."
msgstr ""
"これはポート `5005` のデバッガもリッスンします。デバッガがアタッチされるのを待って"
"から実行したい場合は、コマンドラインで `-Dsuspend` を渡すことができます。デバッガ"
"を全く必要としない場合は `-Ddebug=false` を使うことができます。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:322
#, no-wrap
msgid "Testing"
msgstr "テスト"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:325
msgid ""
"All right, so far so good, but wouldn't it be better with a few tests, just in "
"case."
msgstr "さて、ここまではいいですが、念のためにテストをした方がいいでしょう。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:327
msgid "In the generated `pom.xml` file, you can see 2 test dependencies:"
msgstr ""
"生成された `pom.xml` ファイルでは、2つのテスト依存関係を見ることができます："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:340
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.rest-assured</groupId>\n"
"    <artifactId>rest-assured</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:345
msgid ""
"Quarkus supports https://junit.org/junit5/[Junit 5] tests.  Because of this, the "
"version of the https://maven.apache.org/surefire/maven-surefire-plugin/[Surefire "
"Maven Plugin] must be set, as the default version does not support Junit 5:"
msgstr ""
"Quarkusは https://junit.org/junit5/[Junit 5] テストをサポートしています。 デフォル"
"トのバージョンではJunit 5をサポートしていない為、 https://maven.apache.org/"
"surefire/maven-surefire-plugin/[Surefire Maven Plugin] のバージョンを設定する必要"
"があります："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:358
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <version>${surefire-plugin.version}</version>\n"
"    <configuration>\n"
"       <systemPropertyVariables>\n"
"          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"          <maven.home>${maven.home}</maven.home>\n"
"       </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:362
msgid ""
"We also set the `java.util.logging` system property to make sure tests will use "
"the correct logmanager and `maven.home` to ensure that custom configuration from `"
"${maven.home}/conf/settings.xml` is applied (if any)."
msgstr ""
"また、 `java.util.logging` システムプロパティを設定して、テストが正しいログマネー"
"ジャを使用することを確認し、 `maven.home` からカスタム設定が適用されることを確認し"
"ます(適用されている場合)。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:365
msgid ""
"The generated project contains a simple test.  Edit the `src/test/java/org/acme/"
"getting/started/GreetingResourceTest.java` to match the following content:"
msgstr ""
"生成されたプロジェクトには簡単なテストが含まれています。 `src/test/java/org/acme/"
"getting/started/GreetingResourceTest.java` を以下の内容に合わせて編集してくださ"
"い："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:372
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:374
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:377
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:380
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:389
#, no-wrap
msgid ""
"    @Test    // <1>\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/hello\")\n"
"          .then()\n"
"             .statusCode(200)    // <2>\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:400
#, no-wrap
msgid ""
"    @Test\n"
"    public void testGreetingEndpoint() {\n"
"        String uuid = UUID.randomUUID().toString();\n"
"        given()\n"
"          .pathParam(\"name\", uuid)\n"
"          .when().get(\"/hello/greeting/{name}\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(is(\"hello \" + uuid));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:404
msgid ""
"By using the `QuarkusTest` runner, you instruct JUnit to start the application "
"before the tests."
msgstr ""
"`QuarkusTest` ランナーを使うことで、テストの前にアプリケーションを起動するように "
"JUnit に指示します。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:405
msgid "Check the HTTP response status code and content"
msgstr "HTTPレスポンスのステータスコードと内容を確認してください"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:407
msgid ""
"These tests use http://rest-assured.io/[RestAssured], but feel free to use your "
"favorite library."
msgstr ""
"これらのテストでは http://rest-assured.io/[RestAssured] を使用していますが、お好き"
"なライブラリをご自由にお使いください。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:409
msgid "You can run these using Maven:"
msgstr "これらはMavenを使って実行することができます。"

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:413
#, no-wrap
msgid "./mvnw test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:416
msgid ""
"You can also run the test from your IDE directly (be sure you stopped the "
"application first)."
msgstr ""
"また、IDEから直接テストを実行することもできます (最初にアプリケーションを停止した"
"ことを確認してください)。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:422
msgid ""
"By default, tests will run on port `8081` so as not to conflict with the running "
"application. We automatically configure RestAssured to use this port. If you want "
"to use a different client you should use the `@TestHTTPResource` annotation to "
"directly inject the URL of the tested application into a field on the test class. "
"This field can be of the type `String`, `URL` or `URI`. This annotation can also "
"be given a value for the test path. For example, if I want to test a Servlet "
"mapped to `/myservlet` I would just add the following to my test:"
msgstr ""
"デフォルトでは、実行中のアプリケーションと競合しないように、テストはポート `8081` "
"で実行されます。 RestAssured はこのポートを使用するように自動的にを設定されます。"
"別のクライアントを使用したい場合は、`@TestHTTPResource` アノテーションを使用して、"
"テストされたアプリケーションの URL をテストクラスのフィールドに直接注入する必要が"
"あります。このフィールドは `String`, `URL`, `URI` のいずれかの型になります。このア"
"ノテーションにはテストパスの値を指定することもできます。例えば、`/myservlet` に"
"マップされたサーブレットをテストしたい場合、次のようにテストに追加します："

#. type: delimited block -
#: upstream/_guides/getting-started.adoc:428
#, no-wrap
msgid ""
"@TestHTTPResource(\"/myservlet\")\n"
"URL testUrl;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/getting-started.adoc:432
msgid ""
"The test port can be controlled via the `quarkus.http.test-port` config property. "
"Quarkus also creates a system property called `test.url` that is set to the base "
"test URL for situations where you cannot use injection."
msgstr ""
"テストポートは、`quarkus.http.test-port` 設定プロパティで制御できます。Quarkusはま"
"た、インジェクションを使用できない場合のためにベースとなるテストURLに設定される "
"`test.url` というシステムプロパティを作成します。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:433
#, no-wrap
msgid "Working with multi-module project or external modules"
msgstr "マルチモジュールプロジェクトや外部モジュールとの連携"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:437
msgid ""
"Quarkus heavily utilizes https://github.com/wildfly/jandex[Jandex] at build time, "
"to discover various classes or annotations. One immediately recognizable "
"application of this, is CDI bean discovery.  As a result, most of the Quarkus "
"extensions will not work properly if this build time discovery isn't properly "
"setup."
msgstr ""
"Quarkusはビルド時に https://github.com/wildfly/jandex[Jandex] を多用して、様々なク"
"ラスやアノテーションを発見しています。これをすぐに認識できるアプリケーションの1つ"
"は、CDI Beanのディスカバリです。 その結果、このビルド時のディスカバリが適切に設定"
"されていないと、Quarkusのエクステンションのほとんどが正しく動作しません。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:439
msgid ""
"This index is created by default on the project on which Quarkus is configured "
"for, thanks to our Maven and Gradle plugins."
msgstr ""
"このインデックスは、MavenとGradleプラグインのおかげで、Quarkusが設定されているプロ"
"ジェクト上にデフォルトで作成されます。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:442
msgid ""
"However, when working with a multi-module project, be sure to read the `Working "
"with multi-module projects` section of the link:maven-tooling#multi-module-"
"maven[Maven] or link:gradle-tooling#multi-module-maven[Gradle] guides."
msgstr ""
"しかし、マルチモジュールプロジェクトで作業する場合は、 link:maven-toolsing#multi-"
"module-maven[Maven]または link:gradle-toolsing#multi-module-maven[Gradle]ガイドの "
"`マルチモジュールプロジェクトでの作業` のセクションを必ず読んでください。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:446
msgid ""
"If you plan to use external modules (for example, an external library for all "
"your domain objects), you will need to make these modules known to the indexing "
"process either by adding the Jandex plugin (if you can modify them)  or via the "
"`quarkus.index-dependency` property inside your `application.properties` (useful "
"in cases where you can't modify the module)."
msgstr ""
"外部モジュール(例えば、すべてのドメインオブジェクトのための外部ライブラリ)を使用す"
"る予定がある場合、Jandexプラグインを追加するか(変更できる場合)、 `application."
"properties` 内の `quarkus.index-dependency` プロパティを使って(モジュールを変更で"
"きない場合に便利です)、これらのモジュールをインデックス作成プロセスに知らせておく"
"必要があります。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:448
msgid ""
"Be sure to read the link:cdi-reference#bean_discovery[Bean Discovery] section of "
"the CDI guide for more information."
msgstr ""
"詳細については、CDIガイドのlink:cdi-reference#bean_discovery[Bean Discovery]セク"
"ションを必ずお読みください。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:449
#, no-wrap
msgid "Packaging and run the application"
msgstr "パッケージングとアプリケーションの実行"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:453
msgid ""
"The application is packaged using `./mvnw package`.  It produces 2 jar files in `/"
"target`:"
msgstr ""
"アプリケーションは `./mvnw package` を使ってパッケージ化されています。 これは `/"
"target` に 2 つの jar ファイルを生成する。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:456
msgid ""
"`getting-started-1.0-SNAPSHOT.jar` - containing just the classes and resources of "
"the projects, it's the regular artifact produced by the Maven build;"
msgstr ""
"`getting-started-1.0-SNAPSHOT.jar` - プロジェクトのクラスとリソースだけを含み、"
"Mavenビルドで生成される通常の成果物です。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:458
msgid ""
"`getting-started-1.0-SNAPSHOT-runner.jar` - being an executable _jar_. Be aware "
"that it's not an _über-jar_ as the dependencies are copied into the `target/lib` "
"directory."
msgstr ""
"`getting-started-1.0-SNAPSHOT-runner.jar` - 実行可能な _jar_ です。依存関係は "
"`target/lib` ディレクトリにコピーされるので、 _über-jar_ ではないことに注意してく"
"ださい。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:460
msgid ""
"You can run the application using: `java -jar target/getting-started-1.0-SNAPSHOT-"
"runner.jar`"
msgstr ""
"アプリケーションを実行するには、以下のようにします： `java -jar target/getting-"
"started-1.0-SNAPSHOT-runner.jar`"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:463
msgid ""
"The `Class-Path` entry of the `MANIFEST.MF` from the _runner jar_ explicitly "
"lists the jars from the `lib` directory.  So if you want to deploy your "
"application somewhere, you need to copy the _runner_ jar as well as the _lib_ "
"directory."
msgstr ""
"MANIFEST.MF の `Class-Path` エントリには、 _runner jar_ の `lib` ディレクトリの "
"jar が明示的にリストアップされています。 ですから、アプリケーションをどこかにデプ"
"ロイしたい場合は、 _runner_ jar も _lib_ ディレクトリと同様にコピーする必要があり"
"ます。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:465
msgid ""
"Before running the application, don't forget to stop the hot reload mode (hit "
"`CTRL+C`), or you will have a port conflict."
msgstr ""
"アプリケーションを実行する前に、ホットリロードモードを停止することを忘れないでくだ"
"さい (`CTRL+C` を押してください)。停止しない場合、ポートが衝突します。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:467
#, no-wrap
msgid "Configuring the banner"
msgstr "バナーの設定"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:472
msgid ""
"By default when a Quarkus application starts (in regular or dev mode), it will "
"display an ASCII art banner. The banner can be disabled by setting `quarkus."
"banner.enabled=false` in `application.properties`, by setting the `-Dquarkus."
"banner.enabled=false` Java System Property, or by setting the "
"`QUARKUS_BANNER_ENABLED` environment variable to `false`.  Furthermore, users can "
"supply a custom banner by placing the banner file in `src/main/resources` and "
"configuring `quarkus.banner.path=name-of-file` in `application.properties`."
msgstr ""
"デフォルトでは、Quarkusアプリケーションが起動すると（通常モードまたは開発モード"
"で）、ASCIIアートバナーが表示されます。バナーを無効にするには、 `application."
"properties` で `quarkus.banner.enabled=false` を設定するか、 `Dquarkus.banner."
"enabled=false` のJavaシステムプロパティを設定するか、 `QUARKUS_BANNER_ENABLED` 環"
"境変数を `false` に設定します。 さらに、 `src/main/resources` にバナーファイルを配"
"置し、 `application.properties` に `quarkus.banner.path=nam-of-file` を設定するこ"
"とで、ユーザはカスタムのバナーを提供することができます。"

#. type: Title ==
#: upstream/_guides/getting-started.adoc:473
#, no-wrap
msgid "What's next?"
msgstr "次のステップ"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:479
msgid ""
"This guide covered the creation of an application using Quarkus.  However, there "
"is much more.  We recommend continuing the journey with the link:building-native-"
"image[building a native executable guide], where you learn about creating a "
"native executable and packaging it in a container.  If you are interested in "
"reactive, we recommend the link:getting-started-reactive[Getting started with "
"reactive guide], where you can see how to implement reactive applications with "
"Quarkus."
msgstr ""
"このガイドでは、Quarkusを使用したアプリケーションの作成について説明しました。 しか"
"し、まだまだ多くのことがあります。 link:built-native-image[ネイティブ実行可能ファ"
"イルのビルド]では、ネイティブ実行ファイルの作成とコンテナへのパッケージングについ"
"て学びます。 リアクティブに興味がある場合は、link:get-started-reactive[リアクティ"
"ブ入門ガイド]をお勧めします。"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:481
msgid "In addition, the link:tooling[tooling guide] document explains how to:"
msgstr ""
"また、link:tooling[ツールガイド]のドキュメントでは、その方法を説明しています："

#. type: Plain text
#: upstream/_guides/getting-started.adoc:483
msgid "scaffold a project in a single command line"
msgstr "単一のコマンドでプロジェクトをスキャフォールド（骨組生成）する"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:484
msgid "enable the _development mode_ (hot reload)"
msgstr "_development mode_ (ホットリロード)を有効にする"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:485
msgid "import the project in your favorite IDE"
msgstr "お気に入りのIDEでプロジェクトをインポートする"

#. type: Plain text
#: upstream/_guides/getting-started.adoc:485
msgid "and more"
msgstr "等々"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid   ""
msgstr  "Project-Id-Version: PACKAGE VERSION\n"
        "POT-Creation-Date: 2021-02-04 15:41+0000\n"
        "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
        "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
        "Language-Team: LANGUAGE <LL@li.org>\n"
        "Language: \n"
        "MIME-Version: 1.0\n"
        "Content-Type: text/plain; charset=UTF-8\n"
        "Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/logging.adoc:6
#, no-wrap
msgid   "Quarkus - Configuring Logging"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:11
msgid   "This guide explains logging and how to configure it."
msgstr  "このガイドでは、ロギングとその設定方法について説明します。"

#. type: Plain text
#: upstream/_guides/logging.adoc:15
msgid   "Internally, Quarkus uses JBoss Log Manager and the JBoss Logging facade. + You can use the JBoss Logging facade inside your code as it's already provided, or any of the supported Logging API listed in the next chapter as Quarkus will send them to JBoss Log Manager."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:17
msgid   "All the logging configuration will then be done inside your `application.properties`."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:18
#, no-wrap
msgid   "Supported Logging APIs"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:21
msgid   "Applications and components may use any of the following APIs for logging, and the logs will be merged:"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:23
msgid   "JDK `java.util.logging` (also called JUL)"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:24
msgid   "https://github.com/jboss-logging/jboss-logging[JBoss Logging]"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:25
msgid   "https://www.slf4j.org/[SLF4J]"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:26
msgid   "https://commons.apache.org/proper/commons-logging/[Apache Commons Logging]"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:28
msgid   "Internally Quarkus uses JBoss Logging; you can also use it inside your application so that no other dependencies should be added for your logs."
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:32 upstream/_guides/logging.adoc:59
#, no-wrap
msgid   "import org.jboss.logging.Logger;\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:37
#, no-wrap
msgid   "import javax.ws.rs.GET;\n"
        "import javax.ws.rs.Path;\n"
        "import javax.ws.rs.Produces;\n"
        "import javax.ws.rs.core.MediaType;\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:40
#, no-wrap
msgid   "@Path(\"/hello\")\n"
        "public class ExampleResource {\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:42
#, no-wrap
msgid   "    private static final Logger LOG = Logger.getLogger(ExampleResource.class);\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:50
#, no-wrap
msgid   "    @GET\n"
        "    @Produces(MediaType.TEXT_PLAIN)\n"
        "    public String hello() {\n"
        "        LOG.info(\"Hello\");\n"
        "        return \"hello\";\n"
        "    }\n"
        "}\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:53
msgid   "If you use JBoss Logging but one of your libraries uses a different logging API, you may need to configure a link:#logging-adapters[Logging Adapter]."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:55
msgid   "You can also inject a configured `org.jboss.logging.Logger` instance in your beans and resource classes."
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:62
#, no-wrap
msgid   "@ApplicationScoped\n"
        "class SimpleBean {\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:65
#, no-wrap
msgid   "   @Inject\n"
        "   Logger log; <1>\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:68
#, no-wrap
msgid   "   @LoggerName(\"foo\")\n"
        "   Logger fooLog; <2>\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:74
#, no-wrap
msgid   "   public void ping() {\n"
        "     log.info(\"Simple!\");\n"
        "     fooLog.info(\"Goes to _foo_ logger!\");\n"
        "   }\n"
        "}\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:76
msgid   "The FQCN of the declaring class is used as a logger name, i.e. `org.jboss.logging.Logger.getLogger(SimpleBean.class)` will be used."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:77
msgid   "In this case, the name _foo_ is used as a logger name, i.e. `org.jboss.logging.Logger.getLogger(\"foo\")` will be used."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:79
msgid   "The logger instances are cached internally. Therefore, a logger injected e.g. into a `@RequestScoped` bean is shared for all bean instances to avoid possible performance penalty associated with logger instantiation."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:80
#, no-wrap
msgid   "What about Apache Log4j ?"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:84
msgid   "link:https://logging.apache.org/log4j/2.x/[Log4j] is a logging implementation: it contains a logging backend and a logging facade.  Quarkus uses the JBoss Log Manager backend, so you will need to include the `log4j2-jboss-logmanager` library to route Log4j logs to JBoss Log Manager."
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:91
#, no-wrap
msgid   "    <dependency>\n"
        "      <groupId>org.jboss.logmanager</groupId>\n"
        "      <artifactId>log4j2-jboss-logmanager</artifactId> <1>\n"
        "    </dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:94
msgid   "This is the library needed for Log2J version 2; if you use the legacy Log4J version 1 you need to use `log4j-jboss-logmanager` instead."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:96
msgid   "You can then use the Log4J API inside your application."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:98
msgid   "Do not include any Log4j dependencies. The `log4j2-jboss-logmanager` library includes what's needed to use Log4j as a logging facade."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:99
#, no-wrap
msgid   "Logging levels"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:102
msgid   "These are the log levels used by Quarkus:"
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:104
#, no-wrap
msgid   "OFF"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:105
msgid   "Special level to turn off logging."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:105
#, no-wrap
msgid   "FATAL"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:106
msgid   "A critical service failure/complete inability to service requests of any kind."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:106
#, no-wrap
msgid   "ERROR"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:107
msgid   "A significant disruption in a request or the inability to service a request."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:107
#, no-wrap
msgid   "WARN"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:108
msgid   "A non-critical service error or problem that may not require immediate correction."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:108
#, no-wrap
msgid   "INFO"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:109
msgid   "Service lifecycle events or important related very-low-frequency information."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:109
#, no-wrap
msgid   "DEBUG"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:110
msgid   "Messages that convey extra information regarding lifecycle or non-request-bound events which may be helpful for debugging."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:110
#, no-wrap
msgid   "TRACE"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:111
msgid   "Messages that convey extra per-request debugging information that may be very high frequency."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:111
#, no-wrap
msgid   "ALL"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:112
msgid   "Special level for all messages including custom levels."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:114
msgid   "In addition, the following levels may be configured for applications and libraries using link:https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html[`java.util.logging`]:"
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:116
#, no-wrap
msgid   "SEVERE"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:117
msgid   "Same as **ERROR**."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:117
#, no-wrap
msgid   "WARNING"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:118
msgid   "Same as **WARN**."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:118
#, no-wrap
msgid   "CONFIG"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:119
msgid   "Service configuration information."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:119
#, no-wrap
msgid   "FINE"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:120
msgid   "Same as **DEBUG**."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:120
#, no-wrap
msgid   "FINER"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:121
msgid   "Same as **TRACE**."
msgstr  ""

#. type: Labeled list
#: upstream/_guides/logging.adoc:121
#, no-wrap
msgid   "FINEST"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:122
msgid   "Event more debugging information than `TRACE`, maybe with even higher frequency."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:123
#, no-wrap
msgid   "Runtime configuration"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:127
msgid   "Run time logging is configured in the `application.properties` file, for example, to set the default log level to `INFO` logging and include Hibernate `DEBUG` logs:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:133
#, no-wrap
msgid   "quarkus.log.level=INFO\n"
        "quarkus.log.category.\"org.hibernate\".min-level=DEBUG\n"
        "quarkus.log.category.\"org.hibernate\".level=DEBUG\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:138
msgid   "Setting a log level below `INFO` requires the minimum log level to be adjusted, either globally via the `quarkus.log.min-level` property or per-category as shown in the example above, as well as adjusting the log level itself."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:143
msgid   "Minimum logging level sets a floor level that Quarkus will be needed to potentially generate, opening the door to optimization opportunities.  As an example, in native execution the minimum level enables lower level checks (e.g. `isTraceEnabled`) to be folded to `false`, resulting in dead code elimination for code that will never to be executed."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:145
msgid   "All possible properties are listed in <<loggingConfigurationReference, the logging configuration reference>>."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:148
msgid   "If you are adding these properties via command line make sure `\"` is escaped.  For example `-Dquarkus.log.category.\\\"org.hibernate\\\".level=DEBUG`."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:149
#, no-wrap
msgid   "Logging categories"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:156
msgid   "Logging is done on a per-category basis.  Each category can be independently configured.  A configuration which applies to a category will also apply to all sub-categories of that category, unless there is a more specific matching sub-category configuration.  For every category the same settings that are configured on ( console / file / syslog ) apply.  These can also be overridden by attaching a one or more named handlers to a category. See example in <<category-named-handlers-example>>"
msgstr  ""

#. type: Table
#: upstream/_guides/logging.adoc:164
#, no-wrap
msgid   "|Property Name|Default|Description\n"
        "|quarkus.log.category.\"<category-name>\".level|INFO footnote:[Some extensions may define customized default log levels for certain categories, in order to reduce log noise by default.  Setting the log level in configuration will override any extension-defined log levels.]|The level to use to configure the category named `<category-name>`.  The quotes are necessary.\n"
        "|quarkus.log.category.\"<category-name>\".min-level|INFO |The minimum logging level to use to configure the category named `<category-name>`.  The quotes are necessary.\n"
        "|quarkus.log.category.\"<category-name>\".use-parent-handlers|true|Specify whether or not this logger should send its output to its parent logger.\n"
        "|quarkus.log.category.\"<category-name>\".handlers=[<handler>]|empty footnote:[By default the configured category gets the same handlers attached as the one on the root logger.]|The names of the handlers that you want to attach to a specific category.\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:168
msgid   "The quotes shown in the property name are required as categories normally contain '.' which must be escaped. An example is shown in <<category-example>>."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:169
#, no-wrap
msgid   "Root logger configuration"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:172
msgid   "The root logger category is handled separately, and is configured via the following properties:"
msgstr  ""

#. type: Table
#: upstream/_guides/logging.adoc:178
#, no-wrap
msgid   "|Property Name|Default|Description\n"
        "|quarkus.log.level|INFO|The default log level for every log category.\n"
        "|quarkus.log.min-level|INFO|The default minimum log level for every log category.\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:181
msgid   "If no level configuration exists for a given logger category, the enclosing (parent) category is examined. If no categories are configured which enclose the category in question, then the root logger configuration is used."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:182
#, no-wrap
msgid   "Logging Format"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:185
msgid   "By default, Quarkus uses a pattern-based logging formatter that generates human-readable text logs."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:188
msgid   "You can configure the format for each log handler via a dedicated property.  For the console handler, the property is `quarkus.log.console.format`."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:190
msgid   "The logging format string supports the following symbols:"
msgstr  ""

#. type: Table
#: upstream/_guides/logging.adoc:219
#, no-wrap
msgid   "|Symbol|Summary|Description\n"
        "\n"
        "|%%|`%`|Renders a simple `%` character.\n"
        "|%c|Category|Renders the category name.\n"
        "|%C|Source class|Renders the source class name.footnote:calc[Format sequences which examine caller information may affect performance]\n"
        "|%d{xxx}|Date|Renders a date with the given date format string, which uses the syntax defined by `java.text.SimpleDateFormat`.\n"
        "|%e|Exception|Renders the thrown exception, if any.\n"
        "|%F|Source file|Renders the source file name.footnote:calc[]\n"
        "|%h|Host name|Renders the system simple host name.\n"
        "|%H|Qualified host name|Renders the system's fully qualified host name, which may be the same as the simple host name, depending on OS configuration.\n"
        "|%i|Process ID|Render the current process PID.\n"
        "|%l|Source location|Renders the source location information, which includes source file name, line number, class name, and method name.footnote:calc[]\n"
        "|%L|Source line|Renders the source line number.footnote:calc[]\n"
        "|%m|Full Message|Renders the log message plus exception (if any).\n"
        "|%M|Source method|Renders the source method name.footnote:calc[]\n"
        "|%n|Newline|Renders the platform-specific line separator string.\n"
        "|%N|Process name|Render the name of the current process.\n"
        "|%p|Level|Render the log level of the message.\n"
        "|%r|Relative time|Render the time in milliseconds since the start of the application log.\n"
        "|%s|Simple message|Renders just the log message, with no exception trace.\n"
        "|%t|Thread name|Render the thread name.\n"
        "|%t{id}|Thread ID|Render the thread ID.\n"
        "|%z{<zone name>}|Time zone|Set the time zone of the output to `<zone name>`.\n"
        "|%X{<MDC property name>}|Mapped Diagnostics Context Value|Renders the value from Mapped Diagnostics Context\n"
        "|%X|Mapped Diagnostics Context Values|Renders all the values from Mapped Diagnostics Context in format {property.key=property.value}\n"
        "|%x|Nested Diagnostics context values|Renders all the values from Nested Diagnostics Context in format {value1.value2}\n"
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:222
#, no-wrap
msgid   "Alternative Console Logging Formats"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:227
msgid   "It is possible to change the output format of the console log. This can be useful in environments where the output of the Quarkus application is captured by a service which can, for example, process and store the log information for later analysis."
msgstr  ""

#. type: Title ====
#: upstream/_guides/logging.adoc:229
#, no-wrap
msgid   "JSON Logging Format"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:233
msgid   "In order to configure the JSON logging format, the `quarkus-logging-json` extension may be employed.  Add this extension to your application POM as the following snippet illustrates."
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:234
#, no-wrap
msgid   "Modifications to POM file to add the JSON logging extension"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:244
#, no-wrap
msgid   "  <dependencies>\n"
        "    <!-- ... your other dependencies are here ... -->\n"
        "    <dependency>\n"
        "      <groupId>io.quarkus</groupId>\n"
        "      <artifactId>quarkus-logging-json</artifactId>\n"
        "    </dependency>\n"
        "  </dependencies>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:249
msgid   "The presence of this extension will, by default, replace the output format configuration from the console configuration.  This means that the format string and the color settings (if any) will be ignored.  The other console configuration items (including those controlling asynchronous logging and the log level) will continue to be applied."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:251
msgid   "For some, it will make sense to use logging that is humanly readable (unstructured) in dev mode and JSON logging (structured) in production mode. This can be achieved using different profiles, as shown in the following configuration."
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:252
#, no-wrap
msgid   "Disable JSON logging in application.properties for dev and test mode"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:257
#, no-wrap
msgid   "%dev.quarkus.log.console.json=false\n"
        "%test.quarkus.log.console.json=false\n"
msgstr  ""

#. type: Title =====
#: upstream/_guides/logging.adoc:259
#, no-wrap
msgid   "Configuration"
msgstr  "設定"

#. type: Plain text
#: upstream/_guides/logging.adoc:262
msgid   "The JSON logging extension can be configured in various ways.  The following properties are supported:"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:266
msgid   "Enabling pretty printing might cause certain processors and JSON parsers to fail."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:269
msgid   "Printing the details can be expensive as the values are retrieved from the caller. The details include the source class name, source file name, source method name and source line number."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:270
#, no-wrap
msgid   "Log Handlers"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:274
msgid   "A log handler is a logging component responsible for the emission of log events to a recipient.  Quarkus comes with three different log handlers: **console**, **file** and **syslog**."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:275
#, no-wrap
msgid   "Console log handler"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:278
msgid   "The console log handler is enabled by default.  It outputs all log events to the console of your application (typically to the system's `stdout`)."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:280
msgid   "For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.console[the Console Logging configuration reference]."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:281
#, no-wrap
msgid   "File log handler"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:285
msgid   "The file log handler is disabled by default. It outputs all log events to a file on the application's host.  It supports log file rotation."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:287
msgid   "For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.file[the File Logging configuration reference]."
msgstr  ""

#. type: Title ===
#: upstream/_guides/logging.adoc:288
#, no-wrap
msgid   "Syslog log handler"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:291
msgid   "link:https://en.wikipedia.org/wiki/Syslog[Syslog] is a protocol for sending log messages on Unix-like systems using a protocol defined by link:https://tools.ietf.org/html/rfc5424[RFC 5424]."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:294
msgid   "The syslog handler sends all log events to a syslog server (by default, the syslog server that is local to the application).  It is disabled by default."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:296
msgid   "For details of its configuration options, see link:#quarkus-log-logging-log-config_quarkus.log.syslog[the Syslog Logging configuration reference]."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:297
#, no-wrap
msgid   "Examples"
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:299
#, no-wrap
msgid   "Console DEBUG Logging except for Quarkus logs (INFO), No color, Shortened Time, Shortened Category Prefixes"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:305
#, no-wrap
msgid   "quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
        "quarkus.log.console.level=DEBUG\n"
        "quarkus.log.console.color=false\n"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:307
#, no-wrap
msgid   "quarkus.log.category.\"io.quarkus\".level=INFO\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:311
msgid   "If you are adding these properties via command line make sure `\"` is escaped.  For example `-Dquarkus.log.category.\\\"io.quarkus\\\".level=DEBUG`."
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:313
#, no-wrap
msgid   "File TRACE Logging Configuration"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:325
#, no-wrap
msgid   "quarkus.log.file.enable=true\n"
        "# Send output to a trace.log file under the /tmp directory\n"
        "quarkus.log.file.path=/tmp/trace.log\n"
        "quarkus.log.file.level=TRACE\n"
        "quarkus.log.file.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
        "# Set 2 categories (io.quarkus.smallrye.jwt, io.undertow.request.security) to TRACE level\n"
        "quarkus.log.min-level=TRACE\n"
        "quarkus.log.category.\"io.quarkus.smallrye.jwt\".level=TRACE\n"
        "quarkus.log.category.\"io.undertow.request.security\".level=TRACE\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:328
msgid   "As we don't change the root logger, console log will only contain `INFO` or higher order logs."
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:330
#, no-wrap
msgid   "Named handlers attached to a category"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:344
#, no-wrap
msgid   "# Send output to the console\n"
        "quarkus.log.file.path=/tmp/trace.log\n"
        "quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n\n"
        "# Configure a named handler that logs to console\n"
        "quarkus.log.handler.console.\"STRUCTURED_LOGGING\".format=%e%n\n"
        "# Configure a named handler that logs to file\n"
        "quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".enable=true\n"
        "quarkus.log.handler.file.\"STRUCTURED_LOGGING_FILE\".format=%e%n\n"
        "# Configure the category and link the two named handlers to it\n"
        "quarkus.log.category.\"io.quarkus.category\".level=INFO\n"
        "quarkus.log.category.\"io.quarkus.category\".handlers=STRUCTURED_LOGGING,STRUCTURED_LOGGING_FILE\n"
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:346
#, no-wrap
msgid   "Centralized Log Management"
msgstr  "集中ログ管理"

#. type: Plain text
#: upstream/_guides/logging.adoc:349
msgid   "If you want to send your logs to a centralized tool like Graylog, Logstash or Fluentd, you can follow the link:centralized-log-management[Centralized log management guide]."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:350
#, no-wrap
msgid   "How to Configure Logging for `@QuarkusTest`"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:354
msgid   "If you want to configure logging for your `@QuarkusTest`, don't forget to set up the `maven-surefire-plugin` accordingly.  In particular, you need to set the appropriate `LogManager` using the `java.util.logging.manager` system property."
msgstr  ""

#. type: Block title
#: upstream/_guides/logging.adoc:355
#, no-wrap
msgid   "Example Configuration"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:373
#, no-wrap
msgid   "<build>\n"
        "  <plugins>\n"
        "    <plugin>\n"
        "      <artifactId>maven-surefire-plugin</artifactId>\n"
        "      <version>${surefire-plugin.version}</version>\n"
        "      <configuration>\n"
        "        <systemPropertyVariables>\n"
        "          <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> <1>\n"
        "          <quarkus.log.level>DEBUG</quarkus.log.level>  <2>\n"
        "          <maven.home>${maven.home}</maven.home>\n"
        "        </systemPropertyVariables>\n"
        "      </configuration>\n"
        "    </plugin>\n"
        "  </plugins>\n"
        "</build>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:375
msgid   "Make sure the `org.jboss.logmanager.LogManager` is used."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:376
msgid   "Enable debug logging for all logging categories."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:378
msgid   "If you are using Gradle, add this to your `build.gradle`:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:384
#, no-wrap
msgid   "test {\n"
        "\tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n"
        "}\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:387
msgid   "See also: <<getting-started-testing.adoc#test-from-ide,Running `@QuarkusTest` from an IDE>>"
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:389
#, no-wrap
msgid   "Logging Adapters"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:392
msgid   "Quarkus relies on the JBoss Logging library for all the logging requirements."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:394
msgid   "If you are using libraries that have dependencies on other logging libraries such as Apache Commons Logging, Log4j or Slf4j, you need to exclude them from the dependencies and use one of the adapters provided by JBoss Logging."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:396
msgid   "This is especially important when building native executables as you could encounter issues similar to the following when compiling the native executable:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:400
#, no-wrap
msgid   "Caused by java.lang.ClassNotFoundException: org.apache.commons.logging.impl.LogFactoryImpl\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:404
msgid   "This is due to the logging implementation not being included in the native executable.  Using the JBoss Logging adapters will solve this problem."
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:406
msgid   "These adapters are available for most of the common Open Source logging components, such as Apache Commons Logging:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:413
#, no-wrap
msgid   "<dependency>\n"
        "    <groupId>org.jboss.logging</groupId>\n"
        "    <artifactId>commons-logging-jboss-logging</artifactId>\n"
        "</dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:416
msgid   "JDK Logging:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:423
#, no-wrap
msgid   "<dependency>\n"
        "    <groupId>org.jboss.logging</groupId>\n"
        "    <artifactId>jboss-logging-jdk</artifactId>\n"
        "</dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:426
msgid   "Log4j:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:433
#, no-wrap
msgid   "<dependency>\n"
        "    <groupId>org.jboss.logmanager</groupId>\n"
        "    <artifactId>log4j-jboss-logmanager</artifactId>\n"
        "</dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:436
msgid   "Log4j2:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:443
#, no-wrap
msgid   "<dependency>\n"
        "    <groupId>org.jboss.logmanager</groupId>\n"
        "    <artifactId>log4j2-jboss-logmanager</artifactId>\n"
        "</dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:446
msgid   "And Slf4j:"
msgstr  ""

#. type: delimited block -
#: upstream/_guides/logging.adoc:453
#, no-wrap
msgid   "<dependency>\n"
        "    <groupId>org.jboss.slf4j</groupId>\n"
        "    <artifactId>slf4j-jboss-logmanager</artifactId>\n"
        "</dependency>\n"
msgstr  ""

#. type: Plain text
#: upstream/_guides/logging.adoc:456
msgid   "This is not needed for libraries that are dependencies of a Quarkus extension as the extension will take care of this for you."
msgstr  ""

#. type: Title ==
#: upstream/_guides/logging.adoc:458
#, no-wrap
msgid   "Logging configuration reference"
msgstr  ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-29 14:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:3
msgid ""
"icon:lock[title=Fixed at build time] Configuration property fixed at build "
"time - All other configuration properties are overridable at runtime"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:13
#, no-wrap
msgid ""
"\n"
"h|[[quarkus-micrometer-export-config-runtime-export-config_configuration]]link:#quarkus-micrometer-export-config-runtime-export-config_configuration[Configuration property]\n"
"\n"
"h|Type\n"
"h|Default\n"
"\n"
"a| [[quarkus-micrometer-export-config-runtime-export-config_quarkus.micrometer.export.azuremonitor-azuremonitor]]`link:#quarkus-micrometer-export-config-runtime-export-config_quarkus.micrometer.export.azuremonitor-azuremonitor[quarkus.micrometer.export.azuremonitor]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:21
msgid ""
"Azure Monitor registry configuration properties.  A property source for "
"configuration of the AzureMonitor MeterRegistry.  Available values:"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:38
msgid ""
"!=== h!Property=Default h!Description !`instrumentation-key` !Define the "
"instrumentation key used to push data to Azure Insights Monitor !=== Other "
"Micrometer configuration attributes can also be specified.  --|`Map<String,"
"String>` | a| [[quarkus-micrometer-export-config-runtime-export-"
"config_quarkus.micrometer.export.datadog-datadog]]`link:#quarkus-micrometer-"
"export-config-runtime-export-config_quarkus.micrometer.export.datadog-"
"datadog[quarkus.micrometer.export.datadog]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:47
msgid ""
"Datadog MeterRegistry configuration properties.  A property source for "
"configuration of the Datadog MeterRegistry to push metrics using the Datadog "
"API, see https://micrometer.io/docs/registry/datadog.  Available values:"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:70
msgid ""
"!=== h!Property=Default h!Description !`apiKey=YOUR_KEY` !Define the key "
"used to push data using the Datadog API !`publish=true` !By default, "
"gathered metrics will be published to Datadog when the MeterRegistry is "
"enabled.  Use this attribute to selectively disable publication of metrics "
"in some environments.  !`step=1m` !The interval at which metrics are sent to "
"Datadog. The default is 1 minute.  !=== Other Micrometer configuration "
"attributes can also be specified.  --|`Map<String,String>` | a| [[quarkus-"
"micrometer-export-config-runtime-export-config_quarkus.micrometer.export.jmx-"
"jmx]]`link:#quarkus-micrometer-export-config-runtime-export-config_quarkus."
"micrometer.export.jmx-jmx[quarkus.micrometer.export.jmx]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:82
msgid ""
"JMX registry configuration properties.  A property source for configuration "
"of the JMX MeterRegistry, see https://micrometer.io/docs/registry/jmx.  --|"
"`Map<String,String>` | a| [[quarkus-micrometer-export-config-runtime-export-"
"config_quarkus.micrometer.export.prometheus-prometheus]]`link:#quarkus-"
"micrometer-export-config-runtime-export-config_quarkus.micrometer.export."
"prometheus-prometheus[quarkus.micrometer.export.prometheus]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:94
msgid ""
"Prometheus registry configuration properties.  A property source for "
"configuration of the Prometheus MeterRegistry, see https://micrometer.io/"
"docs/registry/prometheus.  --|`Map<String,String>` | a| [[quarkus-micrometer-"
"export-config-runtime-export-config_quarkus.micrometer.export.signalfx-"
"signalfx]]`link:#quarkus-micrometer-export-config-runtime-export-"
"config_quarkus.micrometer.export.signalfx-signalfx[quarkus.micrometer.export."
"signalfx]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:103
msgid ""
"SignalFx registry configuration properties.  A property source for "
"configuration of the SignalFx MeterRegistry, see https://micrometer.io/docs/"
"registry/signalFx.  Available values:"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:130
msgid ""
"!=== h!Property=Default h!Description !`access-token=MY_ACCESS_TOKEN` !"
"Define the access token required to push data to SignalFx !"
"`source=identifier` !Unique identifier for the app instance that is "
"publishing metrics to SignalFx.  Defaults to the local host name.  !"
"`uri=https://ingest.signalfx.com` !Define the the URI to ship metrics to. "
"Use this attribute to specify the location of an internal proxy, if "
"necessary.  !`step=1m` !The interval at which metrics are sent to SignalFx "
"Monitoring. The default is 1 minute.  !=== Other Micrometer configuration "
"attributes can also be specified.  --|`Map<String,String>` | a| [[quarkus-"
"micrometer-export-config-runtime-export-config_quarkus.micrometer.export."
"stackdriver-stackdriver]]`link:#quarkus-micrometer-export-config-runtime-"
"export-config_quarkus.micrometer.export.stackdriver-stackdriver[quarkus."
"micrometer.export.stackdriver]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:139
msgid ""
"Stackdriver registry configuration properties.  A property source for "
"configuration of the Stackdriver MeterRegistry, see https://micrometer.io/"
"docs/registry/stackdriver.  Available values:"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:162
msgid ""
"!=== h!Property=Default h!Description !`project-id=MY_PROJECT_ID` !Define "
"the project id used to push data to Stackdriver Monitoring !`publish=true` !"
"By default, gathered metrics will be published to Stackdriver when the "
"MeterRegistry is enabled.  Use this attribute to selectively disable "
"publication of metrics in some environments.  !`step=1m` !The interval at "
"which metrics are sent to Stackdriver Monitoring. The default is 1 minute.  !"
"=== Other Micrometer configuration attributes can also be specified.  --|"
"`Map<String,String>` | a| [[quarkus-micrometer-export-config-runtime-export-"
"config_quarkus.micrometer.export.statsd-statsd]]`link:#quarkus-micrometer-"
"export-config-runtime-export-config_quarkus.micrometer.export.statsd-"
"statsd[quarkus.micrometer.export.statsd]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:171
msgid ""
"StatsD registry configuration properties.  A property source for "
"configuration of the StatsD MeterRegistry, see https://micrometer.io/docs/"
"registry/statsD.  Available values:"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-micrometer-export-config-runtime-export-config.adoc:208
msgid ""
"!=== h!Property=Default h!Description !`flavor=datadog` !Specify the flavor "
"of the StatsD line protocol. The original StatsD line protocol specification "
"is `etsy`. The default value is `datadog`.  !`host=localhost` !The host name "
"of the StatsD agent.  !`maxPacketLength=1400` !Adjust the packet length to "
"keep the payload within your network's MTU.  !`port=8125` !The port of the "
"StatsD agent`.  !`protocol=UDP` !The protocol of the connection to the agent "
"(UDP or TCP).  !`publish=true` !By default, gathered metrics will be "
"published to StatsD when the MeterRegistry is enabled.  Use this attribute "
"to selectively disable publication of metrics in some environments.  !"
"`step=1m` !The interval at which metrics are sent to StatsD Monitoring. The "
"default is 1 minute.  !=== Other Micrometer configuration attributes can "
"also be specified.  As mentioned in the Micrometer StatsD documentation, if "
"you want to customize the metrics sink, do so by providing your own "
"`StatsDMeterRegistry` instance using a CDI `@Produces` method.  --|"
"`Map<String,String>` |"
msgstr ""

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-26 18:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-config/config/quarkus-oidc.adoc:3
msgid ""
"icon:lock[title=Fixed at build time] Configuration property fixed at build "
"time - All other configuration properties are overridable at runtime"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:13
#, no-wrap
msgid ""
"\n"
"h|[[quarkus-oidc_configuration]]link:#quarkus-oidc_configuration[Configuration "
"property]\n"
"\n"
"h|Type\n"
"h|Default\n"
"\n"
"a|icon:lock[title=Fixed at build time] "
"[[quarkus-oidc_quarkus.oidc.enabled]]`link:#quarkus-oidc_quarkus.oidc.enabled[quarkus.oidc.enabled]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:22
msgid ""
"If the OIDC extension is enabled.  --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.tenant-id]]`link:#quarkus-oidc_quarkus.oidc.tenant-id[quarkus.oidc.tenant-id]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:31
msgid ""
"A unique tenant identifier. It must be set by `TenantConfigResolver` "
"providers which resolve the tenant configuration dynamically and is optional "
"in all other cases.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.tenant-enabled]]`link:#quarkus-oidc_quarkus.oidc.tenant-enabled[quarkus.oidc.tenant-enabled]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:40
msgid ""
"If this tenant configuration is enabled.  --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.application-type]]`link:#quarkus-oidc_quarkus.oidc.application-type[quarkus.oidc.application-type]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:49
msgid ""
"The application type, which can be one of the following values from enum "
"`ApplicationType`.  --|`web-app`, `service`, `hybrid` |`service` a| "
"[[quarkus-oidc_quarkus.oidc.auth-server-url]]`link:#quarkus-oidc_quarkus.oidc.auth-server-url[quarkus.oidc.auth-server-url]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:58
msgid ""
"The base URL of the OpenID Connect (OIDC) server, for example, "
"'https://host:port/auth'. OIDC discovery endpoint will be called by default "
"by appending a '.well-known/openid-configuration' path to this URL. Note if "
"you work with Keycloak OIDC server, make sure the base URL is in the "
"following format: 'https://host:port/auth/realms/++{++realm++}++' where "
"'++{++realm++}++' has to be replaced by the name of the Keycloak realm.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.discovery-enabled]]`link:#quarkus-oidc_quarkus.oidc.discovery-enabled[quarkus.oidc.discovery-enabled]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:68
#, no-wrap
msgid ""
"Enables OIDC discovery. If the discovery is disabled then the following "
"properties must be configured: - 'authorization-path' and 'token-path' for "
"the 'web-app' applications - 'jwks-path' or 'introspection-path' for both "
"the 'web-app' and 'service' applications \n"
" 'web-app' applications may also have 'user-info-path' and "
"'end-session-path' properties configured.\n"
"--|boolean \n"
"|`true`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.authorization-path]]`link:#quarkus-oidc_quarkus.oidc.authorization-path[quarkus.oidc.authorization-path]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:77
msgid ""
"Relative path of the OIDC authorization endpoint which authenticates the "
"users. This property must be set for the 'web-app' applications if OIDC "
"discovery is disabled. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.token-path]]`link:#quarkus-oidc_quarkus.oidc.token-path[quarkus.oidc.token-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:86
msgid ""
"Relative path of the OIDC token endpoint which issues ID, access and refresh "
"tokens. This property must be set for the 'web-app' applications if OIDC "
"discovery is disabled. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.user-info-path]]`link:#quarkus-oidc_quarkus.oidc.user-info-path[quarkus.oidc.user-info-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:95
msgid ""
"Relative path of the OIDC userinfo endpoint. This property must only be set "
"for the 'web-app' applications if OIDC discovery is disabled and "
"'authentication.user-info-required' property is enabled. This property will "
"be ignored if the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.introspection-path]]`link:#quarkus-oidc_quarkus.oidc.introspection-path[quarkus.oidc.introspection-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:104
msgid ""
"Relative path of the OIDC RFC7662 introspection endpoint which can "
"introspect both opaque and JWT tokens. This property must be set if OIDC "
"discovery is disabled and 1) the opaque bearer access tokens have to be "
"verified or 2) JWT tokens have to be verified while the cached JWK "
"verification set with no matching JWK is being refreshed. This property will "
"be ignored if the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.jwks-path]]`link:#quarkus-oidc_quarkus.oidc.jwks-path[quarkus.oidc.jwks-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:113
msgid ""
"Relative path of the OIDC JWKS endpoint which returns a JSON Web Key "
"Verification Set. This property should be set if OIDC discovery is disabled "
"and the local JWT verification is required. This property will be ignored if "
"the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.end-session-path]]`link:#quarkus-oidc_quarkus.oidc.end-session-path[quarkus.oidc.end-session-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:122
msgid ""
"Relative path of the OIDC end_session_endpoint. This property must be set if "
"OIDC discovery is disabled and RP Initiated Logout support for the 'web-app' "
"applications is required. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.connection-delay]]`link:#quarkus-oidc_quarkus.oidc.connection-delay[quarkus.oidc.connection-delay]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:132
#, no-wrap
msgid ""
"The maximum amount of time the adapter will try connecting to the currently "
"unavailable OIDC server for. For example, setting it to '20S' will let the "
"adapter keep requesting the connection for up to 20 seconds.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.public-key]]`link:#quarkus-oidc_quarkus.oidc.public-key[quarkus.oidc.public-key]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:141
msgid ""
"Public key for the local JWT token verification. OIDC server connection will "
"not be created when this property is set.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.client-id]]`link:#quarkus-oidc_quarkus.oidc.client-id[quarkus.oidc.client-id]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:150
msgid ""
"The client-id of the application. Each application has a client-id that is "
"used to identify the application --|string | a| "
"[[quarkus-oidc_quarkus.oidc.roles.role-claim-path]]`link:#quarkus-oidc_quarkus.oidc.roles.role-claim-path[quarkus.oidc.roles.role-claim-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:159
msgid ""
"Path to the claim containing an array of groups. It starts from the top "
"level JWT JSON object and can contain multiple segments where each segment "
"represents a JSON object name only, example: \"realm/groups\". Use double "
"quotes with the namespace qualified claim names. This property can be used "
"if a token has no 'groups' claim but has the groups set in a different "
"claim.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.roles.role-claim-separator]]`link:#quarkus-oidc_quarkus.oidc.roles.role-claim-separator[quarkus.oidc.roles.role-claim-separator]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:168
msgid ""
"Separator for splitting a string which may contain multiple group values. It "
"will only be used if the \"role-claim-path\" property points to a custom "
"claim whose value is a string. A single space will be used by default "
"because the standard 'scope' claim may contain a space separated sequence.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.roles.source]]`link:#quarkus-oidc_quarkus.oidc.roles.source[quarkus.oidc.roles.source]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:177
msgid ""
"Source of the principal roles.  --|`idtoken`, `accesstoken`, `userinfo` | a| "
"[[quarkus-oidc_quarkus.oidc.token.issuer]]`link:#quarkus-oidc_quarkus.oidc.token.issuer[quarkus.oidc.token.issuer]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:186
msgid ""
"Expected issuer 'iss' claim value.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.token.audience]]`link:#quarkus-oidc_quarkus.oidc.token.audience[quarkus.oidc.token.audience]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:195
msgid ""
"Expected audience 'aud' claim value which may be a string or an array of "
"strings.  --|list of string | a| "
"[[quarkus-oidc_quarkus.oidc.token.token-type]]`link:#quarkus-oidc_quarkus.oidc.token.token-type[quarkus.oidc.token.token-type]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:204
msgid ""
"Expected token type --|string | a| "
"[[quarkus-oidc_quarkus.oidc.token.lifespan-grace]]`link:#quarkus-oidc_quarkus.oidc.token.lifespan-grace[quarkus.oidc.token.lifespan-grace]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:213
msgid ""
"Life span grace period in seconds. When checking token expiry, current time "
"is allowed to be later than token expiration time by at most the configured "
"number of seconds. When checking token issuance, current time is allowed to "
"be sooner than token issue time by at most the configured number of "
"seconds.  --|int | a| "
"[[quarkus-oidc_quarkus.oidc.token.principal-claim]]`link:#quarkus-oidc_quarkus.oidc.token.principal-claim[quarkus.oidc.token.principal-claim]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:222
msgid ""
"Name of the claim which contains a principal name. By default, the 'upn', "
"'preferred_username' and `sub` claims are checked.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.token.refresh-expired]]`link:#quarkus-oidc_quarkus.oidc.token.refresh-expired[quarkus.oidc.token.refresh-expired]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:231
msgid ""
"Refresh expired ID tokens. If this property is enabled then a refresh token "
"request will be performed if the ID token has expired and, if successful, "
"the local session will be updated with the new set of tokens. Otherwise, the "
"local session will be invalidated and the user redirected to the OpenID "
"Provider to re-authenticate. In this case the user may not be challenged "
"again if the OIDC provider session is still active. For this option be "
"effective the `authentication.session-age-extension` property should also be "
"set to a non-zero value since the refresh token is currently kept in the "
"user session. This option is valid only when the application is of type "
"`ApplicationType++#++WEB_APP`++}++.  --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.token.auto-refresh-interval]]`link:#quarkus-oidc_quarkus.oidc.token.auto-refresh-interval[quarkus.oidc.token.auto-refresh-interval]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:241
#, no-wrap
msgid ""
"Token auto-refresh interval in seconds during the user re-authentication. If "
"this option is set then the valid ID token will be refreshed if it will "
"expire in less than a number of minutes set by this option. The user will "
"still be authenticated if the ID token can no longer be refreshed but is "
"still valid. This option will be ignored if the 'refresh-expired' property "
"is not enabled.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc_quarkus.oidc.token.forced-jwk-refresh-interval[quarkus.oidc.token.forced-jwk-refresh-interval]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:251
#, no-wrap
msgid ""
"Forced JWK set refresh interval in minutes.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|`10M`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.token.header]]`link:#quarkus-oidc_quarkus.oidc.token.header[quarkus.oidc.token.header]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:260
msgid ""
"Custom HTTP header that contains a bearer token. This option is valid only "
"when the application is of type `ApplicationType++#++SERVICE`++}++.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.credentials.secret]]`link:#quarkus-oidc_quarkus.oidc.credentials.secret[quarkus.oidc.credentials.secret]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:269
msgid ""
"Client secret which is used for a 'client_secret_basic' authentication "
"method. Note that a 'client-secret.value' can be used instead but both "
"properties are mutually exclusive.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.credentials.client-secret.value]]`link:#quarkus-oidc_quarkus.oidc.credentials.client-secret.value[quarkus.oidc.credentials.client-secret.value]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:278
msgid ""
"The client secret --|string | a| "
"[[quarkus-oidc_quarkus.oidc.credentials.client-secret.method]]`link:#quarkus-oidc_quarkus.oidc.credentials.client-secret.method[quarkus.oidc.credentials.client-secret.method]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:287
msgid ""
"Authentication method.  --|`basic`, `post` | a| "
"[[quarkus-oidc_quarkus.oidc.credentials.jwt.secret]]`link:#quarkus-oidc_quarkus.oidc.credentials.jwt.secret[quarkus.oidc.credentials.jwt.secret]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:296
msgid ""
"client_secret_jwt: JWT which includes client id as one of its claims is "
"signed by the client secret and is submitted as a 'client_assertion' form "
"parameter, while 'client_assertion_type' parameter is set to "
"\"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\".  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.credentials.jwt.lifespan]]`link:#quarkus-oidc_quarkus.oidc.credentials.jwt.lifespan[quarkus.oidc.credentials.jwt.lifespan]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:305
msgid ""
"JWT life-span in seconds. It will be added to the time it was issued at to "
"calculate the expiration time.  --|int |`10` a| "
"[[quarkus-oidc_quarkus.oidc.proxy.host]]`link:#quarkus-oidc_quarkus.oidc.proxy.host[quarkus.oidc.proxy.host]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:315
#, no-wrap
msgid ""
"The host (name or IP address) of the Proxy.\n"
" Note: If OIDC adapter needs to use a Proxy to talk with OIDC server "
"(Provider), then at least the \"host\" config item must be configured to "
"enable the usage of a Proxy.\n"
"--|string \n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.proxy.port]]`link:#quarkus-oidc_quarkus.oidc.proxy.port[quarkus.oidc.proxy.port]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:324
msgid ""
"The port number of the Proxy. Default value is 80.  --|int |`80` a| "
"[[quarkus-oidc_quarkus.oidc.proxy.username]]`link:#quarkus-oidc_quarkus.oidc.proxy.username[quarkus.oidc.proxy.username]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:333
msgid ""
"The username, if Proxy needs authentication.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.proxy.password]]`link:#quarkus-oidc_quarkus.oidc.proxy.password[quarkus.oidc.proxy.password]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:342
msgid ""
"The password, if Proxy needs authentication.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.authentication.redirect-path]]`link:#quarkus-oidc_quarkus.oidc.authentication.redirect-path[quarkus.oidc.authentication.redirect-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:351
msgid ""
"Relative path for calculating a \"redirect_uri\" query parameter. It has to "
"start from a forward slash and will be appended to the request URI's host "
"and port. For example, if the current request URI is "
"'https://localhost:8080/service' then a 'redirect_uri' parameter will be set "
"to 'https://localhost:8080/' if this property is set to '/' and be the same "
"as the request URI if this property has not been configured. Note the "
"original request URI will be restored after the user has authenticated.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.authentication.restore-path-after-redirect]]`link:#quarkus-oidc_quarkus.oidc.authentication.restore-path-after-redirect[quarkus.oidc.authentication.restore-path-after-redirect]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:360
msgid ""
"If this property is set to 'true' then the original request URI which was "
"used before the authentication will be restored after the user has been "
"redirected back to the application.  --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.authentication.remove-redirect-parameters]]`link:#quarkus-oidc_quarkus.oidc.authentication.remove-redirect-parameters[quarkus.oidc.authentication.remove-redirect-parameters]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:369
msgid ""
"Remove the query parameters such as 'code' and 'state' set by the OIDC "
"server on the redirect URI after the user has authenticated by redirecting a "
"user to the same URI but without the query parameters.  --|boolean |`true` "
"a| "
"[[quarkus-oidc_quarkus.oidc.authentication.verify-access-token]]`link:#quarkus-oidc_quarkus.oidc.authentication.verify-access-token[quarkus.oidc.authentication.verify-access-token]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:378
msgid ""
"Both ID and access tokens are fetched from the OIDC provider as part of the "
"authorization code flow. ID token is always verified on every user request "
"as the primary token which is used to represent the principal and extract "
"the roles. Access token is not verified by default since it is meant to be "
"propagated to the downstream services. The verification of the access token "
"should be enabled if it is injected as a JWT token. Access tokens obtained "
"as part of the code flow will always be verified if "
"`quarkus.oidc.roles.source` property is set to `accesstoken` which means the "
"authorization decision will be based on the roles extracted from the access "
"token. Bearer access tokens are always verified.  --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc_quarkus.oidc.authentication.force-redirect-https-scheme[quarkus.oidc.authentication.force-redirect-https-scheme]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:387
msgid ""
"Force 'https' as the 'redirect_uri' parameter scheme when running behind an "
"SSL terminating reverse proxy. This property, if enabled, will also affect "
"the logout `post_logout_redirect_uri` and the local redirect requests.  "
"--|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.authentication.scopes]]`link:#quarkus-oidc_quarkus.oidc.authentication.scopes[quarkus.oidc.authentication.scopes]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:396
msgid ""
"List of scopes --|list of string | a| "
"[[quarkus-oidc_quarkus.oidc.authentication.cookie-path]]`link:#quarkus-oidc_quarkus.oidc.authentication.cookie-path[quarkus.oidc.authentication.cookie-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:405
msgid ""
"Cookie path parameter value which, if set, will be used for the session, "
"state and post logout cookies. It may need to be set when the redirect path "
"has a root different to that of the original request URL.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.authentication.cookie-domain]]`link:#quarkus-oidc_quarkus.oidc.authentication.cookie-domain[quarkus.oidc.authentication.cookie-domain]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:414
msgid ""
"Cookie domain parameter value which, if set, will be used for the session, "
"state and post logout cookies.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.authentication.user-info-required]]`link:#quarkus-oidc_quarkus.oidc.authentication.user-info-required[quarkus.oidc.authentication.user-info-required]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:423
msgid ""
"If this property is set to 'true' then an OIDC UserInfo endpoint will be "
"called --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.authentication.session-age-extension]]`link:#quarkus-oidc_quarkus.oidc.authentication.session-age-extension[quarkus.oidc.authentication.session-age-extension]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:433
#, no-wrap
msgid ""
"Session age extension in minutes. The user session age property is set to "
"the value of the ID token life-span by default and the user will be "
"redirected to the OIDC provider to re-authenticate once the session has "
"expired. If this property is set to a non-zero value then the expired ID "
"token can be refreshed before the session has expired. This property will be "
"ignored if the `token.refresh-expired` property has not been enabled.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|`5M`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.authentication.java-script-auto-redirect]]`link:#quarkus-oidc_quarkus.oidc.authentication.java-script-auto-redirect[quarkus.oidc.authentication.java-script-auto-redirect]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:442
msgid ""
"If this property is set to 'true' then a normal 302 redirect response will "
"be returned if the request was initiated via JavaScript API such as "
"XMLHttpRequest or Fetch and the current user needs to be (re)authenticated "
"which may not be desirable for Single Page Applications since it "
"automatically following the redirect may not work given that OIDC "
"authorization endpoints typically do not support CORS. If this property is "
"set to `false` then a status code of '499' will be returned to allow the "
"client to handle the redirect manually --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.tls.verification]]`link:#quarkus-oidc_quarkus.oidc.tls.verification[quarkus.oidc.tls.verification]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:451
msgid ""
"Certificate validation and hostname verification, which can be one of the "
"following values from enum `Verification`. Default is required.  "
"--|`required`, `none` |`required` a| "
"[[quarkus-oidc_quarkus.oidc.logout.path]]`link:#quarkus-oidc_quarkus.oidc.logout.path[quarkus.oidc.logout.path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:460
msgid ""
"The relative path of the logout endpoint at the application. If provided, "
"the application is able to initiate the logout through this endpoint in "
"conformance with the OpenID Connect RP-Initiated Logout specification.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.logout.post-logout-path]]`link:#quarkus-oidc_quarkus.oidc.logout.post-logout-path[quarkus.oidc.logout.post-logout-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:469
msgid ""
"Relative path of the application endpoint where the user should be "
"redirected to after logging out from the OpenID Connect Provider. This "
"endpoint URI must be properly registered at the OpenID Connect Provider as a "
"valid redirect URI.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.token-state-manager.strategy]]`link:#quarkus-oidc_quarkus.oidc.token-state-manager.strategy[quarkus.oidc.token-state-manager.strategy]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:478
msgid ""
"Default TokenStateManager strategy.  --|`keep-all-tokens`, `id-token` "
"|`keep-all-tokens` a| "
"[[quarkus-oidc_quarkus.oidc.token-state-manager.split-tokens]]`link:#quarkus-oidc_quarkus.oidc.token-state-manager.split-tokens[quarkus.oidc.token-state-manager.split-tokens]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:487
msgid ""
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned "
"in the authorization code grant response in a single session cookie by "
"default. Enable this property to minimize a session cookie size --|boolean "
"|`false` a| "
"[[quarkus-oidc_quarkus.oidc.authentication.extra-params-extra-params]]`link:#quarkus-oidc_quarkus.oidc.authentication.extra-params-extra-params[quarkus.oidc.authentication.extra-params]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:501
msgid ""
"Additional properties which will be added as the query parameters to the "
"authentication redirect URI.  --|`Map<String,String>` | "
"h|[[quarkus-oidc_quarkus.oidc.named-tenants-additional-named-tenants]]link:#quarkus-oidc_quarkus.oidc.named-tenants-additional-named-tenants[Additional "
"named tenants] h|Type h|Default a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.tenant-id]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.tenant-id[quarkus.oidc.\"tenant\".tenant-id]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:510
msgid ""
"A unique tenant identifier. It must be set by `TenantConfigResolver` "
"providers which resolve the tenant configuration dynamically and is optional "
"in all other cases.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.tenant-enabled]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.tenant-enabled[quarkus.oidc.\"tenant\".tenant-enabled]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:519
msgid ""
"If this tenant configuration is enabled.  --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.application-type]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.application-type[quarkus.oidc.\"tenant\".application-type]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:528
msgid ""
"The application type, which can be one of the following values from enum "
"`ApplicationType`.  --|`web-app`, `service`, `hybrid` |`service` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.auth-server-url]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.auth-server-url[quarkus.oidc.\"tenant\".auth-server-url]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:537
msgid ""
"The base URL of the OpenID Connect (OIDC) server, for example, "
"'https://host:port/auth'. OIDC discovery endpoint will be called by default "
"by appending a '.well-known/openid-configuration' path to this URL. Note if "
"you work with Keycloak OIDC server, make sure the base URL is in the "
"following format: 'https://host:port/auth/realms/++{++realm++}++' where "
"'++{++realm++}++' has to be replaced by the name of the Keycloak realm.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.discovery-enabled]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.discovery-enabled[quarkus.oidc.\"tenant\".discovery-enabled]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:547
#, no-wrap
msgid ""
"Enables OIDC discovery. If the discovery is disabled then the following "
"properties must be configured: - 'authorization-path' and 'token-path' for "
"the 'web-app' applications - 'jwks-path' or 'introspection-path' for both "
"the 'web-app' and 'service' applications \n"
" 'web-app' applications may also have 'user-info-path' and "
"'end-session-path' properties configured.\n"
"--|boolean \n"
"|`true`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authorization-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authorization-path[quarkus.oidc.\"tenant\".authorization-path]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:556
msgid ""
"Relative path of the OIDC authorization endpoint which authenticates the "
"users. This property must be set for the 'web-app' applications if OIDC "
"discovery is disabled. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token-path[quarkus.oidc.\"tenant\".token-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:565
msgid ""
"Relative path of the OIDC token endpoint which issues ID, access and refresh "
"tokens. This property must be set for the 'web-app' applications if OIDC "
"discovery is disabled. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.user-info-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.user-info-path[quarkus.oidc.\"tenant\".user-info-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:574
msgid ""
"Relative path of the OIDC userinfo endpoint. This property must only be set "
"for the 'web-app' applications if OIDC discovery is disabled and "
"'authentication.user-info-required' property is enabled. This property will "
"be ignored if the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.introspection-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.introspection-path[quarkus.oidc.\"tenant\".introspection-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:583
msgid ""
"Relative path of the OIDC RFC7662 introspection endpoint which can "
"introspect both opaque and JWT tokens. This property must be set if OIDC "
"discovery is disabled and 1) the opaque bearer access tokens have to be "
"verified or 2) JWT tokens have to be verified while the cached JWK "
"verification set with no matching JWK is being refreshed. This property will "
"be ignored if the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.jwks-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.jwks-path[quarkus.oidc.\"tenant\".jwks-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:592
msgid ""
"Relative path of the OIDC JWKS endpoint which returns a JSON Web Key "
"Verification Set. This property should be set if OIDC discovery is disabled "
"and the local JWT verification is required. This property will be ignored if "
"the discovery is enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.end-session-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.end-session-path[quarkus.oidc.\"tenant\".end-session-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:601
msgid ""
"Relative path of the OIDC end_session_endpoint. This property must be set if "
"OIDC discovery is disabled and RP Initiated Logout support for the 'web-app' "
"applications is required. This property will be ignored if the discovery is "
"enabled.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.connection-delay]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.connection-delay[quarkus.oidc.\"tenant\".connection-delay]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:611
#, no-wrap
msgid ""
"The maximum amount of time the adapter will try connecting to the currently "
"unavailable OIDC server for. For example, setting it to '20S' will let the "
"adapter keep requesting the connection for up to 20 seconds.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.public-key]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.public-key[quarkus.oidc.\"tenant\".public-key]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:620
msgid ""
"Public key for the local JWT token verification. OIDC server connection will "
"not be created when this property is set.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.client-id]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.client-id[quarkus.oidc.\"tenant\".client-id]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:629
msgid ""
"The client-id of the application. Each application has a client-id that is "
"used to identify the application --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.roles.role-claim-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.roles.role-claim-path[quarkus.oidc.\"tenant\".roles.role-claim-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:638
msgid ""
"Path to the claim containing an array of groups. It starts from the top "
"level JWT JSON object and can contain multiple segments where each segment "
"represents a JSON object name only, example: \"realm/groups\". Use double "
"quotes with the namespace qualified claim names. This property can be used "
"if a token has no 'groups' claim but has the groups set in a different "
"claim.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.roles.role-claim-separator]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.roles.role-claim-separator[quarkus.oidc.\"tenant\".roles.role-claim-separator]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:647
msgid ""
"Separator for splitting a string which may contain multiple group values. It "
"will only be used if the \"role-claim-path\" property points to a custom "
"claim whose value is a string. A single space will be used by default "
"because the standard 'scope' claim may contain a space separated sequence.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.roles.source]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.roles.source[quarkus.oidc.\"tenant\".roles.source]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:656
msgid ""
"Source of the principal roles.  --|`idtoken`, `accesstoken`, `userinfo` | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.issuer]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.issuer[quarkus.oidc.\"tenant\".token.issuer]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:665
msgid ""
"Expected issuer 'iss' claim value.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.audience]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.audience[quarkus.oidc.\"tenant\".token.audience]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:674
msgid ""
"Expected audience 'aud' claim value which may be a string or an array of "
"strings.  --|list of string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.token-type]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.token-type[quarkus.oidc.\"tenant\".token.token-type]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:683
msgid ""
"Expected token type --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.lifespan-grace]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.lifespan-grace[quarkus.oidc.\"tenant\".token.lifespan-grace]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:692
msgid ""
"Life span grace period in seconds. When checking token expiry, current time "
"is allowed to be later than token expiration time by at most the configured "
"number of seconds. When checking token issuance, current time is allowed to "
"be sooner than token issue time by at most the configured number of "
"seconds.  --|int | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.principal-claim]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.principal-claim[quarkus.oidc.\"tenant\".token.principal-claim]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:701
msgid ""
"Name of the claim which contains a principal name. By default, the 'upn', "
"'preferred_username' and `sub` claims are checked.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.refresh-expired]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.refresh-expired[quarkus.oidc.\"tenant\".token.refresh-expired]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:710
msgid ""
"Refresh expired ID tokens. If this property is enabled then a refresh token "
"request will be performed if the ID token has expired and, if successful, "
"the local session will be updated with the new set of tokens. Otherwise, the "
"local session will be invalidated and the user redirected to the OpenID "
"Provider to re-authenticate. In this case the user may not be challenged "
"again if the OIDC provider session is still active. For this option be "
"effective the `authentication.session-age-extension` property should also be "
"set to a non-zero value since the refresh token is currently kept in the "
"user session. This option is valid only when the application is of type "
"`ApplicationType++#++WEB_APP`++}++.  --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.auto-refresh-interval]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.auto-refresh-interval[quarkus.oidc.\"tenant\".token.auto-refresh-interval]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:720
#, no-wrap
msgid ""
"Token auto-refresh interval in seconds during the user re-authentication. If "
"this option is set then the valid ID token will be refreshed if it will "
"expire in less than a number of minutes set by this option. The user will "
"still be authenticated if the ID token can no longer be refreshed but is "
"still valid. This option will be ignored if the 'refresh-expired' property "
"is not enabled.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval[quarkus.oidc.\"tenant\".token.forced-jwk-refresh-interval]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:730
#, no-wrap
msgid ""
"Forced JWK set refresh interval in minutes.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|`10M`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token.header]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token.header[quarkus.oidc.\"tenant\".token.header]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:739
msgid ""
"Custom HTTP header that contains a bearer token. This option is valid only "
"when the application is of type `ApplicationType++#++SERVICE`++}++.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.credentials.secret]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.credentials.secret[quarkus.oidc.\"tenant\".credentials.secret]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:748
msgid ""
"Client secret which is used for a 'client_secret_basic' authentication "
"method. Note that a 'client-secret.value' can be used instead but both "
"properties are mutually exclusive.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.credentials.client-secret.value]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.credentials.client-secret.value[quarkus.oidc.\"tenant\".credentials.client-secret.value]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:757
msgid ""
"The client secret --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.credentials.client-secret.method]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.credentials.client-secret.method[quarkus.oidc.\"tenant\".credentials.client-secret.method]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:766
msgid ""
"Authentication method.  --|`basic`, `post` | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.credentials.jwt.secret]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.credentials.jwt.secret[quarkus.oidc.\"tenant\".credentials.jwt.secret]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:775
msgid ""
"client_secret_jwt: JWT which includes client id as one of its claims is "
"signed by the client secret and is submitted as a 'client_assertion' form "
"parameter, while 'client_assertion_type' parameter is set to "
"\"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\".  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.credentials.jwt.lifespan]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.credentials.jwt.lifespan[quarkus.oidc.\"tenant\".credentials.jwt.lifespan]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:784
msgid ""
"JWT life-span in seconds. It will be added to the time it was issued at to "
"calculate the expiration time.  --|int |`10` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.proxy.host]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.proxy.host[quarkus.oidc.\"tenant\".proxy.host]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:794
#, no-wrap
msgid ""
"The host (name or IP address) of the Proxy.\n"
" Note: If OIDC adapter needs to use a Proxy to talk with OIDC server "
"(Provider), then at least the \"host\" config item must be configured to "
"enable the usage of a Proxy.\n"
"--|string \n"
"|\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.proxy.port]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.proxy.port[quarkus.oidc.\"tenant\".proxy.port]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:803
msgid ""
"The port number of the Proxy. Default value is 80.  --|int |`80` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.proxy.username]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.proxy.username[quarkus.oidc.\"tenant\".proxy.username]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:812
msgid ""
"The username, if Proxy needs authentication.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.proxy.password]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.proxy.password[quarkus.oidc.\"tenant\".proxy.password]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:821
msgid ""
"The password, if Proxy needs authentication.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.redirect-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.redirect-path[quarkus.oidc.\"tenant\".authentication.redirect-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:830
msgid ""
"Relative path for calculating a \"redirect_uri\" query parameter. It has to "
"start from a forward slash and will be appended to the request URI's host "
"and port. For example, if the current request URI is "
"'https://localhost:8080/service' then a 'redirect_uri' parameter will be set "
"to 'https://localhost:8080/' if this property is set to '/' and be the same "
"as the request URI if this property has not been configured. Note the "
"original request URI will be restored after the user has authenticated.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect[quarkus.oidc.\"tenant\".authentication.restore-path-after-redirect]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:839
msgid ""
"If this property is set to 'true' then the original request URI which was "
"used before the authentication will be restored after the user has been "
"redirected back to the application.  --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters[quarkus.oidc.\"tenant\".authentication.remove-redirect-parameters]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:848
msgid ""
"Remove the query parameters such as 'code' and 'state' set by the OIDC "
"server on the redirect URI after the user has authenticated by redirecting a "
"user to the same URI but without the query parameters.  --|boolean |`true` "
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.verify-access-token]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.verify-access-token[quarkus.oidc.\"tenant\".authentication.verify-access-token]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:857
msgid ""
"Both ID and access tokens are fetched from the OIDC provider as part of the "
"authorization code flow. ID token is always verified on every user request "
"as the primary token which is used to represent the principal and extract "
"the roles. Access token is not verified by default since it is meant to be "
"propagated to the downstream services. The verification of the access token "
"should be enabled if it is injected as a JWT token. Access tokens obtained "
"as part of the code flow will always be verified if "
"`quarkus.oidc.roles.source` property is set to `accesstoken` which means the "
"authorization decision will be based on the roles extracted from the access "
"token. Bearer access tokens are always verified.  --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme[quarkus.oidc.\"tenant\".authentication.force-redirect-https-scheme]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:866
msgid ""
"Force 'https' as the 'redirect_uri' parameter scheme when running behind an "
"SSL terminating reverse proxy. This property, if enabled, will also affect "
"the logout `post_logout_redirect_uri` and the local redirect requests.  "
"--|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.scopes]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.scopes[quarkus.oidc.\"tenant\".authentication.scopes]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:875
msgid ""
"List of scopes --|list of string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.extra-params-extra-params]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.extra-params-extra-params[quarkus.oidc.\"tenant\".authentication.extra-params]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:884
msgid ""
"Additional properties which will be added as the query parameters to the "
"authentication redirect URI.  --|`Map<String,String>` | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.cookie-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.cookie-path[quarkus.oidc.\"tenant\".authentication.cookie-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:893
msgid ""
"Cookie path parameter value which, if set, will be used for the session, "
"state and post logout cookies. It may need to be set when the redirect path "
"has a root different to that of the original request URL.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.cookie-domain]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.cookie-domain[quarkus.oidc.\"tenant\".authentication.cookie-domain]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:902
msgid ""
"Cookie domain parameter value which, if set, will be used for the session, "
"state and post logout cookies.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.user-info-required]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.user-info-required[quarkus.oidc.\"tenant\".authentication.user-info-required]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:911
msgid ""
"If this property is set to 'true' then an OIDC UserInfo endpoint will be "
"called --|boolean |`false` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.session-age-extension]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.session-age-extension[quarkus.oidc.\"tenant\".authentication.session-age-extension]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:921
#, no-wrap
msgid ""
"Session age extension in minutes. The user session age property is set to "
"the value of the ID token life-span by default and the user will be "
"redirected to the OIDC provider to re-authenticate once the session has "
"expired. If this property is set to a non-zero value then the expired ID "
"token can be refreshed before the session has expired. This property will be "
"ignored if the `token.refresh-expired` property has not been enabled.\n"
"--|link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor[icon:question-circle[], title=More information "
"about the Duration format]\n"
"|`5M`\n"
"\n"
"\n"
"a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect[quarkus.oidc.\"tenant\".authentication.java-script-auto-redirect]`\n"
"\n"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:930
msgid ""
"If this property is set to 'true' then a normal 302 redirect response will "
"be returned if the request was initiated via JavaScript API such as "
"XMLHttpRequest or Fetch and the current user needs to be (re)authenticated "
"which may not be desirable for Single Page Applications since it "
"automatically following the redirect may not work given that OIDC "
"authorization endpoints typically do not support CORS. If this property is "
"set to `false` then a status code of '499' will be returned to allow the "
"client to handle the redirect manually --|boolean |`true` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.tls.verification]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.tls.verification[quarkus.oidc.\"tenant\".tls.verification]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:939
msgid ""
"Certificate validation and hostname verification, which can be one of the "
"following values from enum `Verification`. Default is required.  "
"--|`required`, `none` |`required` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.logout.path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.logout.path[quarkus.oidc.\"tenant\".logout.path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:948
msgid ""
"The relative path of the logout endpoint at the application. If provided, "
"the application is able to initiate the logout through this endpoint in "
"conformance with the OpenID Connect RP-Initiated Logout specification.  "
"--|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.logout.post-logout-path]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.logout.post-logout-path[quarkus.oidc.\"tenant\".logout.post-logout-path]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:957
msgid ""
"Relative path of the application endpoint where the user should be "
"redirected to after logging out from the OpenID Connect Provider. This "
"endpoint URI must be properly registered at the OpenID Connect Provider as a "
"valid redirect URI.  --|string | a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token-state-manager.strategy]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token-state-manager.strategy[quarkus.oidc.\"tenant\".token-state-manager.strategy]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:966
msgid ""
"Default TokenStateManager strategy.  --|`keep-all-tokens`, `id-token` "
"|`keep-all-tokens` a| "
"[[quarkus-oidc_quarkus.oidc.-tenant-.token-state-manager.split-tokens]]`link:#quarkus-oidc_quarkus.oidc.-tenant-.token-state-manager.split-tokens[quarkus.oidc.\"tenant\".token-state-manager.split-tokens]`"
msgstr ""

#. type: Table
#: upstream/_generated-config/config/quarkus-oidc.adoc:972
msgid ""
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned "
"in the authorization code grant response in a single session cookie by "
"default. Enable this property to minimize a session cookie size --|boolean "
"|`false`"
msgstr ""

#. type: Block title
#: upstream/_generated-config/config/quarkus-oidc.adoc:976
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-config/config/quarkus-oidc.adoc:980
msgid ""
"The format for durations uses the standard `java.time.Duration` format.  You "
"can learn more about it in the "
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() "
"javadoc]."
msgstr ""

#. type: delimited block =
#: upstream/_generated-config/config/quarkus-oidc.adoc:984
msgid ""
"You can also provide duration values starting with a number.  In this case, "
"if the value consists only of a number, the converter treats the value as "
"seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a "
"standard `java.time.Duration` format."
msgstr ""

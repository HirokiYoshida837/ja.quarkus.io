# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-12-29 11:31+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_includes/templates/toc.html:5
#, no-wrap
msgid ""
"{% capture tocWorkspace %}\n"
"    {% comment %}\n"
"        Version 1.0.4\n"
"          https://github.com/allejo/jekyll-toc\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:7
#, no-wrap
msgid ""
"        \"...like all things liquid - where there's a will, and ~36 hours to "
"spare, there's usually a/some way\" ~jaybe\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:10
#, no-wrap
msgid ""
"        Usage:\n"
"            {% include toc.html html=content sanitize=true "
"class=\"inline_toc\" id=\"my_toc\" h_min=2 h_max=3 %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:13
#, no-wrap
msgid ""
"        Parameters:\n"
"            * html       (string) - the HTML of compiled markdown generated "
"by kramdown in Jekyll\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:22
#, no-wrap
msgid ""
"        Optional Parameters:\n"
"            * sanitize   (bool)   : false  - when set to true, the headers "
"will be stripped of any HTML in the TOC\n"
"            * class      (string) :   ''   - a CSS class assigned to the "
"TOC\n"
"            * id         (string) :   ''   - an ID to assigned to the TOC\n"
"            * h_min      (int)    :   1    - the minimum TOC header level to "
"use; any header lower than this value will be ignored\n"
"            * h_max      (int)    :   6    - the maximum TOC header level to "
"use; any header greater than this value will be ignored\n"
"            * ordered    (bool)   : false  - when set to true, an ordered "
"list will be outputted instead of an unordered list\n"
"            * item_class (string) :   ''   - add custom class for each list "
"item; has support for '%level%' placeholder, which is the current heading "
"level\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:26
#, no-wrap
msgid ""
"        Output:\n"
"            An ordered or unordered list representing the table of contents "
"of a markdown block. This snippet will only generate the table of contents "
"and will NOT output the markdown given to it\n"
"    {% endcomment %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:33
#, no-wrap
msgid ""
"    {% capture my_toc %}{% endcapture %}\n"
"    {% assign orderedList = include.ordered | default: false %}\n"
"    {% assign minHeader = include.h_min | default: 1 %}\n"
"    {% assign maxHeader = include.h_max | default: 6 %}\n"
"    {% assign nodes = include.html | split: '<h' %}\n"
"    {% assign firstHeader = true %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:35
#, no-wrap
msgid ""
"    {% capture listModifier %}{% if orderedList %}1.{% else %}-{% endif %}{% "
"endcapture %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:40
#, no-wrap
msgid ""
"    {% for node in nodes %}\n"
"        {% if node == \"\" %}\n"
"            {% continue %}\n"
"        {% endif %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:42
#, no-wrap
msgid ""
"        {% assign headerLevel = node | replace: '\"', '' | slice: 0, 1 | "
"times: 1 %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:46
#, no-wrap
msgid ""
"        {% if headerLevel < minHeader or headerLevel > maxHeader %}\n"
"            {% continue %}\n"
"        {% endif %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:51
#, no-wrap
msgid ""
"        {% if firstHeader %}\n"
"            {% assign firstHeader = false %}\n"
"            {% assign minHeader = headerLevel %}\n"
"        {% endif %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:54
#, no-wrap
msgid ""
"        {% assign indentAmount = headerLevel | minus: minHeader | add: 1 "
"%}\n"
"        {% assign _workspace = node | split: '</h' %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:58
#, no-wrap
msgid ""
"        {% assign _idWorkspace = _workspace[0] | split: 'id=\"' %}\n"
"        {% assign _idWorkspace = _idWorkspace[1] | split: '\"' %}\n"
"        {% assign html_id = _idWorkspace[0] %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:61
#, no-wrap
msgid ""
"        {% capture _hAttrToStrip %}{{ _workspace[0] | split: '>' | first "
"}}>{% endcapture %}\n"
"        {% assign header = _workspace[0] | replace: _hAttrToStrip, '' %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:66
#, no-wrap
msgid ""
"        {% assign space = '' %}\n"
"        {% for i in (1..indentAmount) %}\n"
"            {% assign space = space | prepend: '    ' %}\n"
"        {% endfor %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:70
#, no-wrap
msgid ""
"        {% unless include.item_class == blank %}\n"
"            {% capture listItemClass %}{:.{{ include.item_class | replace: "
"'%level%', headerLevel }}}{% endcapture %}\n"
"        {% endunless %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:73
#, no-wrap
msgid ""
"        {% capture my_toc %}{{ my_toc }}\n"
"{{ space }}{{ listModifier }} {{ listItemClass }} [{% if include.sanitize "
"%}{{ header | strip_html }}{% else %}{{ header }}{% endif %}](#{{ html_id "
"}}){% endcapture %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:75
#, no-wrap
msgid "    {% endfor %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:80
#, no-wrap
msgid ""
"    {% if include.class %}\n"
"        {% capture my_toc %}{:.{{ include.class }}}\n"
"{{ my_toc | lstrip }}{% endcapture %}\n"
"    {% endif %}\n"
msgstr ""

#. type: Plain text
#: upstream/_includes/templates/toc.html:85
#, no-wrap
msgid ""
"    {% if include.id %}\n"
"        {% capture my_toc %}{: #{{ include.id }}}\n"
"{{ my_toc | lstrip }}{% endcapture %}\n"
"    {% endif %}\n"
"{% endcapture %}{% assign tocWorkspace = '' %}{{ my_toc | markdownify | "
"strip }}\n"
msgstr ""

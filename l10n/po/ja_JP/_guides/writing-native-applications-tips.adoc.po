# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-05 12:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/writing-native-applications-tips.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Tips for writing native applications"
msgstr "Quarkus - ネイティブアプリケーションを書くためのヒント"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:11
#, fuzzy
msgid ""
"This guide contains various tips and tricks for getting around problems that "
"might arise when attempting to run Java applications as native executables."
msgstr ""
"このガイドには、Javaアプリケーションをネイティブ実行ファイルとして実行しようとしたときに発生する可能性のある問題を回避するための様々なヒントやコツが記載されています。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:13
#, fuzzy
msgid ""
"Note that we differentiate two contexts where the solution applied might be "
"different:"
msgstr "適用される解が異なる可能性のある2つの文脈を区別していることに注意してください。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:15
#, fuzzy
msgid ""
"in the context of an application, you will rely on configuring the `native-"
"image` configuration by tweaking your `pom.xml`;"
msgstr "`native-image` をアプリケーションのコンテキストで使用する場合、 `pom.xml` ."

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:16
#, fuzzy
msgid ""
"in the context of an extension, Quarkus offers a lot of infrastructure to "
"simplify all of this."
msgstr "拡張機能の文脈では、Quarkusはこれらすべてを単純化するための多くのインフラストラクチャを提供しています。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:18
#, fuzzy
msgid "Please refer to the appropriate section depending on your context."
msgstr "文脈に応じて適切なセクションを参照してください。"

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:19
#, fuzzy, no-wrap
msgid "Supporting native in your application"
msgstr "アプリケーションでネイティブをサポート"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:22
#, fuzzy
msgid ""
"GraalVM imposes a number of constraints and making your application a native "
"executable might require a few tweaks."
msgstr "GraalVMは多くの制約を課しており、アプリケーションをネイティブ実行可能なものにするには、いくつかの調整が必要になるかもしれません。"

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:23
#: upstream/_guides/writing-native-applications-tips.adoc:338
#, fuzzy, no-wrap
msgid "Including resources"
msgstr "リソースを含む"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:27
#, fuzzy
msgid ""
"By default, when building a native executable, GraalVM will not include any "
"of the resources that are on the classpath into the native executable it "
"creates.  Resources that are meant to be part of the native executable need "
"to be configured explicitly."
msgstr ""
"デフォルトでは、ネイティブ実行ファイルをビルドする際に、GraalVMはクラスパス上にあるリソースを作成するネイティブ実行ファイルには含めません。ネイティブ実行ファイルの一部となるリソースは、明示的に設定する必要があります。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:29
#, fuzzy
msgid ""
"Quarkus automatically includes the resources present in `META-INF/resources` "
"(the web resources) but, outside of this directory, you are on your own."
msgstr ""
"Quarkusでは、 `META-INF/resources` "
"（ウェブリソース）にあるリソースが自動的に含まれていますが、このディレクトリ以外の場所では自己責任でお願いします。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:31
#, fuzzy
msgid ""
"To include more resources in the native executable, create a `resources-"
"config.json` (the most common location is within `src/main/resources`) JSON "
"file defining which resources should be included:"
msgstr ""
"ネイティブ実行ファイルにさらに多くのリソースを含めるには、どのリソースを含めるべきかを定義する JSON ファイル `resources-config."
"json` (最も一般的な場所は `src/main/resources` 内) を作成します。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:44
#, no-wrap
msgid ""
"{\n"
"  \"resources\": [\n"
"    {\n"
"      \"pattern\": \".*\\\\.xml$\"\n"
"    },\n"
"    {\n"
"      \"pattern\": \".*\\\\.json$\"\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:48
#, fuzzy
msgid ""
"The patterns are valid Java regexps.  Here we include all the XML files and "
"JSON files into the native executable."
msgstr "パターンは有効なJava正規表現です。ここでは、すべてのXMLファイルとJSONファイルをネイティブ実行ファイルに含めています。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:52
#, fuzzy
msgid ""
"You can find more information about this topic in https://github.com/oracle/"
"graal/blob/master/substratevm/Resources.md[the GraalVM documentation]."
msgstr ""
"このトピックの詳細については、 link:https://github.com/oracle/graal/blob/master/substratevm/"
"Resources.md[GraalVMのドキュメント] を参照してください。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:55
#: upstream/_guides/writing-native-applications-tips.adoc:204
#, fuzzy
msgid ""
"The final order of business is to make the configuration file known to the "
"`native-image` executable by adding the proper configuration to `application."
"properties`:"
msgstr ""
"最後の仕事は、 `application.properties` に適切な設定を追加して、設定ファイルを `native-image` "
"実行ファイルに知らせることです。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:59
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =-H:ResourceConfigurationFiles="
"resources-config.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:63
#, fuzzy
msgid ""
"In the previous snippet we were able to simply use `resources-config.json` "
"instead of specifying the entire path of the file simply because it was "
"added to `src/main/resources`.  If the file had been added to another "
"directory, the proper file path would have had to be specified manually."
msgstr ""
"前のスニペットでは、 `src/main/resources` に追加されたからといってファイルのパス全体を指定するのではなく、単に "
"`resources-config.json` "
"を使用することができました。ファイルが別のディレクトリに追加されていた場合は、適切なファイルパスを手動で指定する必要がありました。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:67
#: upstream/_guides/writing-native-applications-tips.adoc:216
#, fuzzy
msgid ""
"Multiple options may be separated by a comma. For example, one could use:"
msgstr "複数のオプションはカンマで区切ることができます。例えば、次のように使用することができます。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:73
#: upstream/_guides/writing-native-applications-tips.adoc:222
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =\\\n"
"    -H:ResourceConfigurationFiles=resources-config.json,\\\n"
"    -H:ReflectionConfigurationFiles=reflection-config.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:76
#: upstream/_guides/writing-native-applications-tips.adoc:225
#, fuzzy
msgid ""
"in order to ensure that various resources are included and additional "
"reflection is registered."
msgstr "には、様々なリソースが含まれており、追加のリフレクションが登録されていることが確認されています。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:79
#: upstream/_guides/writing-native-applications-tips.adoc:228
#, fuzzy
msgid ""
"If for some reason adding the aforementioned configuration to `application."
"properties` is not desirable, it is possible to configure the build tool to "
"effectively perform the same operation."
msgstr ""
"何らかの理由で `application.properties` "
"に前述の構成を追加することが望ましくない場合には、ビルドツールで実質的に同様の操作を行うように構成することも可能である。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:81
#: upstream/_guides/writing-native-applications-tips.adoc:230
#, fuzzy
msgid "When using Maven, we could use the following configuration:"
msgstr "Mavenを使用する場合は、以下のような構成にすることができました。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:93
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile>\n"
"        <id>native</id>\n"
"        <properties>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"            <quarkus.native.additional-build-args>-H:"
"ResourceConfigurationFiles=resources-config.json</quarkus.native.additional-"
"build-args>\n"
"        </properties>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:95
#, fuzzy, no-wrap
msgid "Registering for reflection"
msgstr "反映のための登録"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:99
#, fuzzy
msgid ""
"When building a native executable, GraalVM operates with a closed world "
"assumption.  It analyzes the call tree and removes all the classes/methods/"
"fields that are not used directly."
msgstr ""
"ネイティブ実行ファイルを構築する際、GraalVMはクローズドワールドを前提に動作します。コールツリーを解析し、直接使用しないクラス/メソッド/"
"フィールドをすべて削除します。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:102
#, fuzzy
msgid ""
"The elements used via reflection are not part of the call tree so they are "
"dead code eliminated (if not called directly in other cases).  To include "
"these elements in your native executable, you need to register them for "
"reflection explicitly."
msgstr ""
"リフレクションで使用される要素はコールツリーの一部ではないので、デッドコードとして排除されます（他のケースでは直接呼び出されない場合）。ネイティブ実行ファイルにこれらの要素を含めるには、反射用に明示的に登録する必要があります。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:104
#, fuzzy
msgid ""
"This is a very common case as JSON libraries typically use reflection to "
"serialize the objects to JSON:"
msgstr "これは、JSONライブラリがリフレクションを使用してオブジェクトをJSONにシリアライズするのが一般的なので、非常によくあるケースです。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:110
#, no-wrap
msgid ""
"    public class Person {\n"
"        private String first;\n"
"        private String last;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:114
#, no-wrap
msgid ""
"        public String getFirst() {\n"
"            return first;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:118
#, no-wrap
msgid ""
"        public void setFirst(String first) {\n"
"            this.first = first;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:122
#, no-wrap
msgid "        public String getLast() {\n"
"            return last;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:127
#, no-wrap
msgid ""
"        public void setValue(String last) {\n"
"            this.last = last;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:132
#, no-wrap
msgid ""
"    @Path(\"/person\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    public class PersonResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:134
#, no-wrap
msgid "        private final Jsonb jsonb;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:138
#, no-wrap
msgid ""
"        public PersonResource() {\n"
"            jsonb = JsonbBuilder.create(new JsonbConfig());\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:144
#, no-wrap
msgid ""
"        @GET\n"
"        public Response list() {\n"
"            return Response.ok(jsonb.fromJson(\"{\\\"first\\\":  "
"\\\"foo\\\", \\\"last\\\":  \\\"bar\\\"}\", Person.class)).build();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:147
#, fuzzy
msgid ""
"If we were to use the code above, we would get an exception like the "
"following when using the native executable:"
msgstr "上記のコードを使用した場合、ネイティブ実行ファイルを使用すると以下のような例外が発生します。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:151
#, no-wrap
msgid ""
"Exception handling request to /person: org.jboss.resteasy.spi."
"UnhandledException: javax.json.bind.JsonbException: Can't create instance of "
"a class: class org.acme.jsonb.Person, No default constructor found\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:154
#, fuzzy
msgid "or if you are using Jackson:"
msgstr "またはジャクソンを使用している場合。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:158
#, no-wrap
msgid ""
"com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer "
"found for class org.acme.jsonb.Person and no properties discovered to create "
"BeanSerializer (to avoid exception, disable SerializationFeature."
"FAIL_ON_EMPTY_BEANS)\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:161
#, fuzzy
msgid ""
"An even nastier possible outcome could be for no exception to be thrown, but "
"instead the JSON result would be completely empty."
msgstr "さらに厄介なのは、例外がスローされずに JSON の結果が完全に空になってしまうことです。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:163
#, fuzzy
msgid "There are two different ways to fix this type of issues."
msgstr "このタイプの問題を解決するには、2つの方法があります。"

#. type: Title ====
#: upstream/_guides/writing-native-applications-tips.adoc:164
#, fuzzy, no-wrap
msgid "Using the @RegisterForReflection annotation"
msgstr "レ ジスターForReflection アノテーションを使用して"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:167
#, fuzzy
msgid ""
"The easiest way to register a class for reflection is to use the "
"`@RegisterForReflection` annotation:"
msgstr "リフレクション用のクラスを登録する最も簡単な方法は、 `@RegisterForReflection` アノテーションを使用することです。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:173
#, no-wrap
msgid "@RegisterForReflection\n"
"public class MyClass {\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/writing-native-applications-tips.adoc:175
#, fuzzy, no-wrap
msgid "Using a configuration file"
msgstr "設定ファイルの使用"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:178
#, fuzzy
msgid ""
"Obviously, adding `@RegisterForReflection` is not possible if the class is "
"in a third-party jar."
msgstr "明らかに、クラスがサードパーティ製の jar にある場合、 `@RegisterForReflection` を追加することはできません。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:180
#, fuzzy
msgid ""
"In this case, you can use a configuration file to register classes for "
"reflection."
msgstr "この場合、設定ファイルを使用してリフレクション用のクラスを登録することができます。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:182
#, fuzzy
msgid ""
"As an example, in order to register all methods of class `com.acme.MyClass` "
"for reflection, we create `reflection-config.json` (the most common location "
"is within `src/main/resources`)"
msgstr ""
"例えば、クラス `com.acme.MyClass` のすべてのメソッドを反映させるために登録するには、 `reflection-config."
"json` を作成します（最も一般的な場所は `src/main/resources` の中にあります）。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:196
#, no-wrap
msgid ""
"[\n"
"  {\n"
"    \"name\" : \"com.acme.MyClass\",\n"
"    \"allDeclaredConstructors\" : true,\n"
"    \"allPublicConstructors\" : true,\n"
"    \"allDeclaredMethods\" : true,\n"
"    \"allPublicMethods\" : true,\n"
"    \"allDeclaredFields\" : true,\n"
"    \"allPublicFields\" : true\n"
"  }\n"
"]\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:201
#, fuzzy
msgid ""
"For more details on the format of this file, please refer to https://github."
"com/oracle/graal/blob/master/substratevm/Reflection.md[the GraalVM "
"documentation]."
msgstr ""
"このファイルのフォーマットの詳細については、 link:https://github.com/oracle/graal/blob/master/"
"substratevm/Reflection.md[GraalVMのドキュメント] を参照してください。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:208
#, no-wrap
msgid ""
"quarkus.native.additional-build-args =-H:ReflectionConfigurationFiles="
"reflection-config.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:212
#, fuzzy
msgid ""
"In the previous snippet we were able to simply use `reflection-config.json` "
"instead of specifying the entire path of the file simply because it was "
"added to `src/main/resources`.  If the file had been added to another "
"directory, the proper file path would have had to be specified manually."
msgstr ""
"前のスニペットでは、 `src/main/resources` に追加されたからといってファイルのパス全体を指定するのではなく、単に "
"`reflection-config.json` "
"を使用することができました。ファイルが別のディレクトリに追加されていた場合は、適切なファイルパスを手動で指定する必要がありました。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:242
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile>\n"
"        <id>native</id>\n"
"        <properties>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"            <quarkus.native.additional-build-args>-H:"
"ReflectionConfigurationFiles=reflection-config.json</quarkus.native."
"additional-build-args>\n"
"        </properties>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:244
#, fuzzy, no-wrap
msgid "Delaying class initialization"
msgstr "クラスの初期化を遅らせる"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:247
#, fuzzy
msgid "By default, Quarkus initializes all classes at build time."
msgstr "デフォルトでは、Quarkusはビルド時にすべてのクラスを初期化します。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:250
#, fuzzy
msgid ""
"There are cases where the initialization of certain classes is done in a "
"static block needs to be postponed to runtime.  Typically omitting such "
"configuration would result in a runtime exception like the following:"
msgstr ""
"特定のクラスの初期化がスタティックブロックで行われる場合、実行時に延期する必要がある場合があります。通常、このような設定を省略すると、以下のような実行時例外が発生します。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:257
#, no-wrap
msgid ""
"Error: No instances are allowed in the image heap for a class that is "
"initialized or reinitialized at image runtime: sun.security.provider."
"NativePRNG\n"
"Trace: object java.security.SecureRandom\n"
"method com.amazonaws.services.s3.model.CryptoConfiguration."
"<init>(CryptoMode)\n"
"Call path from entry point to com.amazonaws.services.s3.model."
"CryptoConfiguration.<init>(CryptoMode):\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:260
#, fuzzy
msgid ""
"If you need to delay the initialization of a class, you can use the `--"
"initialize-at-run-time=<package or class>` configuration knob."
msgstr ""
"クラスの初期化を遅らせる必要がある場合は、 `--initialize-at-run-time=<package or class>` "
"設定ノブを使用します。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:262
#, fuzzy
msgid ""
"It should be added to the `native-image` configuration using the `quarkus."
"native.additional-build-args` configuration property as shown in the "
"examples above."
msgstr ""
"上記の例のように、 `quarkus.native.additional-build-args` 設定プロパティを使用して `native-image` "
"設定に追加する必要があります。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:266
#, fuzzy
msgid ""
"You can find more information about all this in https://github.com/oracle/"
"graal/blob/master/substratevm/ClassInitialization.md[the GraalVM "
"documentation]."
msgstr ""
"これらすべてについての詳細な情報は、 link:https://github.com/oracle/graal/blob/master/"
"substratevm/ClassInitialization.md[GraalVMのドキュメント] を参照してください。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:272
#, fuzzy
msgid ""
"When multiple classes or packages need to be specified via the `quarkus."
"native.additional-build-args` configuration property, the `,` symbol needs "
"to be escaped.  An example of this is the following:"
msgstr ""
"`quarkus.native.additional-build-args` 設定プロパティを介して複数のクラスやパッケージを指定する必要がある場合は、 "
"`,` シンボルをエスケープする必要があります。その例を以下に示します。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:276
#, no-wrap
msgid ""
"quarkus.native.additional-build-args=--initialize-at-run-time=com.example."
"SomeClass\\\\,org.acme.SomeOtherClass\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:279
#, fuzzy
msgid ""
"and in the case of using the Maven configuration instead of `application."
"properties`:"
msgstr "と、 `application.properties` の代わりに Maven 構成を使用する場合。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:283
#, no-wrap
msgid ""
"<quarkus.native.additional-build-args>--initialize-at-run-time=com.example."
"SomeClass\\,org.acme.SomeOtherClass</quarkus.native.additional-build-args>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:286
#: upstream/_guides/writing-native-applications-tips.adoc:383
#, fuzzy, no-wrap
msgid "Managing Proxy Classes"
msgstr "プロキシクラスの管理"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:289
#, fuzzy
msgid ""
"While writing native application you'll need to define proxy classes at "
"image build time by specifying the list of interfaces that they implement."
msgstr "ネイティブアプリケーションを書く際には、イメージのビルド時にプロキシクラスを定義する必要があります。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:291
#, fuzzy
msgid "In such a situation, the error you might encounter is:"
msgstr "そんな中で遭遇する可能性のあるエラーは"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:295
#, no-wrap
msgid ""
"com.oracle.svm.core.jdk.UnsupportedFeatureError: Proxy class defined by "
"interfaces [interface org.apache.http.conn.HttpClientConnectionManager, "
"interface org.apache.http.pool.ConnPoolControl, interface com.amazonaws.http."
"conn.Wrapped] not found. Generating proxy classes at runtime is not "
"supported. Proxy classes need to be defined at image build time by "
"specifying the list of interfaces that they implement. To define proxy "
"classes use -H:DynamicProxyConfigurationFiles=<comma-separated-config-files> "
"and -H:DynamicProxyConfigurationResources=<comma-separated-config-resources> "
"options.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:299
#, fuzzy
msgid ""
"Solving this issue requires adding the `-H:"
"DynamicProxyConfigurationResources=<comma-separated-config-resources>` "
"option and to provide a dynamic proxy configuration file.  You can find all "
"the information about the format of this file in https://github.com/oracle/"
"graal/blob/master/substratevm/DynamicProxy.md#manual-configuration[the "
"GraalVM documentation]."
msgstr ""
"この問題を解決するには、 `-H:DynamicProxyConfigurationResources=<comma-separated-config-"
"resources>` オプションを追加し、ダイナミックプロキシ設定ファイルを提供する必要があります。このファイルのフォーマットについては、 link:"
"https://github.com/oracle/graal/blob/master/substratevm/DynamicProxy."
"md#manual-configuration[GraalVMのドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:301
#, fuzzy, no-wrap
msgid "Supporting native in a Quarkus extension"
msgstr "Quarkusの拡張機能でネイティブをサポートする"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:304
#, fuzzy
msgid ""
"Supporting native in a Quarkus extension is even easier as Quarkus provides "
"a lot of tools to simplify all this."
msgstr ""
"Quarkusの拡張機能でネイティブをサポートすることは、Quarkusがこれらすべてを単純化するための多くのツールを提供しているため、さらに簡単になりました。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:308
#, fuzzy
msgid ""
"Everything described here will only work in the context of Quarkus "
"extensions, it won't work in an application."
msgstr "ここで説明したことはすべて、Quarkus拡張機能のコンテキストでのみ機能し、アプリケーションでは機能しません。"

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:310
#, fuzzy, no-wrap
msgid "Register reflection"
msgstr "反射を登録する"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:313
#, fuzzy
msgid ""
"Quarkus makes registration of reflection in an extension a breeze by using "
"`ReflectiveClassBuildItem`, thus eliminating the need for a JSON "
"configuration file."
msgstr ""
"Quarkusでは、 `ReflectiveClassBuildItem` "
"を使用することで、拡張機能への反射の登録が簡単になり、JSON設定ファイルが不要になります。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:315
#, fuzzy
msgid ""
"To register a class for reflection, one would need to create a Quarkus "
"processor class and add a build step that registers reflection:"
msgstr ""
"リフレクション用のクラスを登録するには、Quarkusプロセッサクラスを作成し、リフレクションを登録するビルドステップを追加する必要があります。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:319
#, no-wrap
msgid "public class SaxParserProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:325
#, no-wrap
msgid ""
"    @BuildStep\n"
"    ReflectiveClassBuildItem reflection() {\n"
"        // since we only need reflection to the constructor of the class, we "
"can specify `false` for both the methods and the fields arguments.\n"
"        return new ReflectiveClassBuildItem(false, false, \"com.sun.org."
"apache.xerces.internal.parsers.SAXParser\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:327
#: upstream/_guides/writing-native-applications-tips.adoc:352
#: upstream/_guides/writing-native-applications-tips.adoc:374
#: upstream/_guides/writing-native-applications-tips.adoc:398
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:332
#, fuzzy
msgid ""
"More information about reflection in GraalVM can be found https://github.com/"
"oracle/graal/blob/master/substratevm/Reflection.md[here]."
msgstr ""
"GraalVMでのリフレクションの詳細については、 link:https://github.com/oracle/graal/blob/master/"
"substratevm/Reflection.md[こちらを] ご覧ください。"

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:334
#, fuzzy, no-wrap
msgid "Alternative with @RegisterForReflection"
msgstr "との代替として @RegisterForReflection を使用します。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:337
#, fuzzy
msgid ""
"As for applications, you can also use the `@RegisterForReflection` "
"annotation if the class is in your extension and not in a third-party jar."
msgstr ""
"アプリケーションに関しては、クラスがサードパーティのjarではなく、拡張機能の中にある場合は、 `@RegisterForReflection` "
"アノテーションを使用することもできます。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:341
#, fuzzy
msgid ""
"In the context of an extension, Quarkus eliminates the need for a JSON "
"configuration file by allowing extension authors to specify a "
"`NativeImageResourceBuildItem`:"
msgstr ""
"Quarkusでは、拡張機能のコンテキストで、拡張機能の作成者が `NativeImageResourceBuildItem` .NET "
"Frameworkを指定できるようにすることで、JSON設定ファイルの必要性を排除しています。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:345
#, no-wrap
msgid "public class ResourcesProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:350
#, no-wrap
msgid ""
"    @BuildStep\n"
"    NativeImageResourceBuildItem nativeImageResourceBuildItem() {\n"
"        return new NativeImageResourceBuildItem(\"META-INF/extra."
"properties\");\n"
"    }\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:357
#, fuzzy
msgid ""
"For more information about GraalVM resource handling in native executables "
"please refer to https://github.com/oracle/graal/blob/master/substratevm/"
"Resources.md[the GraalVM documentation]."
msgstr ""
"ネイティブ実行ファイルでのGraalVMリソースの取り扱いについての詳細は、 link:https://github.com/oracle/graal/"
"blob/master/substratevm/Resources.md[GraalVMのドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_guides/writing-native-applications-tips.adoc:360
#, fuzzy, no-wrap
msgid "Delay class initialization"
msgstr "クラスの初期化を遅らせる"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:363
#, fuzzy
msgid ""
"Quarkus simplifies things by allowing extensions authors to simply register "
"a `RuntimeInitializedClassBuildItem`. A simple example of doing so could be:"
msgstr ""
"Quarkusでは、拡張機能の作者が簡単に `RuntimeInitializedClassBuildItem` "
"を登録できるようにすることで、物事を単純化しています。簡単な例としては、次のようなものが考えられます。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:367
#: upstream/_guides/writing-native-applications-tips.adoc:390
#, no-wrap
msgid "public class S3Processor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:372
#, no-wrap
msgid ""
"    @BuildStep\n"
"    RuntimeInitializedClassBuildItem cryptoConfiguration() {\n"
"        return new RuntimeInitializedClassBuildItem(CryptoConfiguration."
"class.getCanonicalName());\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:377
#, fuzzy
msgid ""
"Using such a construct means that a `--initialize-at-run-time` option will "
"automatically be added to the `native-image` command line."
msgstr ""
"このような構文を使用すると、 `--initialize-at-run-time` オプションが自動的に `native-image` "
"コマンドラインに追加されることを意味します。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:381
#, fuzzy
msgid ""
"For more information about `--initialize-at-run-time`, please read https://"
"github.com/oracle/graal/blob/master/substratevm/ClassInitialization.md[the "
"GraalVM documentation]."
msgstr ""
"`--initialize-at-run-time` の詳細については、 link:https://github.com/oracle/graal/"
"blob/master/substratevm/ClassInitialization.md[GraalVM のドキュメント] をお読みください。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:386
#, fuzzy
msgid ""
"Very similarly, Quarkus allows extensions authors to register a "
"`NativeImageProxyDefinitionBuildItem`. An example of doing so is:"
msgstr ""
"同様に、Quarkusでは、拡張機能の作者が `NativeImageProxyDefinitionBuildItem` "
"を登録することができます。その例としては、以下のようなものがあります。"

#. type: delimited block -
#: upstream/_guides/writing-native-applications-tips.adoc:396
#, no-wrap
msgid ""
"    @BuildStep\n"
"    NativeImageProxyDefinitionBuildItem httpProxies() {\n"
"        return new NativeImageProxyDefinitionBuildItem(\"org.apache.http."
"conn.HttpClientConnectionManager\",\n"
"                \"org.apache.http.pool.ConnPoolControl\", \"com.amazonaws."
"http.conn.Wrapped\");\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:401
#, fuzzy
msgid ""
"Using such a construct means that a `-H:DynamicProxyConfigurationResources` "
"option will automatically be added to the `native-image` command line."
msgstr ""
"このような構文を使用すると、 `-H:DynamicProxyConfigurationResources` オプションが自動的に `native-"
"image` コマンドラインに追加されることを意味します。"

#. type: delimited block =
#: upstream/_guides/writing-native-applications-tips.adoc:405
#, fuzzy
msgid ""
"For more information about Proxy Classes you can read https://github.com/"
"oracle/graal/blob/master/substratevm/DynamicProxy.md[the GraalVM "
"documentation]."
msgstr ""
"プロキシクラスの詳細については、 link:https://github.com/oracle/graal/blob/master/"
"substratevm/DynamicProxy.md[GraalVMのドキュメント] を参照してください。"

#. type: Title ===
#: upstream/_guides/writing-native-applications-tips.adoc:407
#, fuzzy, no-wrap
msgid "Logging with Native Image"
msgstr "ネイティブイメージでのロギング"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:410
#, fuzzy
msgid ""
"If you are using dependencies that require logging components such as Apache "
"Commons Logging or Log4j and are experiencing a `ClassNotFoundException` "
"when building the native executable, you can resolve this by excluding the "
"logging library and adding the corresponding JBoss Logging adapter."
msgstr ""
"Apache Commons Logging や Log4j "
"などのロギングコンポーネントを必要とする依存関係を使用していて、ネイティブ実行ファイルをビルドする際に `ClassNotFoundException` "
"が発生する場合、ロギングライブラリを除外し、対応する JBoss Logging アダプタを追加することで解決できます。"

#. type: Plain text
#: upstream/_guides/writing-native-applications-tips.adoc:411
#, fuzzy
msgid ""
"For more details please refer to the link:logging#logging-adapters[Logging "
"guide]."
msgstr "詳しくはロ link:logging#logging-adapters[ギングガイドを] ご覧ください。"

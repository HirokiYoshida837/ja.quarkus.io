# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-02-12 18:07+0000\n"
"PO-Revision-Date: 2021-02-12 21:40+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/container-image.adoc:6
#, no-wrap
msgid "Quarkus - Container Images"
msgstr "Quarkus - コンテナイメージ"

#. type: Plain text
#: upstream/_guides/container-image.adoc:11
msgid "Quarkus provides extensions for building (and pushing) container images. Currently it supports:"
msgstr "Quarkusは、コンテナイメージを構築（およびプッシュ）するためのエクステンションを提供しています。現在は以下をサポートしています："

#. type: Plain text
#: upstream/_guides/container-image.adoc:13
msgid "<<#jib,Jib>>"
msgstr "<<#jib,Jib>>"

#. type: Plain text
#: upstream/_guides/container-image.adoc:14
msgid "<<#docker,Docker>>"
msgstr "<<#docker,Docker>>"

#. type: Plain text
#: upstream/_guides/container-image.adoc:15
msgid "<<#s2i,S2I>>"
msgstr "<<#s2i,S2I>>"

#. type: Title ==
#: upstream/_guides/container-image.adoc:16
#, no-wrap
msgid "Container Image extensions"
msgstr "コンテナイメージのエクステンション"

#. type: Title ===
#: upstream/_guides/container-image.adoc:19
#, no-wrap
msgid "Jib"
msgstr "Jib"

#. type: Plain text
#: upstream/_guides/container-image.adoc:25
msgid "The extension `quarkus-container-image-jib` is powered by https://github.com/GoogleContainerTools/jib[Jib] for performing container image builds.  The major benefit of using Jib with Quarkus is that all the dependencies (everything found under `target/lib`) are cached in a different layer than the actual application making rebuilds really fast and small (when it comes to pushing).  Another important benefit of using this extension is that it provides the ability to create a container image without having to have any dedicated client side tooling (like Docker) or running daemon processes (like the Docker daemon)  when all that is needed is the ability to push to a container image registry."
msgstr "エクステンション `quarkus-container-image-jib` は、コンテナイメージのビルドを実行するために link:https://github.com/GoogleContainerTools/jib[Jib] を使用しています。JibをQuarkusで使用する主な利点は、すべての依存関係（ `target/lib` の下にあるすべてのもの）が実際のアプリケーションとは別のレイヤーにキャッシュされるため、リビルドが非常に高速かつ小規模に（プッシュする場合には）行えることです。このエクステンションを使用するもう一つの重要な利点は、コンテナイメージレジストリにプッシュする機能さえあれば、専用のクライアントサイドツール（Dockerのような）やデーモンプロセス（Dockerデーモンのような）を実行しなくてもコンテナイメージを作成できることです。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:27
msgid "To use this feature, add the following extension to your project:"
msgstr "この機能を使用するには、以下のエクステンションをプロジェクトに追加します。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:31
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"container-image-jib\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:36
msgid "In situations where all that is needed to build a container image and no push to a registry is necessary (essentially by having set `quarkus.container-image.build=true` and left `quarkus.container-image.push` unset - it defaults to `false`), then this extension creates a container image and registers it with the Docker daemon. This means that although Docker isn't used to build the image, it is nevertheless necessary. Also note that using this mode, the built container image *will* show up when executing `docker images`."
msgstr "コンテナイメージを構築するために必要なのは、レジストリへのプッシュが不要な場合（基本的には `quarkus.container-image.build=true` を設定して `quarkus.container-image.push` のままにしておくことで、デフォルトは `false` になります）、このエクステンションはコンテナイメージを作成し、Docker デーモンに登録します。これは、Dockerはイメージのビルドには使われませんが、それにもかかわらず必要なものであることを意味します。また、このモードを使用すると、 `docker images` を実行するとコンテナいえーじが表示されます。"

#. type: Title ====
#: upstream/_guides/container-image.adoc:37
#, no-wrap
msgid "Including extra files"
msgstr "追加ファイルの追加"

#. type: Plain text
#: upstream/_guides/container-image.adoc:43
msgid "There are cases when additional files (other than ones produced by the Quarkus build) need to be added to a container image.  To support these cases, Quarkus copies any file under `src/main/jib` into the built container image (which is essentially the same idea that the Jib Maven and Gradle plugins support).  For example, the presence of `src/main/jib/foo/bar` would result in `/foo/bar` being added into the container filesystem."
msgstr "コンテナイメージに追加のファイル（Quarkusのビルドで作成されたもの以外）を追加する必要がある場合があります。このような場合をサポートするために、Quarkusは、 `src/main/jib` 以下のファイルをすべてビルドされたコンテナイメージにコピーします（これは、Jib MavenやGradleプラグインがサポートしているのと基本的に同じ考え方です）。例えば、 `src/main/jib/foo/bar` が存在すると、 `/foo/bar` がコンテナファイルシステムに追加されます。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:45
#, no-wrap
msgid "Docker"
msgstr "Docker"

#. type: Plain text
#: upstream/_guides/container-image.adoc:48
msgid "The extension `quarkus-container-image-docker` is using the Docker binary and the generated Dockerfiles under `src/main/docker` in order to perform Docker builds."
msgstr "エクステンション `quarkus-container-image-docker` は、Docker ビルドを実行するために `src/main/docker` 以下で Docker バイナリと生成された Dockerfiles を使用しています。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:50
#: upstream/_guides/container-image.adoc:65
msgid "To use this feature, add the following extension to your project."
msgstr "この機能を使用するには、以下のエクステンションをプロジェクトに追加します。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:54
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"container-image-docker\"\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/container-image.adoc:57
#, no-wrap
msgid "S2I"
msgstr "S2I"

#. type: Plain text
#: upstream/_guides/container-image.adoc:61
msgid "The extension `quarkus-container-image-s2i` is using S2I binary builds in order to perform container builds inside the OpenShift cluster.  The idea behind the binary build is that you just upload the artifact and its dependencies to the cluster and during the build they will be merged to a builder image (defaults to `fabric8/s2i-java`)."
msgstr "エクステンション `quarkus-container-image-s2i` は、OpenShift クラスタ内でコンテナビルドを実行するために S2I バイナリビルドを使用しています。バイナリビルドの考え方は、アーティファクトとその依存関係をクラスタにアップロードするだけで、ビルド中にそれらがビルダーイメージにマージされます（デフォルトは `fabric8/s2i-java` ）。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:63
msgid "The benefit of this approach, is that it can be combined with OpenShift's `DeploymentConfig` that makes it easy to roll out changes to the cluster."
msgstr "このアプローチの利点は、クラスタへの変更を簡単にロールアウトできるOpenShiftの `DeploymentConfig` と組み合わせることができることです。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:69
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"container-image-s2i\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:73
msgid "S2I builds require creating a `BuildConfig` and two `ImageStream` resources, one for the builder image and one for the output image.  The creation of such objects is being taken care of by the Quarkus Kubernetes extension."
msgstr "S2Iのビルドでは、 `BuildConfig` と2つの `ImageStream` リソースを作成する必要があります。このようなオブジェクトの作成は、Quarkus Kubernetesエクステンションによって行われます。"

#. type: Title ==
#: upstream/_guides/container-image.adoc:74
#, no-wrap
msgid "Building"
msgstr "ビルド"

#. type: Plain text
#: upstream/_guides/container-image.adoc:77
msgid "To build a container image for your project, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr "プロジェクト用のコンテナイメージを作成するには、Quarkusがサポートしている方法のいずれかを使用して、 `quarkus.container-image.build=true` を設定する必要があります。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:81
#, no-wrap
msgid "./mvnw clean package -Dquarkus.container-image.build=true\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/container-image.adoc:83
#, no-wrap
msgid "Pushing"
msgstr "プッシュ"

#. type: Plain text
#: upstream/_guides/container-image.adoc:86
msgid "To push a container image for your project, `quarkus.container-image.push=true` needs to be set using any of the ways that Quarkus supports."
msgstr "プロジェクトにコンテナイメージをプッシュするには、Quarkusがサポートしている方法のいずれかを使用して、 `quarkus.container-image.push=true` を設定する必要があります。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:90
#, no-wrap
msgid "./mvnw clean package -Dquarkus.container-image.push=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:93
msgid "If no registry is set (using `quarkus.container-image.registry`) then `docker.io` will be used as the default."
msgstr "レジストリが設定されていない場合 ( `quarkus.container-image.registry` を使用して) は、 `docker.io` がデフォルトとして使用されます。"

#. type: Title ==
#: upstream/_guides/container-image.adoc:94
#, no-wrap
msgid "Selecting among multiple extensions"
msgstr "複数のエクステンションから選択する"

#. type: Plain text
#: upstream/_guides/container-image.adoc:97
msgid "It does not make sense to use multiple extension as part of the same build. When multiple container image extensions are present, an error will be raised to inform the user. The user can either remove the uneeded extensions or select one using `application.properties`."
msgstr "複数のエクステンションを同じビルドの一部として使用するのは意味がありません。複数のコンテナイメージエクステンションが存在する場合、エラーが発生してユーザーに通知されます。ユーザーは不要なエクステンション削除するか、 `application.properties` を使って選択することができます。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:99
msgid "For example, if both `container-image-docker` and `container-image-s2i` are present and the user needs to use `container-image-docker`:"
msgstr "例えば、 `container-image-docker` と `container-image-s2i` の両方が存在し、ユーザーが `container-image-docker` を使用したい場合、"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:103
#, no-wrap
msgid "quarkus.container-image.builder=docker\n"
msgstr "quarkus.container-image.builder=docker\n"

#. type: Title ==
#: upstream/_guides/container-image.adoc:105
#, no-wrap
msgid "Customizing"
msgstr "カスタマイズ"

#. type: Plain text
#: upstream/_guides/container-image.adoc:108
msgid "The following properties can be used to customize the container image build process."
msgstr "以下のプロパティを使用して、コンテナイメージのビルドプロセスをカスタマイズすることができます。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:109
#, no-wrap
msgid "Container Image Options"
msgstr "コンテナイメージオプション"

#. type: Title ====
#: upstream/_guides/container-image.adoc:113
#, no-wrap
msgid "Using CI Environments"
msgstr "CI環境の利用"

#. type: Plain text
#: upstream/_guides/container-image.adoc:117
msgid "Various CI environments provide a ready to use container-image registry which can be combined with the container-image Quarkus extensions in order to effortlessly create and push a Quarkus application to said registry."
msgstr "さまざまなCI環境では、コンテナイメージのQuarkusエクステンションと組み合わせることで、簡単にQuarkusアプリケーションを作成してレジストリにプッシュすることができる、すぐに使えるコンテナイメージレジストリが提供されています。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:121
msgid "For example, https://gitlab.com/[GitLab] provides such a registry and in the provided CI environment, makes available the `CI_REGISTRY_IMAGE` environment variable (see GitLab's https://docs.gitlab.com/ee/ci/variables/[documentation]) for more information), which can be used in Quarkus like so:"
msgstr "例えば、 link:https://gitlab.com/[GitLab] はこのようなレジストリを提供しており、提供されているCI環境では、環境変数 `CI_REGISTRY_IMAGE` （詳しくはGitLabの link:https://docs.gitlab.com/ee/ci/variables/[ドキュメントを] 参照）を利用できるようにしており、Quarkusではこのように利用できるようになっています。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:125
#, no-wrap
msgid "quarkus.container-image.image=${CI_REGISTRY_IMAGE}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:128
msgid "See link:config.adoc#combine-property-env-var[this] for more information on how to combine properties with environment variables."
msgstr "環境変数とプロパティを組み合わせる方法については link:config.adoc#combine-property-env-var[こちら] を参照してください。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:129
#, no-wrap
msgid "Jib Options"
msgstr "Jib Options"

#. type: Plain text
#: upstream/_guides/container-image.adoc:132
msgid "In addition to the generic container image options, the `container-image-jib` also provides the following options:"
msgstr "一般的なコンテナ画像のオプションに加えて、 `container-image-jib` では以下のオプションも用意されています。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:135
#, no-wrap
msgid "Docker Options"
msgstr "Dockerオプション"

#. type: Plain text
#: upstream/_guides/container-image.adoc:138
msgid "In addition to the generic container image options, the `container-image-docker` also provides the following options:"
msgstr "一般的なコンテナ画像のオプションに加えて、 `container-image-docker` では以下のオプションも用意されています。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:141
#, no-wrap
msgid "S2I  Options"
msgstr "S2Iオプション"

#. type: Plain text
#: upstream/_guides/container-image.adoc:144
msgid "In addition to the generic container image options, the `container-image-s2i` also provides the following options:"
msgstr "一般的なコンテナ画像のオプションに加えて、 `container-image-s2i` では以下のオプションも用意されています。"

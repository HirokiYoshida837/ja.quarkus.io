# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-01 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "cesarsaavedra"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "2020-02-10"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "user-story"
msgstr ""

#. type: Title =
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:10
#, fuzzy, no-wrap
msgid "Suomen Asiakastieto Oy chooses Quarkus for their microservices development"
msgstr "Suomen Asiakastieto Oy、マイクロサービス開発にQuarkusを採用。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:13
#, fuzzy, no-wrap
msgid "Asiakastieto logo"
msgstr "アシアカステイトのロゴ"

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:13
#, no-wrap
msgid "Asiakastieto-logo.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:17
#, fuzzy
msgid "Based in Helsinki, Finland, The Asiakastieto Group is a leading provider of innovative, digital business and consumer information services in the Nordic region. In the banking, financial services, and retail industries, Asiakastieto’s products and services support risk management, finance and business administration, credit or loan-related decision-making, sales and marketing.  When the EU introduced its revised Payment Services Directive (PSD2) in 2018 to increase competition, promote innovation, and improve security in the payments industry, Asiakastieto began evaluating how to help its customers manage the impact of the directive. This initiative aligned with one of the company’s key corporate social responsibility goals: to increase trust in society. The Asiakastieto Group has many brands such as UC AB, Intellia Oy, and Suomen Asiakastieto Oy, the latter being the one that we cover in this user story."
msgstr "フィンランドのヘルシンキを拠点とするアジアカスティートグループは、北欧地域における革新的なデジタルビジネスおよび消費者向け情報サービスのリーディングプロバイダーです。銀行、金融サービス、小売業界において、アシアカスティートの製品やサービスは、リスク管理、金融・経営管理、クレジットまたはローン関連の意思決定、販売・マーケティングをサポートしています。EUが2018年に、決済業界における競争の激化、イノベーションの促進、セキュリティーの向上を目的とした改正決済サービス指令(PSD2)を導入した際、Asiakastietoは、顧客が同指令の影響を管理するためにどのように支援するかの評価を開始しました。この取り組みは、企業の社会的責任を果たすための重要な目標の一つである「社会からの信頼を高める」に合致しています。アシアカステトグループには、UC AB、Intellia Oy、Suomen Asiakastieto Oyなど多くのブランドがありますが、今回取り上げたのは後者です。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:18
#, fuzzy, no-wrap
msgid "Why microservices?"
msgstr "なぜマイクロサービスなのか?"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:21
#, fuzzy
msgid "Suomen Asiakastieto Oy has many different departments: Risk Decision, SME & Consumer, Customer Data Management, Digital Processes. Real Estate and Collateral Information, which operates within Digital Processes, had deployed to their application server instance a new application, which happened to have issues while running in production affecting the stability of the application server and hence other applications running on it. This resulted in the need to reboot the application server every time this anomaly occurred leading to unexpected downtime and to a negative customer satisfaction."
msgstr "Suomen Asiakastieto Oyには、さまざまな部門があります。Risk Decision、SME & Consumer、Customer Data Management、Digital Processes。デジタルプロセスの中にある不動産と担保情報部門では、アプリケーションサーバーのインスタンスに新しいアプリケーションをデプロイしていましたが、本番稼働中に問題が発生し、アプリケーションサーバーの安定性に影響を与えていました。その結果、この異常が発生するたびにアプリケーションサーバを再起動する必要があり、予期せぬダウンタイムが発生し、顧客満足度が低下していました。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:23
#, fuzzy
msgid "Because of this, they decided to adopt microservice architectures to introduce better resilience and high-availability into their solutions so that if a microservice or an application went awry, it would not affect the entire system. So, when the time came to start developing their PSD2 project, they decided to start implementing microservices in Thorntail, which is an open source application assembler - similar to Spring Boot - that also implements MicroProfile, an community-driven open source specification for Java microservices. They decided on Thorntail because its functionality and capabilities were close to the application server capabilities they were familiar with. After being in production for a few months, they learned about Quarkus and its innovative approach that rethinks Java for containers, cloud and Kubernetes. Around the same time, they also learned about the end-of-life of Thorntail. Their continued desire to develop new microservices as well as to break their monolithic application servers into microservices made them evaluate Quarkus more in depth."
msgstr "このため、マイクロサービスやアプリケーションに不具合が発生してもシステム全体に影響を与えないように、より優れた耐障害性と高可用性をソリューションに導入するために、マイクロサービスアーキテクチャを採用することにしました。これは、Spring Bootに似たオープンソースのアプリケーションアセンブラーで、Javaマイクロサービスのためのコミュニティ主導のオープンソース仕様であるMicroProfileも実装しています。彼らがThorntailを選択したのは、その機能と機能が、彼らが慣れ親しんでいるアプリケーションサーバーの機能に近かったからです。数ヶ月間運用した後、Quarkusと、コンテナー、クラウド、KubernetesのためにJavaを再考する革新的なアプローチについて学びました。同じ頃、彼らはThorntailの終焉についても知りました。新しいマイクロサービスを開発したい、モノリシックなアプリケーションサーバーをマイクロサービスに分解したいという彼らの継続的な欲求が、Quarkusをより深く評価することになりました。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:24
#, fuzzy, no-wrap
msgid "Their monoliths and existing microservices"
msgstr "彼らのモノリスと既存のマイクロサービス"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:27
#, fuzzy
msgid "With respect to their monoliths, they have about twelve JBoss EAP instances, each running dozens of their applications. As a first step to make the entire system more distributed, they decided to start moving some of these workloads to OpenShift by running many instances of JBoss EAP, each containing a single application. As a result, they experienced high memory consumption. At this point, they started looking into ways to reduce the footprint of these applications running on OpenShift."
msgstr "モノリスに関しては、約 12 個の JBoss EAP インスタンスがあり、それぞれが数十個のアプリケーションを実行しています。システム全体をより分散化するための最初のステップとして、1 つのアプリケーションを含む JBoss EAP の多数のインスタンスを実行することで、これらのワークロードの一部を OpenShift に移行することにしました。その結果、高いメモリー消費量が発生しました。この時点で、彼らはOpenShift上で実行されているこれらのアプリケーションのフットプリントを削減する方法を検討し始めました。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:29
#, fuzzy
msgid "With respect to their existing Thorntail microservices, which they needed to migrate to Quarkus, they noticed that spinning up a Thorntail container was taking about 1 minute to start up. When they migrated it to Quarkus, the service now starts in 0.4 seconds! With this improved startup time, they could scale up their services faster so that they could be readily available faster to process extra traffic leading to a better customer experience during peak times since customers would not have to wait on the browser to have their requests serviced, for example."
msgstr "Quarkusへの移行が必要な既存のThorntailマイクロサービスに関して、Thorntailコンテナーのスピンアップに約1分かかっていることに気づきました。これをQuarkusに移行したところ、サービスが0.4秒で起動するようになりました。このように起動時間が改善されたことで、サービスをより迅速にスケールアップできるようになり、余分なトラフィックを迅速に処理できるようになり、ピーク時の顧客体験の向上につながりました。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:31
#, fuzzy
msgid "In fact, before going into production with Quarkus, Eero Arvonen, Solution Architect at IT Development Finland Asiakasieto Oy, made a comparative analysis between the Thorntail and Quarkus versions of a microservice. This first chart shows a comparison between the original version of one of their Thortail microservices, which used JAX-WS, next to different Quarkus versions of the same microservice."
msgstr "実際、Quarkusを使用して本番運用に入る前に、IT Development Finland Asiakasieto OyのソリューションアーキテクトであるEero Arvonen氏は、マイクロサービスのThorntailバージョンとQuarkusバージョンの比較分析を行いました。この最初の図は、JAX-WSを使用したThortailマイクロサービスのオリジナルバージョンと、同じマイクロサービスの異なるQuarkusバージョンとの比較を示しています。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:33
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:38
#, fuzzy, no-wrap
msgid "Asiakastieto memutil"
msgstr "アシアカスティートメモチル"

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:33
#, no-wrap
msgid "Asiakastieto-Thorntail-vs-Q-mem-util.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:36
#, fuzzy
msgid "This next chart shows the performance and startup time results for the same combinations of microservice versions as the previous graph."
msgstr "次のグラフは、前のグラフと同じマイクロサービスのバージョンの組み合わせでのパフォーマンスと起動時間の結果を示しています。"

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:38
#, no-wrap
msgid "Asiakastieto-Thorntail-vs-Q-perf.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:41
#, fuzzy
msgid "According to Eero, _“migrating from Thorntail to JVM-Quarkus was trivial and memory consumption went down by about 75% while CPU consumption was reduced by about 70%. This was accompanied by a 40% increase in throughput resulting in a faster response time. Migrating to Quarkus native, we found that the application ran at a better throughput even with 50MB of memory which is 95% less than with Thorntail. We also identified a space-time tradeoff between different native Quarkus setups: deploying it with 200MB of memory instead of 50MB will reduce its CPU requirements by two thirds. Thus, if we ever had to balance CPU vs memory within our OpenShift cluster, this would prove useful.”_"
msgstr "Eero氏によると、 _「ThorntailからJVM-Quarkusへの移行は簡単で、メモリー消費量は約75%減少し、CPU消費量は約70%減少しました。これに伴い、スループットが40%向上し、レスポンスタイムが速くなりました。Quarkusネイティブに移行すると、50MBのメモリーでもアプリケーションはThorntailよりも95%少ないスループットで動作することがわかりました。また、異なるQuarkusネイティブ設定間の時空間トレードオフも確認しました。50MBの代わりに200MBのメモリーでデプロイすると、CPU要件が3分の2削減されます。このように、OpenShiftクラスター内でCPUとメモリーのバランスを取る必要があった場合、これは有用であることが証明されるでしょう。_"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:43
#, fuzzy, no-wrap
msgid "Live Coding"
msgstr "ライブコーディング"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:47
#, fuzzy
msgid "They use and like the Quarkus development mode, also known as live coding, a lot. Before Quarkus, they used to use JRebel, for hot replacing but it was unreliable. According to Eero _“Quarkus development mode has by far a better track record.”_ Now that they are writing new microservices, they have made it a best practice to use live coding. With Thorntail, there were manual steps to deploy changes to try them out whereas with Quarkus, the changes are automatically applied to the running process so that the developer can immediately test the application. This makes developers more productive in that they can verify and troubleshoot their code faster.  Eero took it upon himself to deliver a small internal Quarkus workshop, which got developers very excited about this new and innovative technology, _“people are looking forward to working with Quarkus”_, mentioned Eero. Quarkus is getting developers excited and this has led to other developers across the organization to use Quarkus for their projects."
msgstr "彼らはライブコーディングとしても知られるQuarkusの開発モードをよく使い、気に入っています。Quarkusの前は、ホットリプレイスのためにJRebelを使用していましたが、信頼性がありませんでした。Eero氏によると、 _\"Quarkusの開発モードの方が圧倒的に実績がある\"_ とのことです。新しいマイクロサービスを書くようになってからは、ライブコーディングを使うことをベストプラクティスとしています。Thorntailでは、変更を試すために変更をデプロイする手動の手順がありましたが、Quarkusでは、変更が実行中のプロセスに自動的に適用されるため、開発者はすぐにアプリケーションをテストすることができます。これにより、開発者はコードの検証やトラブルシューティングを迅速に行うことができるため、生産性が向上します。Eero氏は、自らの責任で _Quarkus_ の小さな社内ワークショップを開催し、開発者はこの新しく革新的なテクノロジーに興奮しました。人々はQuarkusでの作業を楽しみにしています」とEero氏は述べています。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:48
#, fuzzy, no-wrap
msgid "Learning Quarkus"
msgstr "学習用Quarkus"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:51
#, fuzzy
msgid "_“Quarkus was very easy to pick up”_, according to Eero. In his opinion, the Quarkus guides on https://quarkus.io/ are very good, thorough and comprehensive with great code examples. In addition, he found a very active community in Quarkus. When they ran into problems, they were able to search the internet for the error messages and easily found answers online. In addition, the Quarkus community and Quarkus engineers are very active even on external forums answering questions and helping folks inquiring for help."
msgstr "_\"Quarkusはとても簡単に手に取ることができました\"と_ Eero氏は述べています。彼の意見では、 https://quarkus.io/ のQuarkusガイドは非常に優れていて、コード例が充実していて、包括的です。さらに、彼はQuarkusで非常に活発なコミュニティを見つけました。彼らは問題にぶつかったときには、エラーメッセージをインターネットで検索して、簡単にオンラインで答えを見つけることができました。さらに、QuarkusコミュニティとQuarkusエンジニアは、外部フォーラムでも非常に活発で、質問に答えたり、助けを求めている人を助けたりしています。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:52
#, fuzzy, no-wrap
msgid "Some pain points"
msgstr "いくつかの痛点"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:55
#, fuzzy
msgid "As awesome as Quarkus is, this constantly evolving and innovative technology had some areas for improvement. For example, Eero mentioned that Java API for XML Web Services (JAX-WS) didn’t work on native mode. Also SSL, by default, is disabled but available for HTTP/S, which he needed to use and got it to work following the configuration instructions, which he found complex. In addition, he would like to see improvements in how reflection is currently configured, which was time-consuming to configure because he had to use a trial-and-error approach to get it to work. He’d like to see a way to make this reflection configuration process easier to carry out."
msgstr "Quarkusが素晴らしいのと同様に、この常に進化し続ける革新的な技術には、改善すべき点がいくつかありました。例えば、Eero氏は、Java API for XML Web Services (JAX-WS)がネイティブモードでは動作しないことに言及しました。また、SSLはデフォルトでは無効になっていますが、HTTP/Sでは利用可能で、彼はそれを使用する必要があり、彼は複雑であることを発見した設定手順に従ってそれを動作させるようになりました。さらに、彼は現在のリフレクションの設定方法の改善を希望しています。このリフレクションの設定プロセスをより簡単に行えるようにしてほしいとのことでした。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:56
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "学んだこと"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:59
#, fuzzy
msgid "Because Quarkus takes the approach of a closed world for application development, there needs to be a bit of a mind shift when writing applications. As an example, for their existing applications, Asiakastieto used a configuration manager to read in configuration information (connection URLs, DB connections strings, etc.) at application startup. Since with Quarkus, in native mode, part of the application startup happens during build time, they had to reconfigure the configuration manager to read in the configuration information when the application was run. Although the change was easy to make, it highlights the importance of understanding how Quarkus applications need to be implemented under this new paradigm."
msgstr "Quarkusはアプリケーション開発においてクローズドワールドのアプローチをとっているため、アプリケーションを書く際にはちょっとしたマインドシフトが必要になります。例えば、既存のアプリケーションでは、アプリケーションの起動時に設定情報(接続URL、DB接続文字列など)を読み込むために設定マネージャを使用していました。Quarkusでは、ネイティブモードではアプリケーションの起動の一部はビルド時に行われるため、アプリケーションの実行時に設定情報を読み込むように設定マネージャーを再設定する必要がありました。この変更は簡単にできましたが、この新しいパラダイムの下でQuarkusアプリケーションがどのように実装される必要があるかを理解することの重要性が浮き彫りになりました。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:60
#, fuzzy, no-wrap
msgid "Current state of Quarkus projects"
msgstr "クオークスのプロジェクトの現状"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:63
#, fuzzy
msgid "As mentioned earlier, the Asiakastieto Oy PSD2 project had been implemented in Thorntail microservices and when they learned about Quarkus, the decision was made to migrate their Thorntail microservices to Quarkus. As of this writing, out of the 7 Thorntail microservices in their PSD2 application, one has been migrated to Quarkus and is running in production."
msgstr "前述したように、Asiakastieto OyのPSD2プロジェクトはThorntailマイクロサービスで実装されていましたが、Quarkusの存在を知り、ThorntailマイクロサービスをQuarkusに移行することを決定しました。この記事を書いている時点で、同社のPSD2アプリケーション内の7つのThorntailマイクロサービスのうち、1つはQuarkusに移行され、本番で稼働しています。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:65
#, fuzzy
msgid "Two more microservices have been migrated from Thorntail to Quarkus (native mode) and are currently being tested and will be deployed during their next incremental application update during February 2020."
msgstr "さらに2つのマイクロサービスがThorntailからQuarkus(ネイティブモード)に移行され、現在テスト中で、2020年2月中の次のインクリメンタルアプリケーション更新時にデプロイされる予定です。"

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:66
#, fuzzy, no-wrap
msgid "What’s next"
msgstr "次は何をするか"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:69
#, fuzzy
msgid "When their microservices initiative started one and a half years ago, Asiakastieto Oy decided to use Thorntail as their main technology for Java microservices. With the news of the sunsetting of Thorntail and the introduction of Quarkus, they have established a new policy that every new project will be implemented in Quarkus in JVM mode as a minimum and when feasible use Quarkus in native mode. There are already two new projects that are being implemented in Quarkus at present with more coming in the future."
msgstr "1年半前にマイクロサービスの取り組みを開始したとき、Asiakastieto Oyは、JavaマイクロサービスのメインテクノロジーとしてThorntailを使用することを決定しました。Thorntailの終了とQuarkusの導入というニュースを受けて、新しいプロジェクトはすべてQuarkusで最低限JVMモードで実装し、可能な場合はネイティブモードでQuarkusを使用するという新しいポリシーを確立しました。現在、すでに2つの新しいプロジェクトがQuarkusに実装されていますが、将来的にはさらに多くのプロジェクトが実装される予定です。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:71
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "クオークスの詳細についてはこちらをご覧ください。"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:73
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "クオークスのウェブサイト: http://quarkus.io"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:74
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHubプロジェクト: https://github.com/quarkusio/quarkus"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:75
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "クオークス ツイッター: https://twitter.com/QuarkusIO"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:76
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkus chat: https://quarkusio.zulipchat.com/"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:77
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkusメーリングリスト: https://groups.google.com/forum/#!forum/quarkus-dev"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:78
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[クオークスYouTubeチャンネル]"

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:79
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Quarkusを使う4つの理由]"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: Suomen Asiakastieto Oy chooses Quarkus for their microservices development\n"
#~ "date: 2020-02-10\n"
#~ "tags: user-story\n"
#~ "author: cesarsaavedra\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: Suomen Asiakastieto Oy、マイクロサービス開発にQuarkusを採用。\n"
#~ "date: 2020-02-10\n"
#~ "tags: user-story\n"
#~ "author: cesarsaavedra\n"
#~ "---\n"

# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-01 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, no-wrap
msgid "ewittman"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, no-wrap
msgid "2019-08-01"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "With a little bit of config mojo, it is possible (and useful) to build a native Quarkus application in CircleCI."
msgstr "layout: post date: 2019-08-01 author: ewittman tips: development-tips synopsis: 少しのコンフィグモジョを使えば、CircleCIでネイティブのQuarkusアプリケーションを構築することが可能です(そして便利です)。---"

#. type: YAML Front Matter: tips
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, no-wrap
msgid "development-tips"
msgstr ""

#. type: Title =
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:9
#, fuzzy, no-wrap
msgid "Using CircleCI to Build a Native Quarkus Application"
msgstr "CircleCIを使用してQuarkusのネイティブアプリケーションを構築する"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:15
#, fuzzy
msgid "An important part of any software project, Quarkus applications included, is continuous integration. A popular tool in the CI space is https://circleci.com/[CircleCI], especially with open source projects. There is lots of documentation out there about how to configure CircleCI for a standard Maven project. However, building a native Quarkus executable requires one or two extra steps. This blog post describes how to make it happen."
msgstr "Quarkusアプリケーションを含むあらゆるソフトウェアプロジェクトの重要な部分は、継続的なインテグレーションです。CI空間で人気のあるツールは、特にオープンソースプロジェクトでは link:https://circleci.com/[CircleCI] です。標準のMavenプロジェクトでCircleCIを設定する方法については、多くのドキュメントがあります。しかし、Quarkusのネイティブ実行ファイルを構築するには、1つまたは2つの余分なステップが必要です。このブログ記事では、それを実現する方法を説明します。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:17
#, fuzzy
msgid "If you're in a hurry, just scroll down to the full (and annotated) example at the bottom of this post."
msgstr "お急ぎの方は、この記事の一番下にある(注釈付きの)例文の全文を下にスクロールしてください。"

#. type: Title ==
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:18
#, fuzzy, no-wrap
msgid "Anatomy of a CircleCI Job"
msgstr "サークルCIジョブの解剖学"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:24
#, fuzzy
msgid "If you aren't familiar with CircleCI, a good place to start might be their https://circleci.com/docs/2.0/configuration-reference/[configuration documentation reference].  This blog post assumes you have a basic familiarity with CircleCI and just want a little bit of help configuring a native Quarkus build. For the most part, the job is configured just like any standard Maven build, including:"
msgstr "CircleCIに馴染みがない場合は、CircleCIの link:https://circleci.com/docs/2.0/configuration-reference/[設定ドキュメントリファレンス] から始めるのが良いでしょう。このブログ記事では、CircleCIに基本的な知識があり、Quarkusのネイティブビルドを設定するのに少し手助けが必要な場合を想定しています。ほとんどの場合、ジョブは、以下を含む標準的なMavenビルドと同じように設定されます。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:26
#, fuzzy
msgid "Checkout from source"
msgstr "ソースからのチェックアウト"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:27
#, fuzzy
msgid "Dependency caching"
msgstr "依存関係のキャッシング"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:28
#, fuzzy
msgid "Build"
msgstr "ビルド"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:29
#, fuzzy
msgid "Test"
msgstr "テスト"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:32
#, fuzzy
msgid "However for a native Quarkus build, the extra configuration centers around installing https://www.graalvm.org/[GraalVM] and then performing (and verifying) the native image build."
msgstr "しかし、Quarkusのネイティブビルドでは、 link:https://www.graalvm.org/[GraalVMを] インストールしてから、ネイティブイメージビルドを実行(検証)するという余分な設定が中心になります。"

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:33
#, fuzzy, no-wrap
msgid "Docker vs. Machine"
msgstr "Docker vs. Machine"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:37
#, fuzzy
msgid "CircleCI allows https://circleci.com/docs/2.0/configuration-reference/#docker-$$-$$machine-$$-$$macosexecutor[three types of \"executors\"] (the runtime environment used to perform the build job). These are:"
msgstr "CircleCIでは、 link:https://circleci.com/docs/2.0/configuration-reference/#docker--machine--macosexecutor[3種類の「実行者」] (ビルドジョブを実行するために使用されるランタイム環境)を許可しています。これらは以下の通りです。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:39
#, fuzzy
msgid "docker"
msgstr "ドッカー"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:40
#, fuzzy
msgid "machine"
msgstr "機械"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:41
#, fuzzy
msgid "macos"
msgstr "マコス"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:45
#, fuzzy
msgid "It seems that when performing a build using **docker** it is very common to run out of memory. So it is recommended that you use https://circleci.com/docs/2.0/executor-types/#using-machine[**machine**] for your executor. Fortunately, the default virtual machine that is used already contains most of the build tools needed, including (but by no means limited to):"
msgstr "*dockerを* 使ってビルドを行うと、メモリーが足りなくなることがよくあるようです。そのため、実行者には link:https://circleci.com/docs/2.0/executor-types/#using-machine[*マシンを*] 使用することをお勧めします。幸いなことに、使用されるデフォルトの仮想マシンには、ビルドに必要なツールのほとんどがすでに含まれています(ただし、これに限定されるものではありません)。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:47
#, fuzzy
msgid "Java"
msgstr "ジャワ"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:48
#, fuzzy
msgid "Maven"
msgstr "メイヴン"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:49
#, fuzzy
msgid "Chrome"
msgstr "クローム"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:50
#, fuzzy
msgid "PhantomJS"
msgstr "ファントムJS"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:52
#, fuzzy
msgid "The only build tool you will need that is not pre-installed is GraalVM..."
msgstr "プリインストールされていないビルドツールはGraalVMだけです...。"

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:53
#, fuzzy, no-wrap
msgid "GraalVM and native-image"
msgstr "GraalVMとネイティブイメージ"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:60
#, fuzzy
msgid "In order to successfully build a Quarkus native app using the `mvnw package -Pnative` command, GraalVM must be installed and available at the `GRAALVM_HOME` environment variable. This means that your build config must include the appropriate command(s) needed to download, unpack, and install GraalVM. And you also must configure the `GRAALVM_HOME` environment variable appropriately. There are many ways to install GraalVM, but just one example might be something like this:"
msgstr "`mvnw package -Pnative` コマンドを使用してQuarkusネイティブアプリを正常にビルドするには、GraalVMがインストールされ、 `GRAALVM_HOME` 環境変数で利用できるようになっている必要があります。つまり、ビルド設定には、GraalVMのダウンロード、アンパック、インストールに必要な適切なコマンドが含まれていなければなりません。また、 `GRAALVM_HOME` 環境変数も適切に設定する必要があります。GraalVMをインストールする方法はたくさんありますが、一例を挙げると以下のようになるかもしれません。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:66
#, no-wrap
msgid ""
"      - run:\n"
"          name: Install GraalVM\n"
"          command: curl https://github.com/oracle/graal/releases/download/vm-19.1.1/graalvm-ce-linux-amd64-19.1.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.1.1.tar.gz && mv graalvm-ce-19.1.1 .graalvm && rm graalvm-ce-linux-amd64-19.1.1.tar.gz\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:71
#, fuzzy
msgid "Once GraalVM is installed, you will also need to install https://www.graalvm.org/docs/reference-manual/aot-compilation/[**native-image**], which is an add-on to GraalVM. This is done by using the `gu` utility that comes with GraalVM. In the CircleCI config, it might look something like this:"
msgstr "GraalVMをインストールしたら、GraalVMのアドオンであるnative link:https://www.graalvm.org/docs/reference-manual/aot-compilation/[*-image*] もインストールする必要があります。これは、GraalVMに付属の `gu` ユーティリティーを使用して行います。CircleCIの設定では、以下のようになっているかもしれません。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:77
#, no-wrap
msgid ""
"      - run:\n"
"          name: Install native-image\n"
"          command: $GRAALVM_HOME/bin/gu install native-image\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:81
#, fuzzy
msgid "As mentioned, you will need to set the `GRAALVM_HOME` environment variable. You can either do that globally in the `environment` section of the config, or you can set it separately for each **run** command. It's usually easiest to do the former:"
msgstr "前述したように、環境変数 `GRAALVM_HOME` を設定する必要があります。設定の `environment` セクションでグローバルに設定することもできますし、 *実行* コマンドごとに個別に設定することもできます。通常は前者を設定するのが一番簡単です。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:86
#, no-wrap
msgid ""
"    environment:\n"
"      GRAALVM_HOME: /home/circleci/repo/.graalvm\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:88
#, fuzzy, no-wrap
msgid "Native Build and Verify"
msgstr "ネイティブビルドと検証"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:92
#, fuzzy
msgid "After GraalVM and native-image are installed, you can simply create one or more **run** commands to build and verify your native Quarkus app. It will look like this:"
msgstr "GraalVMとnative-imageがインストールされたら、単純に1つ以上の *実行* コマンドを作成して、ネイティブのQuarkusアプリをビルドして検証することができます。それは次のようになります。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:103
#, no-wrap
msgid ""
"      - run:\n"
"          name: Build (Native)\n"
"          command: ./mvnw clean package -Pnative -DskipTests -Dmaven.test.skip=true\n"
"          no_output_timeout: 30m\n"
"      - run:\n"
"          name: Verify (Native)\n"
"          command: ./mvnw verify -Pnative\n"
"          no_output_timeout: 30m\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:110
#, fuzzy
msgid "You will notice that both commands have an additional setting for `no_output_timeout`. It seems that the **native-image** tool does not always complete in a timely fashion. Sometimes it is quick, but sometimes it takes a little bit of time - more than the CircleCI default timeout of 10 minutes. I'm sure that as the GraalVM native-image tool matures, this will be improved (both the total time it takes to run and the variability). Until then, simply increasing the timeout seems to work well."
msgstr "どちらのコマンドにも `no_output_timeout` の設定が追加されていることに気づくでしょう。 *ネイティブイメージツール* は常にタイムリーに完了するわけではないようです。素早く完了することもあれば、少し時間がかかることもあります - CircleCI のデフォルトのタイムアウト時間である 10 分よりも長いです。GraalVMネイティブイメージツールが成熟するにつれ、これは改善されると思います(実行にかかる総時間と変動性の両方)。それまでは、単にタイムアウト時間を増やすだけでうまくいくようです。"

#. type: Title ==
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:111
#, fuzzy, no-wrap
msgid "Full Example (Annotated)"
msgstr "完全な例(注釈付き"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:115
#, fuzzy
msgid "You probably just skipped all of the information above this point and want to copy/paste the example, don't you? Yeah that's what I would do too! Here is a full working example (**.circleci/config.yml**) of a native Quarkus build job in CircleCI:"
msgstr "あなたはおそらく、この時点で上記の情報をすべてスキップして、例題をコピー&ペーストしたいのではないでしょうか?私もそうしたいと思います。CircleCIでのネイティブQuarkusビルドジョブの完全な動作例 *(.circleci/config.yml* )です。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:137
#, no-wrap
msgid ""
"#\n"
"# Native Quarkus CircleCI configuration file\n"
"#\n"
"version: 2\n"
"jobs:\n"
"  build:\n"
"    # Use \"machine\" instead of e.g. \"docker\" for better/faster results\n"
"    machine: true\n"
"    # Uses a \"medium\" sized machine - maybe increase this to \"large\" if you pay for CircleCI\n"
"    resource_class: medium\n"
"    working_directory: ~/repo\n"
"    environment:\n"
"      MAVEN_OPTS: -Xmx6400m\n"
"      # Set the GRAALVM_HOME env variable to the location where we will be installing GraalVM\n"
"      GRAALVM_HOME: /home/circleci/repo/.graalvm\n"
"    steps:\n"
"      # Checkout the source code\n"
"      # ########################\n"
"      - checkout\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:145
#, no-wrap
msgid ""
"      # Restore any files we may have cached\n"
"      # ########################\n"
"      - restore_cache:\n"
"          keys:\n"
"            - v1-dependencies-{{ checksum \"pom.xml\" }}\n"
"            # fallback to using the latest cache if no exact match is found\n"
"            - v1-dependencies-\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:156
#, no-wrap
msgid ""
"      # Download maven dependencies so that we can cache them\n"
"      # ########################\n"
"      - run:\n"
"          name: Download Dependencies\n"
"          command: mvn dependency:go-offline\n"
"      # Cache the maven dependencies\n"
"      - save_cache:\n"
"          paths:\n"
"            - ~/.m2\n"
"          key: v1-dependencies-{{ checksum \"pom.xml\" }}\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:165
#, no-wrap
msgid ""
"      # Standard maven build and test phases - does not perform a native build (or verify)\n"
"      # ########################\n"
"      - run:\n"
"          name: Build (Standard)\n"
"          command: ./mvnw clean package -DskipTests -Dmaven.test.skip=true\n"
"      - run:\n"
"          name: Verify (Standard)\n"
"          command: ./mvnw test\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:174
#, no-wrap
msgid ""
"      # Install GraalVM and native-image, needed for a native Quarkus build\n"
"      # ########################\n"
"      - run:\n"
"          name: Install GraalVM\n"
"          command: curl https://github.com/oracle/graal/releases/download/vm-19.1.1/graalvm-ce-linux-amd64-19.1.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.1.1.tar.gz && mv graalvm-ce-19.1.1 .graalvm && rm graalvm-ce-linux-amd64-19.1.1.tar.gz\n"
"      - run: \n"
"          name: Install native-image\n"
"          command: $GRAALVM_HOME/bin/gu install native-image\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:185
#, no-wrap
msgid ""
"      # Perform a native Quarkus build and verify\n"
"      # ########################\n"
"      - run:\n"
"          name: Build (Native)\n"
"          command: ./mvnw clean package -Pnative -DskipTests -Dmaven.test.skip=true\n"
"          no_output_timeout: 30m\n"
"      - run:\n"
"          name: Verify (Native)\n"
"          command: ./mvnw verify -Pnative\n"
"          no_output_timeout: 30m\n"
msgstr ""

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"
